"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[62076],{32989:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>p,contentTitle:()=>r,default:()=>c,frontMatter:()=>l,metadata:()=>d,toc:()=>f});var a=n(74848),t=n(28453),o=n(52358);const s='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">fun </span><a href="get-field-definition-or-null-"><span class="token function">getFieldDefinitionOrNull</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">graphqlName<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="../-field-definition/index-">FieldDefinition</a><span class="token operator">?</span></div><p class="paragraph">Gets the <a href="../-field-definition/index-">FieldDefinition</a> by the GraphQL name of the field</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the found <a href="../-field-definition/index-">FieldDefinition</a> or null if none was found</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>graphql</span><wbr><span><span>Name</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the name of the field in the GraphQL schema</p></div></div></div></div></div></div></div>\n',l={},r="getFieldDefinitionOrNull",d={id:"api/graphglue-core/io.github.graphglue.definition/-node-definition/get-field-definition-or-null-",title:"getFieldDefinitionOrNull",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.definition/-node-definition/get-field-definition-or-null-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.definition/-node-definition",slug:"/api/graphglue-core/io.github.graphglue.definition/-node-definition/get-field-definition-or-null-",permalink:"/api/graphglue-core/io.github.graphglue.definition/-node-definition/get-field-definition-or-null-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"getFieldDefinitionOfProperty",permalink:"/api/graphglue-core/io.github.graphglue.definition/-node-definition/get-field-definition-of-property-"},next:{title:"getNeo4jNameOfProperty",permalink:"/api/graphglue-core/io.github.graphglue.definition/-node-definition/get-neo4j-name-of-property-"}},p={},f=[];function g(e){const i={h1:"h1",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.h1,{id:"getfielddefinitionornull",children:"getFieldDefinitionOrNull"}),"\n",(0,a.jsx)(o.A,{dokkaHTML:s})]})}function c(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(g,{...e})}):g(e)}}}]);