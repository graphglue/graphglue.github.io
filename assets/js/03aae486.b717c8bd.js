"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[67911],{52616:(e,i,a)=>{a.r(i),a.d(i,{assets:()=>u,contentTitle:()=>d,default:()=>g,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var t=a(74848),n=a(28453),r=a(52358);const s='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">val </span><a href="definition-">definition</a><span class="token operator">: </span><a href="../../io.github.graphglue.definition/-node-definition/index-">NodeDefinition</a></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>definition</span></span></u></div></span></div><div><div class="title"><p class="paragraph">defines which type of <a href="../../io.github.graphglue.model/-node/index-">Node</a> is fetched</p></div></div></div></div></div></div></div>\n',o={},d="definition",l={id:"api/graphglue-core/io.github.graphglue.data.execution/-query-base/definition-",title:"definition",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.execution/-query-base/definition-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.execution/-query-base",slug:"/api/graphglue-core/io.github.graphglue.data.execution/-query-base/definition-",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-query-base/definition-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"cost",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-query-base/cost-"},next:{title:"entries",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-query-base/entries-"}},u={},c=[];function p(e){const i={h1:"h1",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h1,{id:"definition",children:"definition"}),"\n",(0,t.jsx)(r.A,{dokkaHTML:s})]})}function g(e={}){const{wrapper:i}={...(0,n.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}}}]);