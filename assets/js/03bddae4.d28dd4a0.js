"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[15792],{95140:(a,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>r,default:()=>g,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var t=n(74848),s=n(28453),i=n(52358);const l='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">private </span><span class="token keyword">fun </span><a href="apply-total-count-"><span class="token function">applyTotalCount</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">builder<span class="token operator">: </span><span data-unresolved-link="org.neo4j.cypherdsl.core/StatementBuilder.OrderableOngoingReadingAndWithWithoutWhere///PointingToDeclaration/">StatementBuilder.OrderableOngoingReadingAndWithWithoutWhere</span><span class="token punctuation">, </span></span><span class="parameter ">allNodesCollected<span class="token operator">: </span><span data-unresolved-link="org.neo4j.cypherdsl.core/SymbolicName///PointingToDeclaration/">SymbolicName</span><span class="token punctuation">, </span></span><span class="parameter ">additionalNames<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-list/index.html">List</a><span class="token operator">&lt;</span><span data-unresolved-link="org.neo4j.cypherdsl.core/SymbolicName///PointingToDeclaration/">SymbolicName</span><span class="token operator">&gt;</span><span class="token punctuation">, </span></span><span class="parameter ">totalCount<span class="token operator">: </span><span data-unresolved-link="org.neo4j.cypherdsl.core/SymbolicName///PointingToDeclaration/">SymbolicName</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><span><span class="token annotation builtin">@</span><span data-unresolved-link="org.jetbrains.annotations/NotNull///PointingToDeclaration/"><span class="token annotation builtin">NotNull</span></span>&nbsp;</span><span data-unresolved-link="org.neo4j.cypherdsl.core/StatementBuilder.OrderableOngoingReadingAndWithWithoutWhere///PointingToDeclaration/">StatementBuilder.OrderableOngoingReadingAndWithWithoutWhere</span></div><p class="paragraph">If necessary, adds a with statement to the <code class="lang-kotlin">builder</code> which fetches totalCount</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the new builder</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>builder</span></span></u></div></span></div><div><div class="title"><p class="paragraph">ongoing statement builder</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>all</span><wbr><span>Nodes</span><wbr><span><span>Collected</span></span></u></div></span></div><div><div class="title"><p class="paragraph">name for the variable containing a collection of all nodes</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>additional</span><wbr><span><span>Names</span></span></u></div></span></div><div><div class="title"><p class="paragraph">additional names which should be added to the with statement</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>total</span><wbr><span><span>Count</span></span></u></div></span></div><div><div class="title"><p class="paragraph">name for the variable under which totalCount should be saved</p></div></div></div></div></div></div></div>\n',o={},r="applyTotalCount",p={id:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/apply-total-count-",title:"applyTotalCount",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/apply-total-count-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor",slug:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/apply-total-count-",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/apply-total-count-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"applyTotalCountIfRequired",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/apply-total-count-if-required-"},next:{title:"client",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/client-"}},d={},c=[];function u(a){const e={h1:"h1",...(0,s.R)(),...a.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"applytotalcount",children:"applyTotalCount"}),"\n",(0,t.jsx)(i.A,{dokkaHTML:l})]})}function g(a={}){const{wrapper:e}={...(0,s.R)(),...a.components};return e?(0,t.jsx)(e,{...a,children:(0,t.jsx)(u,{...a})}):u(a)}}}]);