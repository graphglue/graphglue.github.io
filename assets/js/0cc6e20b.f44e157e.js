"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[47652],{22109:(a,n,e)=>{e.r(n),e.d(n,{assets:()=>d,contentTitle:()=>p,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var i=e(74848),t=e(28453),s=e(52358);const o='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">fun </span><a href="generate-authorization-condition-"><span class="token function">generateAuthorizationCondition</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">nodeDefinition<span class="token operator">: </span><a href="../-node-definition/index-">NodeDefinition</a><span class="token punctuation">, </span></span><span class="parameter ">permission<span class="token operator">: </span><a href="../../io.github.graphglue.authorization/-permission/index-">Permission</a></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="../../io.github.graphglue.data.execution/-cypher-condition-generator/index-">CypherConditionGenerator</a></div><p class="paragraph">Generates the authorization condition</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">a condition generator which generates the authorization condition</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>node</span><wbr><span><span>Definition</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the type to generate the authorization condition for</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>permission</span></span></u></div></span></div><div><div class="title"><p class="paragraph">context for condition creation</p></div></div></div></div></div><hr><div class="symbol monospace"><span class="token keyword">private </span><span class="token keyword">fun </span><a href="generate-authorization-condition-"><span class="token function">generateAuthorizationCondition</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">nodeDefinition<span class="token operator">: </span><a href="../-node-definition/index-">NodeDefinition</a><span class="token punctuation">, </span></span><span class="parameter ">permission<span class="token operator">: </span><a href="../../io.github.graphglue.authorization/-permission/index-">Permission</a><span class="token punctuation">, </span></span><span class="parameter ">isAllowed<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-boolean/index.html">Boolean</a></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="../../io.github.graphglue.data.execution/-cypher-condition-generator/index-">CypherConditionGenerator</a></div><p class="paragraph">Generates the authorization condition for a specific type</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">a condition generator which generates the authorization condition</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>node</span><wbr><span><span>Definition</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the type to generate the authorization condition for</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>permission</span></span></u></div></span></div><div><div class="title"><p class="paragraph">context for condition creation</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>is</span><wbr><span><span>Allowed</span></span></u></div></span></div><div><div class="title"><p class="paragraph">if <code class="lang-kotlin">true</code>, allow is assumed to be present and only disallow conditions are checked</p></div></div></div></div></div></div></div>\n',r={},p="generateAuthorizationCondition",l={id:"api/graphglue-core/io.github.graphglue.definition/-node-definition-collection/generate-authorization-condition-",title:"generateAuthorizationCondition",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.definition/-node-definition-collection/generate-authorization-condition-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.definition/-node-definition-collection",slug:"/api/graphglue-core/io.github.graphglue.definition/-node-definition-collection/generate-authorization-condition-",permalink:"/api/graphglue-core/io.github.graphglue.definition/-node-definition-collection/generate-authorization-condition-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"generateAuthorizationAllowRules",permalink:"/api/graphglue-core/io.github.graphglue.definition/-node-definition-collection/generate-authorization-allow-rules-"},next:{title:"generateAuthorizationDisallowRules",permalink:"/api/graphglue-core/io.github.graphglue.definition/-node-definition-collection/generate-authorization-disallow-rules-"}},d={},c=[];function u(a){const n={h1:"h1",...(0,t.R)(),...a.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"generateauthorizationcondition",children:"generateAuthorizationCondition"}),"\n",(0,i.jsx)(s.A,{dokkaHTML:o})]})}function h(a={}){const{wrapper:n}={...(0,t.R)(),...a.components};return n?(0,i.jsx)(n,{...a,children:(0,i.jsx)(u,{...a})}):u(a)}}}]);