"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[78088],{88288:(i,e,n)=>{n.r(e),n.d(e,{assets:()=>h,contentTitle:()=>s,default:()=>g,frontMatter:()=>r,metadata:()=>p,toc:()=>d});var a=n(74848),t=n(28453),l=n(52358);const o='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">val </span><a href="is-nullable-">isNullable</a><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-boolean/index.html">Boolean</a></div><p class="paragraph">Whether the property is nullable in the database Does NOT consider the <a href="../../io.github.graphglue.model/-graph-q-l-nullable/index-">GraphQLNullable</a> annotation</p></div></div>\n',r={},s="isNullable",p={id:"api/graphglue-core/io.github.graphglue.definition/-one-relationship-definition/is-nullable-",title:"isNullable",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.definition/-one-relationship-definition/is-nullable-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.definition/-one-relationship-definition",slug:"/api/graphglue-core/io.github.graphglue.definition/-one-relationship-definition/is-nullable-",permalink:"/api/graphglue-core/io.github.graphglue.definition/-one-relationship-definition/is-nullable-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"OneRelationshipDefinition",permalink:"/api/graphglue-core/io.github.graphglue.definition/-one-relationship-definition/-one-relationship-definition-"},next:{title:"OneRelationshipFieldDefinition",permalink:"/api/graphglue-core/io.github.graphglue.definition/-one-relationship-field-definition/index-"}},h={},d=[];function u(i){const e={h1:"h1",...(0,t.R)(),...i.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h1,{id:"isnullable",children:"isNullable"}),"\n",(0,a.jsx)(l.A,{dokkaHTML:o})]})}function g(i={}){const{wrapper:e}={...(0,t.R)(),...i.components};return e?(0,a.jsx)(e,{...i,children:(0,a.jsx)(u,{...i})}):u(i)}}}]);