"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[84984],{62885:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>p,toc:()=>l});var n=a(74848),r=a(28453),s=a(52358);const u='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">private </span><span class="token keyword">fun </span><a href="generate-empty-main-sub-query-result-statement-"><span class="token function">generateEmptyMainSubQueryResultStatement</span></a><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">: </span><a href="../-statement-with-result-nodes-and-nodes/index-">StatementWithResultNodesAndNodes</a></div><p class="paragraph">Generates a subquery res which return no nodes</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the generated statement, and two names referring to empty collections</p></span></div></div>\n',o={},i="generateEmptyMainSubQueryResultStatement",p={id:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/generate-empty-main-sub-query-result-statement-",title:"generateEmptyMainSubQueryResultStatement",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/generate-empty-main-sub-query-result-statement-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor",slug:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/generate-empty-main-sub-query-result-statement-",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/generate-empty-main-sub-query-result-statement-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"generateCursorFilterExpression",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/generate-cursor-filter-expression-"},next:{title:"generateExtensionFields",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/generate-extension-fields-"}},c={},l=[];function d(e){const t={h1:"h1",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"generateemptymainsubqueryresultstatement",children:"generateEmptyMainSubQueryResultStatement"}),"\n",(0,n.jsx)(s.A,{dokkaHTML:u})]})}function g(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);