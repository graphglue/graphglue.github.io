"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4194],{28991:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>d,contentTitle:()=>p,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>g});var t=s(74848),o=s(28453),r=s(52358);const n='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">private </span><span class="token keyword">fun </span><a href="get-nodes-to-save-recursive-"><span class="token function">getNodesToSaveRecursive</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">nodes<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-iterable/index.html">Iterable</a><span class="token operator">&lt;</span><a href="../../io.github.graphglue.model/-node/index-">Node</a><span class="token operator">&gt;</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-set/index.html">Set</a><span class="token operator">&lt;</span><a href="../../io.github.graphglue.model/-node/index-">Node</a><span class="token operator">&gt;</span></div><p class="paragraph">Gets a set of nodes which should be saved</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the set of <a href="../../io.github.graphglue.model/-node/index-">Node</a>s to be saved</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>nodes</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the nodes to traverse the relationships from</p></div></div></div></div></div></div></div>\n',i={},p="getNodesToSaveRecursive",l={id:"api/graphglue-core/io.github.graphglue.data.repositories/-graphglue-neo4j-operations/get-nodes-to-save-recursive-",title:"getNodesToSaveRecursive",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.repositories/-graphglue-neo4j-operations/get-nodes-to-save-recursive-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.repositories/-graphglue-neo4j-operations",slug:"/api/graphglue-core/io.github.graphglue.data.repositories/-graphglue-neo4j-operations/get-nodes-to-save-recursive-",permalink:"/api/graphglue-core/io.github.graphglue.data.repositories/-graphglue-neo4j-operations/get-nodes-to-save-recursive-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"executeStatement",permalink:"/api/graphglue-core/io.github.graphglue.data.repositories/-graphglue-neo4j-operations/execute-statement-"},next:{title:"getNodesToSave",permalink:"/api/graphglue-core/io.github.graphglue.data.repositories/-graphglue-neo4j-operations/get-nodes-to-save-"}},d={},g=[];function c(e){const a={h1:"h1",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.h1,{id:"getnodestosaverecursive",children:"getNodesToSaveRecursive"}),"\n",(0,t.jsx)(r.A,{dokkaHTML:n})]})}function u(e={}){const{wrapper:a}={...(0,o.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);