"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9338],{38516:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>l,default:()=>g,frontMatter:()=>r,metadata:()=>p,toc:()=>c});var a=n(74848),t=n(28453),o=n(52358);const s='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">inline </span><span class="token keyword">fun </span><span class="token operator">&lt;</span><a href="get-filter-definition-">T</a><span class="token operator"> : </span><a href="../../io.github.graphglue.model/-node/index-">Node</a><span class="token operator">&gt; </span><a href="get-filter-definition-"><span class="token function">getFilterDefinition</span></a><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">: </span><a href="../-filter-definition/index-">FilterDefinition</a><span class="token operator">&lt;</span><a href="get-filter-definition-">T</a><span class="token operator">&gt;</span><span class="token operator">?</span></div><p class="paragraph">Gets a <a href="../-filter-definition/index-">FilterDefinition</a> by <a href="../../io.github.graphglue.model/-node/index-">Node</a> type</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the found <a href="../-filter-definition/index-">FilterDefinition</a> or null if none was found</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>T</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the type of node to get the <a href="../-filter-definition/index-">FilterDefinition</a> for</p></div></div></div></div></div><hr><div class="symbol monospace"><span class="token keyword">fun </span><span class="token operator">&lt;</span><a href="get-filter-definition-">T</a><span class="token operator"> : </span><a href="../../io.github.graphglue.model/-node/index-">Node</a><span class="token operator">&gt; </span><a href="get-filter-definition-"><span class="token function">getFilterDefinition</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">nodeType<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.reflect/-k-class/index.html">KClass</a><span class="token operator">&lt;</span><span class="token keyword">out </span><a href="../../io.github.graphglue.model/-node/index-">Node</a><span class="token operator">&gt;</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="../-filter-definition/index-">FilterDefinition</a><span class="token operator">&lt;</span><a href="get-filter-definition-">T</a><span class="token operator">&gt;</span><span class="token operator">?</span></div><p class="paragraph">Gets a <a href="../-filter-definition/index-">FilterDefinition</a> by <a href="../../io.github.graphglue.model/-node/index-">Node</a> type</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the found <a href="../-filter-definition/index-">FilterDefinition</a> or null if none was found</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>node</span><wbr><span><span>Type</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the type of node to get the <a href="../-filter-definition/index-">FilterDefinition</a> for</p></div></div></div></div></div></div></div>\n',r={},l="getFilterDefinition",p={id:"api/graphglue-core/io.github.graphglue.connection.filter.definition/-filter-definition-collection/get-filter-definition-",title:"getFilterDefinition",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.filter.definition/-filter-definition-collection/get-filter-definition-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.filter.definition/-filter-definition-collection",slug:"/api/graphglue-core/io.github.graphglue.connection.filter.definition/-filter-definition-collection/get-filter-definition-",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.definition/-filter-definition-collection/get-filter-definition-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"backingCollection",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.definition/-filter-definition-collection/backing-collection-"},next:{title:"FilterEntryDefinition",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.definition/-filter-entry-definition/index-"}},d={},c=[];function f(e){const i={h1:"h1",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.h1,{id:"getfilterdefinition",children:"getFilterDefinition"}),"\n",(0,a.jsx)(o.A,{dokkaHTML:s})]})}function g(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(f,{...e})}):f(e)}}}]);