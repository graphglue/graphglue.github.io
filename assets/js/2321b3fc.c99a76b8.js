"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[21897],{63301:(a,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>d,toc:()=>c});var t=n(74848),i=n(28453),s=n(52358);const r='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">nodeQueryParser<span class="token operator">: </span><a href="../../io.github.graphglue.data.execution/-node-query-parser/index-">NodeQueryParser</a><span class="token punctuation">, </span></span><span class="parameter ">nodeQueryEngine<span class="token operator">: </span><a href="../../io.github.graphglue.data.execution/-node-query-engine/index-">NodeQueryEngine</a></span></span><span class="token punctuation">)</span></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>node</span><wbr><span>Query</span><wbr><span><span>Parser</span></span></u></div></span></div><div><div class="title"><p class="paragraph">used to generate the Cypher query</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>node</span><wbr><span>Query</span><wbr><span><span>Engine</span></span></u></div></span></div><div><div class="title"><p class="paragraph">used to execute the Cypher query</p></div></div></div></div></div></div></div>\n',o={},l="LazyLoadingContext",d={id:"api/graphglue-core/io.github.graphglue.data/-lazy-loading-context/-lazy-loading-context-",title:"LazyLoadingContext",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data/-lazy-loading-context/-lazy-loading-context-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data/-lazy-loading-context",slug:"/api/graphglue-core/io.github.graphglue.data/-lazy-loading-context/-lazy-loading-context-",permalink:"/api/graphglue-core/io.github.graphglue.data/-lazy-loading-context/-lazy-loading-context-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"LazyLoadingContext",permalink:"/api/graphglue-core/io.github.graphglue.data/-lazy-loading-context/index-"},next:{title:"nodeDefinitionCollection",permalink:"/api/graphglue-core/io.github.graphglue.data/-lazy-loading-context/node-definition-collection-"}},p={},c=[];function g(a){const e={h1:"h1",...(0,i.R)(),...a.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"lazyloadingcontext",children:"LazyLoadingContext"}),"\n",(0,t.jsx)(s.A,{dokkaHTML:r})]})}function u(a={}){const{wrapper:e}={...(0,i.R)(),...a.components};return e?(0,t.jsx)(e,{...a,children:(0,t.jsx)(g,{...a})}):g(a)}}}]);