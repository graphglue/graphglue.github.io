"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[92460],{22882:(a,e,n)=>{n.r(e),n.d(e,{assets:()=>u,contentTitle:()=>o,default:()=>g,frontMatter:()=>p,metadata:()=>l,toc:()=>c});var s=n(74848),r=n(28453),t=n(52358);const i='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">suspend </span><span class="token keyword">fun </span><a href="get-search-query-"><span class="token function">getSearchQuery</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter "><span><span class="token annotation builtin">@</span><span data-unresolved-link="org.springframework.beans.factory.annotation/Autowired///PointingToDeclaration/"><span class="token annotation builtin">Autowired</span></span>&nbsp;</span>nodeQueryParser<span class="token operator">: </span><a href="../../io.github.graphglue.data.execution/-node-query-parser/index-">NodeQueryParser</a><span class="token punctuation">, </span></span><span class="parameter ">dataFetchingEnvironment<span class="token operator">: </span><span data-unresolved-link="graphql.schema/DataFetchingEnvironment///PointingToDeclaration/">DataFetchingEnvironment</span><span class="token punctuation">, </span></span><span class="parameter "><span><span class="token annotation builtin">@</span><span data-unresolved-link="org.springframework.beans.factory.annotation/Autowired///PointingToDeclaration/"><span class="token annotation builtin">Autowired</span></span>&nbsp;</span>nodeQueryEngine<span class="token operator">: </span><a href="../../io.github.graphglue.data.execution/-node-query-engine/index-">NodeQueryEngine</a></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-list/index.html">List</a><span class="token operator">&lt;</span><a href="index-">T</a><span class="token operator">&gt;</span></div><p class="paragraph">Handles the search query for the specific <a href="../../io.github.graphglue.model/-node/index-">Node</a> type</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the result</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>node</span><wbr><span>Query</span><wbr><span><span>Parser</span></span></u></div></span></div><div><div class="title"><p class="paragraph">used to parse the query</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>data</span><wbr><span>Fetching</span><wbr><span><span>Environment</span></span></u></div></span></div><div><div class="title"><p class="paragraph">necessary to generate the node query, used for caching</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>node</span><wbr><span>Query</span><wbr><span><span>Engine</span></span></u></div></span></div><div><div class="title"><p class="paragraph">used to execute the query</p></div></div></div></div></div></div></div>\n',p={},o="getSearchQuery",l={id:"api/graphglue-core/io.github.graphglue.graphql.query/-top-level-query-provider/get-search-query-",title:"getSearchQuery",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.graphql.query/-top-level-query-provider/get-search-query-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.graphql.query/-top-level-query-provider",slug:"/api/graphglue-core/io.github.graphglue.graphql.query/-top-level-query-provider/get-search-query-",permalink:"/api/graphglue-core/io.github.graphglue.graphql.query/-top-level-query-provider/get-search-query-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"getNodeQuery",permalink:"/api/graphglue-core/io.github.graphglue.graphql.query/-top-level-query-provider/get-node-query-"},next:{title:"nodeDefinition",permalink:"/api/graphglue-core/io.github.graphglue.graphql.query/-top-level-query-provider/node-definition-"}},u={},c=[];function d(a){const e={h1:"h1",...(0,r.R)(),...a.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"getsearchquery",children:"getSearchQuery"}),"\n",(0,s.jsx)(t.A,{dokkaHTML:i})]})}function g(a={}){const{wrapper:e}={...(0,r.R)(),...a.components};return e?(0,s.jsx)(e,{...a,children:(0,s.jsx)(d,{...a})}):d(a)}}}]);