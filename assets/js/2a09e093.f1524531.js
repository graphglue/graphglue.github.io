"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[89042],{98805:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var o=r(74848),t=r(28453),p=r(52358);const n='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">protected </span><span class="token keyword">fun </span><span class="token operator">&lt;</span><a href="-node-property-">T</a><span class="token operator"> : </span><a href="index-">Node</a><span class="token operator">?</span><span class="token operator">&gt; </span><a href="-node-property-"><span class="token function">NodeProperty</span></a><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.properties/-property-delegate-provider/index.html">PropertyDelegateProvider</a><span class="token operator">&lt;</span><a href="index-">Node</a><span class="token punctuation">, </span><a href="../../io.github.graphglue.model.property/-node-property-delegate/index-">NodePropertyDelegate</a><span class="token operator">&lt;</span><a href="-node-property-">T</a><span class="token operator">&gt;</span><span class="token operator">&gt;</span></div><p class="paragraph">Creates a new node property used for one sides</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">a provider for the property delegate</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>T</span></span></u></div></span></div><div><div class="title"><p class="paragraph">value type</p></div></div></div></div></div></div></div>\n',s={},i="NodeProperty",l={id:"api/graphglue-core/io.github.graphglue.model/-node/-node-property-",title:"NodeProperty",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.model/-node/-node-property-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.model/-node",slug:"/api/graphglue-core/io.github.graphglue.model/-node/-node-property-",permalink:"/api/graphglue-core/io.github.graphglue.model/-node/-node-property-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Node",permalink:"/api/graphglue-core/io.github.graphglue.model/-node/index-"},next:{title:"NodeSetProperty",permalink:"/api/graphglue-core/io.github.graphglue.model/-node/-node-set-property-"}},d={},c=[];function g(e){const a={h1:"h1",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(a.h1,{id:"nodeproperty",children:"NodeProperty"}),"\n",(0,o.jsx)(p.A,{dokkaHTML:n})]})}function u(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,o.jsx)(a,{...e,children:(0,o.jsx)(g,{...e})}):g(e)}}}]);