"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[90622],{3818:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>o,default:()=>g,frontMatter:()=>l,metadata:()=>p,toc:()=>u});var s=n(74848),t=n(28453),r=n(52358);const i='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">private </span><span class="token keyword">fun </span><a href="generate-main-sub-query-result-statement-"><span class="token function">generateMainSubQueryResultStatement</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">nodeDefinition<span class="token operator">: </span><a href="../../io.github.graphglue.definition/-node-definition/index-">NodeDefinition</a><span class="token punctuation">, </span></span><span class="parameter ">builder<span class="token operator">: </span><span data-unresolved-link="org.neo4j.cypherdsl.core/StatementBuilder.OngoingReading///PointingToDeclaration/">StatementBuilder.OngoingReading</span><span class="token punctuation">, </span></span><span class="parameter ">nodeAlias<span class="token operator">: </span><span data-unresolved-link="org.neo4j.cypherdsl.core/SymbolicName///PointingToDeclaration/">SymbolicName</span><span class="token punctuation">, </span></span><span class="parameter ">orderContext<span class="token operator">: </span><a href="../-order-context/index-">OrderContext</a><span class="token operator">?</span><span class="token punctuation">, </span></span><span class="parameter ">nodeQuery<span class="token operator">: </span><a href="../-node-query/index-">NodeQuery</a></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="../-statement-with-result-nodes-and-nodes/index-">StatementWithResultNodesAndNodes</a></div><p class="paragraph">Generates the result statement for the query generated by <a href="generate-main-sub-query-">generateMainSubQuery</a>. Also orders the nodes, and builds a statement out of the builder</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the generated statement, the result name and the name of a collection with all raw nodes</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>node</span><wbr><span><span>Definition</span></span></u></div></span></div><div><div class="title"><p class="paragraph">definition for the currently queried node</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>builder</span></span></u></div></span></div><div><div class="title"><p class="paragraph">ongoing statement builder</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>node</span><wbr><span><span>Alias</span></span></u></div></span></div><div><div class="title"><p class="paragraph">name of the variable containing the node</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>order</span><wbr><span><span>Context</span></span></u></div></span></div><div><div class="title"><p class="paragraph">order to sort by with associated variables</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>node</span><wbr><span><span>Query</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the currently converted query</p></div></div></div></div></div></div></div>\n',l={},o="generateMainSubQueryResultStatement",p={id:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/generate-main-sub-query-result-statement-",title:"generateMainSubQueryResultStatement",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/generate-main-sub-query-result-statement-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor",slug:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/generate-main-sub-query-result-statement-",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/generate-main-sub-query-result-statement-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"generateLabelCondition",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/generate-label-condition-"},next:{title:"generateMainSubQuery",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/generate-main-sub-query-"}},d={},u=[];function c(e){const a={h1:"h1",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.h1,{id:"generatemainsubqueryresultstatement",children:"generateMainSubQueryResultStatement"}),"\n",(0,s.jsx)(r.A,{dokkaHTML:i})]})}function g(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);