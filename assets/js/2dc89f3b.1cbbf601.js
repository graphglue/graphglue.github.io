"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[44422],{14626:(a,e,r)=>{r.r(e),r.d(e,{assets:()=>c,contentTitle:()=>p,default:()=>g,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var s=r(74848),n=r(28453),t=r(52358);const i='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">fun </span><a href="parse-cursor-"><span class="token function">parseCursor</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">cursor<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a><span class="token punctuation">, </span></span><span class="parameter ">objectMapper<span class="token operator">: </span><span data-unresolved-link="com.fasterxml.jackson.databind/ObjectMapper///PointingToDeclaration/">ObjectMapper</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-map/index.html">Map</a><span class="token operator">&lt;</span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a><span class="token punctuation">, </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-any/index.html">Any</a><span class="token operator">?</span><span class="token operator">&gt;</span></div><p class="paragraph">Parses a cursor generated by <a href="generate-cursor-">generateCursor</a> into a map from <a href="../-order-part/index-">OrderPart</a> name to value provided in the cursor Can be used for filtering in the database, e.g. return only <a href="../../io.github.graphglue.model/-node/index-">Node</a>s which are after / before the cursor</p><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>cursor</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the base64 encoded cursor</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>object</span><wbr><span><span>Mapper</span></span></u></div></span></div><div><div class="title"><p class="paragraph">necessary for JSON decoding</p></div></div></div></div></div><h4 class="">Throws</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-illegal-argument-exception/index.html"><span>Illegal</span><wbr><span>Argument</span><wbr><span><span>Exception</span></span></a></div></span></div><div><div class="title"><p class="paragraph">if the cursor is invalid</p></div></div></div></div></div></div></div>\n',o={},p="parseCursor",l={id:"api/graphglue-core/io.github.graphglue.connection.order/-order/parse-cursor-",title:"parseCursor",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.order/-order/parse-cursor-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.order/-order",slug:"/api/graphglue-core/io.github.graphglue.connection.order/-order/parse-cursor-",permalink:"/api/graphglue-core/io.github.graphglue.connection.order/-order/parse-cursor-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"generateCursor",permalink:"/api/graphglue-core/io.github.graphglue.connection.order/-order/generate-cursor-"},next:{title:"OrderDirection",permalink:"/api/graphglue-core/io.github.graphglue.connection.order/-order-direction/index-"}},c={},d=[];function u(a){const e={h1:"h1",...(0,n.R)(),...a.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"parsecursor",children:"parseCursor"}),"\n",(0,s.jsx)(t.A,{dokkaHTML:i})]})}function g(a={}){const{wrapper:e}={...(0,n.R)(),...a.components};return e?(0,s.jsx)(e,{...a,children:(0,s.jsx)(u,{...a})}):u(a)}}}]);