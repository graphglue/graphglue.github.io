"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[55538],{59122:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>u,contentTitle:()=>p,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=s(74848),t=s(28453),r=s(52358);const i='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">private </span><span class="token keyword">fun </span><a href="create-sub-query-"><span class="token function">createSubQuery</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">subQuery<span class="token operator">: </span><a href="../-node-sub-query/index-">NodeSubQuery</a><span class="token punctuation">, </span></span><span class="parameter ">parentNodeDefinition<span class="token operator">: </span><a href="../../io.github.graphglue.definition/-node-definition/index-">NodeDefinition</a><span class="token punctuation">, </span></span><span class="parameter ">allNodes<span class="token operator">: </span><span data-unresolved-link="org.neo4j.cypherdsl.core/SymbolicName///PointingToDeclaration/">SymbolicName</span><span class="token punctuation">, </span></span><span class="parameter ">unwindCount<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-int/index.html">Int</a></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="../-statement-with-result-nodes-and-nodes/index-">StatementWithResultNodesAndNodes</a></div><p class="paragraph">Creates a SubQuery using a Cypher SubQuery Uses <a href="../../../graphglue-core/io.github.graphglue.data.execution/-node-sub-query/only-on-types-">NodeSubQuery.onlyOnTypes</a> to only fetch related nodes when necessary</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the generated statement, the result name and the name of a collection with all raw nodes</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>sub</span><wbr><span><span>Query</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the SubQuery to convert</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>parent</span><wbr><span>Node</span><wbr><span><span>Definition</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the definition of the nodes in <a href="create-sub-query-">allNodes</a></p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>all</span><wbr><span><span>Nodes</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the name of the collection containing all nodes</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>unwind</span><wbr><span><span>Count</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the nesting depth of <a href="create-sub-query-">allNodes</a></p></div></div></div></div></div></div></div>\n',o={},p="createSubQuery",l={id:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/create-sub-query-",title:"createSubQuery",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/create-sub-query-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor",slug:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/create-sub-query-",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/create-sub-query-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"createSubNodeQuery",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/create-sub-node-query-"},next:{title:"createSubReturnStatement",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/create-sub-return-statement-"}},u={},c=[];function d(e){const a={h1:"h1",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h1,{id:"createsubquery",children:"createSubQuery"}),"\n",(0,n.jsx)(r.A,{dokkaHTML:i})]})}function h(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);