"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[23915],{42710:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>g,frontMatter:()=>i,metadata:()=>p,toc:()=>c});var n=a(74848),o=a(28453),r=a(52358);const s='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">private </span><span class="token keyword">val </span><a href="entry-lookup-">entryLookup</a><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-map/index.html">Map</a><span class="token operator">&lt;</span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a><span class="token punctuation">, </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-list/index.html">List</a><span class="token operator">&lt;</span><a href="../-node-query-entry/index-">NodeQueryEntry</a><span class="token operator">&lt;</span><span class="token operator">*</span><span class="token operator">&gt;</span><span class="token operator">&gt;</span><span class="token operator">&gt;</span></div><p class="paragraph">Lookup to get an entry efficiently by <code class="lang-kotlin">resultKeyPath</code> Each group contains all entries under a specific resultKey Necessary as <code class="lang-kotlin">resultKey</code> may not be unique, as only <a href="../-node-query-entry/result-key-path-">NodeQueryEntry.resultKeyPath</a> with any element of <a href="../-node-query-entry/only-on-types-">NodeQueryEntry.onlyOnTypes</a> must be unique</p></div></div>\n',i={},l="entryLookup",p={id:"api/graphglue-core/io.github.graphglue.data.execution/-query-base/entry-lookup-",title:"entryLookup",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.execution/-query-base/entry-lookup-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.execution/-query-base",slug:"/api/graphglue-core/io.github.graphglue.data.execution/-query-base/entry-lookup-",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-query-base/entry-lookup-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"entries",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-query-base/entries-"},next:{title:"getEntry",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-query-base/get-entry-"}},u={},c=[];function d(e){const t={h1:"h1",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"entrylookup",children:"entryLookup"}),"\n",(0,n.jsx)(r.A,{dokkaHTML:s})]})}function g(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);