"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[84855],{42070:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>d,contentTitle:()=>p,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>g});var t=s(74848),n=s(28453),o=s(52358);const r='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">private </span><span class="token keyword">fun </span><a href="save-nodes-"><span class="token function">saveNodes</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">entities<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-iterable/index.html">Iterable</a><span class="token operator">&lt;</span><a href="../../io.github.graphglue.model/-node/index-">Node</a><span class="token operator">&gt;</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><span data-unresolved-link="reactor.core.publisher/Flux///PointingToDeclaration/">Flux</span><span class="token operator">&lt;</span><a href="../../io.github.graphglue.model/-node/index-">Node</a><span class="token operator">&gt;</span></div><p class="paragraph">Saves a single Node including all lazy loaded relations Important: it has to be ensured that the returned node is newly loaded from the database Sometimes, the internal save method does not reload it. In this case, we have to find it by id manually</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the saved nodes</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>entities</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the <a href="../../io.github.graphglue.model/-node/index-">Node</a>s to save</p></div></div></div></div></div></div></div>\n',i={},p="saveNodes",l={id:"api/graphglue-core/io.github.graphglue.data.repositories/-graphglue-neo4j-operations/save-nodes-",title:"saveNodes",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.repositories/-graphglue-neo4j-operations/save-nodes-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.repositories/-graphglue-neo4j-operations",slug:"/api/graphglue-core/io.github.graphglue.data.repositories/-graphglue-neo4j-operations/save-nodes-",permalink:"/api/graphglue-core/io.github.graphglue.data.repositories/-graphglue-neo4j-operations/save-nodes-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"saveAs",permalink:"/api/graphglue-core/io.github.graphglue.data.repositories/-graphglue-neo4j-operations/save-as-"},next:{title:"save",permalink:"/api/graphglue-core/io.github.graphglue.data.repositories/-graphglue-neo4j-operations/save-"}},d={},g=[];function c(e){const a={h1:"h1",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.h1,{id:"savenodes",children:"saveNodes"}),"\n",(0,t.jsx)(o.A,{dokkaHTML:r})]})}function h(e={}){const{wrapper:a}={...(0,n.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);