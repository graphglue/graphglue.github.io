"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[78366],{53409:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>p,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>g});var t=n(74848),o=n(28453),s=n(52358);const r='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">private </span><span class="token keyword">fun </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a><span class="token punctuation">.</span><a href="to-enum-name-case-"><span class="token function">toEnumNameCase</span></a><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a></div><p class="paragraph">Expects a camelCase <a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a>, inserts a <code class="lang-kotlin">_</code> before each capital letter, and then makes all letters uppercase</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the <a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a> in enum casing</p></span></div></div>\n',i={},c="toEnumNameCase",l={id:"api/graphglue-core/io.github.graphglue.connection.order/to-enum-name-case-",title:"toEnumNameCase",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.order/to-enum-name-case-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.order",slug:"/api/graphglue-core/io.github.graphglue.connection.order/to-enum-name-case-",permalink:"/api/graphglue-core/io.github.graphglue.connection.order/to-enum-name-case-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"parseOrder",permalink:"/api/graphglue-core/io.github.graphglue.connection.order/parse-order-"},next:{title:"io.github.graphglue.data",permalink:"/api/graphglue-core/io.github.graphglue.data/index-"}},p={},g=[];function u(e){const a={h1:"h1",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.h1,{id:"toenumnamecase",children:"toEnumNameCase"}),"\n",(0,t.jsx)(s.A,{dokkaHTML:r})]})}function d(e={}){const{wrapper:a}={...(0,o.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}}}]);