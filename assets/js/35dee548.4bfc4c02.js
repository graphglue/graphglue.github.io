"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[76244],{57552:(e,a,i)=>{i.r(a),i.d(a,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>d,toc:()=>h});var r=i(74848),t=i(28453),n=i(52358);const s='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">val </span><a href="graph-q-l-id-">graphQLId</a><span class="token operator">: </span><span data-unresolved-link="com.expediagroup.graphql.generator.scalars/ID///PointingToDeclaration/">ID</span></div><p class="paragraph">The id of the node as seen in the GraphQL API</p><h4 class="">Throws</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-exception/index.html"><span><span>Exception</span></span></a></div></span></div><div><div class="title"><p class="paragraph">if this node has not been persisted yet and therefore has no id</p></div></div></div></div></div></div></div>\n',o={},l="graphQLId",d={id:"api/graphglue-core/io.github.graphglue.model/-node/graph-q-l-id-",title:"graphQLId",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.model/-node/graph-q-l-id-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.model/-node",slug:"/api/graphglue-core/io.github.graphglue.model/-node/graph-q-l-id-",permalink:"/api/graphglue-core/io.github.graphglue.model/-node/graph-q-l-id-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"getProperty",permalink:"/api/graphglue-core/io.github.graphglue.model/-node/get-property-"},next:{title:"hashCode",permalink:"/api/graphglue-core/io.github.graphglue.model/-node/hash-code-"}},p={},h=[];function g(e){const a={h1:"h1",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.h1,{id:"graphqlid",children:"graphQLId"}),"\n",(0,r.jsx)(n.A,{dokkaHTML:s})]})}function c(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(g,{...e})}):g(e)}}}]);