"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[29219],{51406:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>p,default:()=>g,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var s=t(74848),n=t(28453),o=t(52358);const r='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">private </span><span class="token keyword">fun </span><a href="execute-statement-"><span class="token function">executeStatement</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">statement<span class="token operator">: </span><span data-unresolved-link="org.neo4j.cypherdsl.core/Statement///PointingToDeclaration/">Statement</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><span data-unresolved-link="reactor.core.publisher/Mono///PointingToDeclaration/">Mono</span><span class="token operator">&lt;</span><a href="https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/Void.html">Void</a><span class="token operator">&gt;</span></div><p class="paragraph">Executes a Neo4J Statement using the client</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">an empty <span data-unresolved-link="reactor.core.publisher/Mono///PointingToDeclaration/">Mono</span> to wait for the end of the operation</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>statement</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the <span data-unresolved-link="org.neo4j.cypherdsl.core/Statement///PointingToDeclaration/">Statement</span> to execute</p></div></div></div></div></div></div></div>\n',i={},p="executeStatement",l={id:"api/graphglue-core/io.github.graphglue.data.repositories/-graphglue-neo4j-operations/execute-statement-",title:"executeStatement",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.repositories/-graphglue-neo4j-operations/execute-statement-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.repositories/-graphglue-neo4j-operations",slug:"/api/graphglue-core/io.github.graphglue.data.repositories/-graphglue-neo4j-operations/execute-statement-",permalink:"/api/graphglue-core/io.github.graphglue.data.repositories/-graphglue-neo4j-operations/execute-statement-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"deleteRelationships",permalink:"/api/graphglue-core/io.github.graphglue.data.repositories/-graphglue-neo4j-operations/delete-relationships-"},next:{title:"getNodesToSaveRecursive",permalink:"/api/graphglue-core/io.github.graphglue.data.repositories/-graphglue-neo4j-operations/get-nodes-to-save-recursive-"}},c={},u=[];function d(e){const a={h1:"h1",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.h1,{id:"executestatement",children:"executeStatement"}),"\n",(0,s.jsx)(o.A,{dokkaHTML:r})]})}function g(e={}){const{wrapper:a}={...(0,n.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);