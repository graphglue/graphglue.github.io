"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[83035],{85178:(a,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>g,frontMatter:()=>l,metadata:()=>p,toc:()=>d});var s=n(74848),t=n(28453),r=n(52358);const i='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">private </span><span class="token keyword">fun </span><a href="create-sub-return-statement-"><span class="token function">createSubReturnStatement</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">builder<span class="token operator">: </span><span data-unresolved-link="org.neo4j.cypherdsl.core/StatementBuilder.OngoingReadingWithoutWhere///PointingToDeclaration/">StatementBuilder.OngoingReadingWithoutWhere</span><span class="token punctuation">, </span></span><span class="parameter ">resultNodesCollected<span class="token operator">: </span><span data-unresolved-link="org.neo4j.cypherdsl.core/SymbolicName///PointingToDeclaration/">SymbolicName</span><span class="token punctuation">, </span></span><span class="parameter ">nodesCollected<span class="token operator">: </span><span data-unresolved-link="org.neo4j.cypherdsl.core/SymbolicName///PointingToDeclaration/">SymbolicName</span><span class="token punctuation">, </span></span><span class="parameter ">parentNodeId<span class="token operator">: </span><span data-unresolved-link="org.neo4j.cypherdsl.core/Expression///PointingToDeclaration/">Expression</span><span class="token punctuation">, </span></span><span class="parameter ">totalCount<span class="token operator">: </span><span data-unresolved-link="org.neo4j.cypherdsl.core/SymbolicName///PointingToDeclaration/">SymbolicName</span><span class="token operator">?</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="../-statement-with-result-nodes-and-nodes/index-">StatementWithResultNodesAndNodes</a></div><p class="paragraph">Creates the return statement and builds the query. If totalCount is not fetched, <code class="lang-kotlin">null</code> is set as value for totalCount Must only be used for SubQueries and not for the root query</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the generated statement, the result name and the name of a collection with all raw nodes</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>builder</span></span></u></div></span></div><div><div class="title"><p class="paragraph">ongoing statement builder</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>result</span><wbr><span>Nodes</span><wbr><span><span>Collected</span></span></u></div></span></div><div><div class="title"><p class="paragraph">name for the variable containing a collection of all result nodes</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>nodes</span><wbr><span><span>Collected</span></span></u></div></span></div><div><div class="title"><p class="paragraph">name for the variable containing all raw nodes, used for SubQueries</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>parent</span><wbr><span>Node</span><wbr><span><span>Id</span></span></u></div></span></div><div><div class="title"><p class="paragraph">statement for parent node id, set to <code class="lang-kotlin">Cypher.literalNull()</code> if null</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>total</span><wbr><span><span>Count</span></span></u></div></span></div><div><div class="title"><p class="paragraph">name for the variable under which totalCount should be saved</p></div></div></div></div></div></div></div>\n',l={},o="createSubReturnStatement",p={id:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/create-sub-return-statement-",title:"createSubReturnStatement",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/create-sub-return-statement-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor",slug:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/create-sub-return-statement-",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/create-sub-return-statement-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"createSubQuery",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/create-sub-query-"},next:{title:"executePartial",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/execute-partial-"}},c={},d=[];function u(a){const e={h1:"h1",...(0,t.R)(),...a.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"createsubreturnstatement",children:"createSubReturnStatement"}),"\n",(0,s.jsx)(r.A,{dokkaHTML:i})]})}function g(a={}){const{wrapper:e}={...(0,t.R)(),...a.components};return e?(0,s.jsx)(e,{...a,children:(0,s.jsx)(u,{...a})}):u(a)}}}]);