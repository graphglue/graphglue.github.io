"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5917],{75511:(e,i,a)=>{a.r(i),a.d(i,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>d,toc:()=>c});var n=a(74848),o=a(28453),t=a(52358);const s='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">private </span><span class="token keyword">fun </span><a href="get-allow-from-related-node-definitions-"><span class="token function">getAllowFromRelatedNodeDefinitions</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">authorization<span class="token operator">: </span><a href="../../io.github.graphglue.authorization/-merged-authorization/index-">MergedAuthorization</a><span class="token operator">?</span><span class="token punctuation">, </span></span><span class="parameter ">nodeDefinition<span class="token operator">: </span><a href="../-node-definition/index-">NodeDefinition</a></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-list/index.html">List</a><span class="token operator">&lt;</span><a href="../-node-definition/index-">NodeDefinition</a><span class="token operator">&gt;</span></div><p class="paragraph">Gets <a href="../-node-definition/index-">NodeDefinition</a> based on <a href="../../io.github.graphglue.model/-authorization/allow-from-related-">Authorization.allowFromRelated</a> of a <a href="../../io.github.graphglue.authorization/-merged-authorization/index-">MergedAuthorization</a></p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">all <a href="../-node-definition/index-">NodeDefinition</a>s from which allow is inherited</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>authorization</span></span></u></div></span></div><div><div class="title"><p class="paragraph">defines the relationships</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>node</span><wbr><span><span>Definition</span></span></u></div></span></div><div><div class="title"><p class="paragraph">definition for node annotated with a part of <a href="get-allow-from-related-node-definitions-">authorization</a></p></div></div></div></div></div></div></div>\n',r={},l="getAllowFromRelatedNodeDefinitions",d={id:"api/graphglue-core/io.github.graphglue.definition/-node-definition-collection/get-allow-from-related-node-definitions-",title:"getAllowFromRelatedNodeDefinitions",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.definition/-node-definition-collection/get-allow-from-related-node-definitions-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.definition/-node-definition-collection",slug:"/api/graphglue-core/io.github.graphglue.definition/-node-definition-collection/get-allow-from-related-node-definitions-",permalink:"/api/graphglue-core/io.github.graphglue.definition/-node-definition-collection/get-allow-from-related-node-definitions-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"generateSupertypeNodeDefinitionLookup",permalink:"/api/graphglue-core/io.github.graphglue.definition/-node-definition-collection/generate-supertype-node-definition-lookup-"},next:{title:"getMergedAuthorization",permalink:"/api/graphglue-core/io.github.graphglue.definition/-node-definition-collection/get-merged-authorization-"}},p={},c=[];function g(e){const i={h1:"h1",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.h1,{id:"getallowfromrelatednodedefinitions",children:"getAllowFromRelatedNodeDefinitions"}),"\n",(0,n.jsx)(t.A,{dokkaHTML:s})]})}function u(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(g,{...e})}):g(e)}}}]);