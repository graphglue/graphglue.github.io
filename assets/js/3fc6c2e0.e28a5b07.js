"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[48291],{42123:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>u,contentTitle:()=>p,default:()=>g,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var s=t(74848),r=t(28453),n=t(52358);const o='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">fun </span><a href="to-complete-result-"><span class="token function">toCompleteResult</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">nodeQuery<span class="token operator">: </span><a href="../-node-query/index-">NodeQuery</a></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="../-node-query-result/index-">NodeQueryResult</a><span class="token operator">&lt;</span><a href="../../io.github.graphglue.model/-node/index-">Node</a><span class="token operator">&gt;</span></div><p class="paragraph">Converts the result to a <a href="../-node-query-result/index-">NodeQueryResult</a></p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the converted result</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>node</span><wbr><span><span>Query</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the query used to get the result</p></div></div></div></div></div></div></div>\n',l={},p="toCompleteResult",i={id:"api/graphglue-core/io.github.graphglue.data.execution/-partial-node-query-result/to-complete-result-",title:"toCompleteResult",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.execution/-partial-node-query-result/to-complete-result-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.execution/-partial-node-query-result",slug:"/api/graphglue-core/io.github.graphglue.data.execution/-partial-node-query-result/to-complete-result-",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-partial-node-query-result/to-complete-result-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"nodes",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-partial-node-query-result/nodes-"},next:{title:"totalCount",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-partial-node-query-result/total-count-"}},u={},d=[];function c(e){const a={h1:"h1",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.h1,{id:"tocompleteresult",children:"toCompleteResult"}),"\n",(0,s.jsx)(n.A,{dokkaHTML:o})]})}function g(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);