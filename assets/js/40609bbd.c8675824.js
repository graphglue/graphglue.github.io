"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1402],{95576:(r,e,a)=>{a.r(e),a.d(e,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var t=a(74848),n=a(28453),p=a(52358);const o='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">property<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.reflect/-k-property/index.html">KProperty</a><span class="token operator">&lt;</span><span class="token operator">*</span><span class="token operator">&gt;</span><span class="token punctuation">, </span></span><span class="parameter ">neo4jPropertyName<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a></span></span><span class="token punctuation">)</span></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>property</span></span></u></div></span></div><div><div class="title"><p class="paragraph">defines the part, provides a name and used for <a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/index.html">getValue</a></p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>neo4j</span><wbr><span>Property</span><wbr><span><span>Name</span></span></u></div></span></div><div><div class="title"><p class="paragraph">name of the property on the database node</p></div></div></div></div></div></div></div>\n',s={},i="PropertyOrderPart",l={id:"api/graphglue-core/io.github.graphglue.connection.order/-property-order-part/-property-order-part-",title:"PropertyOrderPart",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.order/-property-order-part/-property-order-part-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.order/-property-order-part",slug:"/api/graphglue-core/io.github.graphglue.connection.order/-property-order-part/-property-order-part-",permalink:"/api/graphglue-core/io.github.graphglue.connection.order/-property-order-part/-property-order-part-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"PropertyOrderPart",permalink:"/api/graphglue-core/io.github.graphglue.connection.order/-property-order-part/index-"},next:{title:"getExpression",permalink:"/api/graphglue-core/io.github.graphglue.connection.order/-property-order-part/get-expression-"}},d={},c=[];function g(r){const e={h1:"h1",...(0,n.R)(),...r.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"propertyorderpart",children:"PropertyOrderPart"}),"\n",(0,t.jsx)(p.A,{dokkaHTML:o})]})}function u(r={}){const{wrapper:e}={...(0,n.R)(),...r.components};return e?(0,t.jsx)(e,{...r,children:(0,t.jsx)(g,{...r})}):g(r)}}}]);