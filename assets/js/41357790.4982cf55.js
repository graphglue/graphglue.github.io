"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[21487],{6297:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>u,contentTitle:()=>p,default:()=>g,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var s=n(74848),t=n(28453),i=n(52358);const r='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">fun </span><span class="token operator">&lt;</span><a href="split-node-query-">T</a><span class="token operator"> : </span><a href="../../-query-base/index-">QueryBase</a><span class="token operator">&lt;</span><a href="split-node-query-">T</a><span class="token operator">&gt;</span><span class="token operator">&gt; </span><a href="split-node-query-"><span class="token function">splitNodeQuery</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">query<span class="token operator">: </span><a href="split-node-query-">T</a></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="split-node-query-">T</a></div><p class="paragraph">Splits up a query into multiple smaller queries if necessary Additional queries are stored in <a href="additional-queries-">additionalQueries</a></p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the initial query if it is small enough, otherwise a query that can be executed</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>query</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the query to split up</p></div></div></div></div></div></div></div>\n',o={},p="splitNodeQuery",l={id:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-engine/-node-query-engine-instance/split-node-query-",title:"splitNodeQuery",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.execution/-node-query-engine/-node-query-engine-instance/split-node-query-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-engine/-node-query-engine-instance",slug:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-engine/-node-query-engine-instance/split-node-query-",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-engine/-node-query-engine-instance/split-node-query-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"splitNodeQueryEntry",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-engine/-node-query-engine-instance/split-node-query-entry-"},next:{title:"NodeQueryEngine",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-engine/-node-query-engine-"}},u={},d=[];function c(e){const a={h1:"h1",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.h1,{id:"splitnodequery",children:"splitNodeQuery"}),"\n",(0,s.jsx)(i.A,{dokkaHTML:r})]})}function g(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);