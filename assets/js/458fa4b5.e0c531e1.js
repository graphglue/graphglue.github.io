"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[54664],{61794:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>l,default:()=>g,frontMatter:()=>o,metadata:()=>p,toc:()=>d});var i=t(74848),n=t(28453),r=t(52358);const s='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">definition<span class="token operator">: </span><a href="../../io.github.graphglue.connection.filter.definition/-or-meta-filter-definition/index-">OrMetaFilterDefinition</a><span class="token punctuation">, </span></span><span class="parameter ">subNodeFilters<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-list/index.html">List</a><span class="token operator">&lt;</span><a href="../-node-filter/index-">NodeFilter</a><span class="token operator">&gt;</span></span></span><span class="token punctuation">)</span></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>definition</span></span></u></div></span></div><div><div class="title"><p class="paragraph">associated definition of the entry</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>sub</span><wbr><span>Node</span><wbr><span><span>Filters</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the list of filters to join</p></div></div></div></div></div></div></div>\n',o={},l="OrMetaFilter",p={id:"api/graphglue-core/io.github.graphglue.connection.filter.model/-or-meta-filter/-or-meta-filter-",title:"OrMetaFilter",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.filter.model/-or-meta-filter/-or-meta-filter-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.filter.model/-or-meta-filter",slug:"/api/graphglue-core/io.github.graphglue.connection.filter.model/-or-meta-filter/-or-meta-filter-",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.model/-or-meta-filter/-or-meta-filter-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"OrMetaFilter",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.model/-or-meta-filter/index-"},next:{title:"generateCondition",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.model/-or-meta-filter/generate-condition-"}},c={},d=[];function u(e){const a={h1:"h1",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.h1,{id:"ormetafilter",children:"OrMetaFilter"}),"\n",(0,i.jsx)(r.A,{dokkaHTML:s})]})}function g(e={}){const{wrapper:a}={...(0,n.R)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}}}]);