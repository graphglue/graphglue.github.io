"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3366],{33993:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>d,contentTitle:()=>l,default:()=>g,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var i=t(74848),s=t(28453),n=t(52358);const r='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">val </span><a href="first-">first</a><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-int/index.html">Int</a><span class="token operator">?</span><span class="token operator"> = </span>null</div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>first</span></span></u></div></span></div><div><div class="title"><p class="paragraph">if present, only the first n nodes are fetched</p></div></div></div></div></div></div></div>\n',o={},l="first",p={id:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-options/first-",title:"first",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.execution/-node-query-options/first-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-options",slug:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-options/first-",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-options/first-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"filters",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-options/filters-"},next:{title:"ignoreNodes",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-options/ignore-nodes-"}},d={},c=[];function u(e){const a={h1:"h1",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.h1,{id:"first",children:"first"}),"\n",(0,i.jsx)(n.A,{dokkaHTML:r})]})}function g(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}}}]);