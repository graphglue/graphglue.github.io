"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[58692],{17358:(a,e,s)=>{s.r(e),s.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>d});var n=s(74848),t=s(28453),i=s(52358);const p='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">fun </span><a href="compute-if-absent-"><span class="token function">computeIfAbsent</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">key<span class="token operator">: </span><a href="index-">K</a><span class="token punctuation">, </span></span><span class="parameter ">mappingFunction<span class="token operator">: </span><a href="https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/function/Function.html">Function</a><span class="token operator">&lt;</span><span class="token keyword">in </span><a href="index-">K</a><span class="token punctuation">, </span><span class="token keyword">out </span><a href="index-">V</a><span class="token operator">&gt;</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="index-">V</a></div><p class="paragraph">Gets the entity in cache under the specified <code class="lang-kotlin">key</code> If no cache entry is found, the <code class="lang-kotlin">mappingFunction</code> is used to create a new entity, which is saved to the cache and returned. Throws an exception if the entity under the provided key is currently computed</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the cache entity associated with the provided key</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>key</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the key for the cache entity</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>mapping</span><wbr><span><span>Function</span></span></u></div></span></div><div><div class="title"><p class="paragraph">used to create the entity if not found in cache</p></div></div></div></div></div><h4 class="">Throws</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-illegal-argument-exception/index.html"><span>Illegal</span><wbr><span>Argument</span><wbr><span><span>Exception</span></span></a></div></span></div><div><div class="title"><p class="paragraph">if the entity under the provided key is currently computed</p></div></div></div></div></div><hr><div class="symbol monospace"><span class="token keyword">fun </span><a href="compute-if-absent-"><span class="token function">computeIfAbsent</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">key<span class="token operator">: </span><a href="index-">K</a><span class="token punctuation">, </span></span><span class="parameter ">alternativeIfComputing<span class="token operator">: </span><a href="index-">V</a><span class="token punctuation">, </span></span><span class="parameter ">mappingFunction<span class="token operator">: </span><a href="https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/function/Function.html">Function</a><span class="token operator">&lt;</span><span class="token keyword">in </span><a href="index-">K</a><span class="token punctuation">, </span><span class="token keyword">out </span><a href="index-">V</a><span class="token operator">&gt;</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="index-">V</a></div><p class="paragraph">Gets the entity in cache under the specified <code class="lang-kotlin">key</code> If no cache entry is found, the <code class="lang-kotlin">mappingFunction</code> is used to create a new entity, which is saved to the cache and returned. If the value is currently computed, returns <code class="lang-kotlin">alternativeIfComputing</code></p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the cache entity associated with the provided key</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>key</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the key for the cache entity</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>alternative</span><wbr><span>If</span><wbr><span><span>Computing</span></span></u></div></span></div><div><div class="title"><p class="paragraph">alternative return value if value is currently in computation</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>mapping</span><wbr><span><span>Function</span></span></u></div></span></div><div><div class="title"><p class="paragraph">used to create the entity if not found in cache</p></div></div></div></div></div><h4 class="">Throws</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-illegal-argument-exception/index.html"><span>Illegal</span><wbr><span>Argument</span><wbr><span><span>Exception</span></span></a></div></span></div><div><div class="title"><p class="paragraph">if the entity under the provided key is currently computed</p></div></div></div></div></div></div></div>\n',c={},l="computeIfAbsent",r={id:"api/graphglue-core/io.github.graphglue.util/-cache-map/compute-if-absent-",title:"computeIfAbsent",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.util/-cache-map/compute-if-absent-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.util/-cache-map",slug:"/api/graphglue-core/io.github.graphglue.util/-cache-map/compute-if-absent-",permalink:"/api/graphglue-core/io.github.graphglue.util/-cache-map/compute-if-absent-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"backingMap",permalink:"/api/graphglue-core/io.github.graphglue.util/-cache-map/backing-map-"},next:{title:"currentlyComputing",permalink:"/api/graphglue-core/io.github.graphglue.util/-cache-map/currently-computing-"}},o={},d=[];function u(a){const e={h1:"h1",...(0,t.R)(),...a.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{id:"computeifabsent",children:"computeIfAbsent"}),"\n",(0,n.jsx)(i.A,{dokkaHTML:p})]})}function h(a={}){const{wrapper:e}={...(0,t.R)(),...a.components};return e?(0,n.jsx)(e,{...a,children:(0,n.jsx)(u,{...a})}):u(a)}}}]);