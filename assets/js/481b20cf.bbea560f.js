"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[83355],{76770:(a,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>l,default:()=>g,frontMatter:()=>i,metadata:()=>p,toc:()=>d});var r=t(74848),n=t(28453),s=t(52358);const o='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">order<span class="token operator">: </span><a href="../../io.github.graphglue.connection.order/-order/index-">Order</a><span class="token operator">&lt;</span><span class="token operator">*</span><span class="token operator">&gt;</span><span class="token punctuation">, </span></span><span class="parameter ">variables<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-map/index.html">Map</a><span class="token operator">&lt;</span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a><span class="token punctuation">, </span><span data-unresolved-link="org.neo4j.cypherdsl.core/SymbolicName///PointingToDeclaration/">SymbolicName</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">)</span></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>order</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the order to generate</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>variables</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the variables used in the order</p></div></div></div></div></div></div></div>\n',i={},l="OrderContext",p={id:"api/graphglue-core/io.github.graphglue.data.execution/-order-context/-order-context-",title:"OrderContext",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.execution/-order-context/-order-context-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.execution/-order-context",slug:"/api/graphglue-core/io.github.graphglue.data.execution/-order-context/-order-context-",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-order-context/-order-context-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"OrderContext",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-order-context/index-"},next:{title:"order",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-order-context/order-"}},c={},d=[];function u(a){const e={h1:"h1",...(0,n.R)(),...a.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h1,{id:"ordercontext",children:"OrderContext"}),"\n",(0,r.jsx)(s.A,{dokkaHTML:o})]})}function g(a={}){const{wrapper:e}={...(0,n.R)(),...a.components};return e?(0,r.jsx)(e,{...a,children:(0,r.jsx)(u,{...a})}):u(a)}}}]);