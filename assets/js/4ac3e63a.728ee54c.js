"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[17949],{51599:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>p,contentTitle:()=>l,default:()=>g,frontMatter:()=>i,metadata:()=>d,toc:()=>c});var n=r(74848),t=r(28453),s=r(52358);const o='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">private </span><span class="token keyword">fun </span><a href="generate-order-fields-"><span class="token function">generateOrderFields</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">orderContext<span class="token operator">: </span><a href="../-order-context/index-">OrderContext</a><span class="token punctuation">, </span></span><span class="parameter ">reversed<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-boolean/index.html">Boolean</a><span class="token operator"> = </span><span class="token boolean">false</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-list/index.html">List</a><span class="token operator">&lt;</span><span data-unresolved-link="org.neo4j.cypherdsl.core/SortItem///PointingToDeclaration/">SortItem</span><span class="token operator">&gt;</span></div><p class="paragraph">Transforms an <a href="../../io.github.graphglue.connection.order/-order/index-">Order</a> into  a list of <span data-unresolved-link="org.neo4j.cypherdsl.core/SortItem///PointingToDeclaration/">SortItem</span></p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the list of generated <span data-unresolved-link="org.neo4j.cypherdsl.core/SortItem///PointingToDeclaration/">SortItem</span></p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>order</span><wbr><span><span>Context</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the <a href="../../io.github.graphglue.connection.order/-order/index-">Order</a> to transform</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>reversed</span></span></u></div></span></div><div><div class="title"><p class="paragraph">if <code class="lang-kotlin">true</code>, the direction defined by <code class="lang-kotlin">order</code> is reversed</p></div></div></div></div></div></div></div>\n',i={},l="generateOrderFields",d={id:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/generate-order-fields-",title:"generateOrderFields",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/generate-order-fields-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor",slug:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/generate-order-fields-",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/generate-order-fields-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"generateMainSubQuery",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/generate-main-sub-query-"},next:{title:"generateResultNodeExpression",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/generate-result-node-expression-"}},p={},c=[];function u(e){const a={h1:"h1",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h1,{id:"generateorderfields",children:"generateOrderFields"}),"\n",(0,n.jsx)(s.A,{dokkaHTML:o})]})}function g(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}}}]);