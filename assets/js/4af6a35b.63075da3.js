"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[38139],{76880:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>p,default:()=>g,frontMatter:()=>r,metadata:()=>l,toc:()=>h});var t=n(74848),i=n(28453),s=n(52358);const o='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">private </span><span class="token keyword">fun </span><a href="generate-relationship-authorization-names-"><span class="token function">generateRelationshipAuthorizationNames</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">property<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.reflect/-k-property1/index.html">KProperty1</a><span class="token operator">&lt;</span><span class="token operator">*</span><span class="token punctuation">, </span><span class="token operator">*</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-set/index.html">Set</a><span class="token operator">&lt;</span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a><span class="token operator">&gt;</span></div><p class="paragraph">Gets the set of authorization names which allow via a Relation defined by a property</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">a set with all authorization names allowing via the relation</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>property</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the property defining the relation</p></div></div></div></div></div></div></div>\n',r={},p="generateRelationshipAuthorizationNames",l={id:"api/graphglue-core/io.github.graphglue.definition/-node-definition/generate-relationship-authorization-names-",title:"generateRelationshipAuthorizationNames",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.definition/-node-definition/generate-relationship-authorization-names-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.definition/-node-definition",slug:"/api/graphglue-core/io.github.graphglue.definition/-node-definition/generate-relationship-authorization-names-",permalink:"/api/graphglue-core/io.github.graphglue.definition/-node-definition/generate-relationship-authorization-names-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"generateOneRelationshipDefinitions",permalink:"/api/graphglue-core/io.github.graphglue.definition/-node-definition/generate-one-relationship-definitions-"},next:{title:"getFieldDefinitionOfProperty",permalink:"/api/graphglue-core/io.github.graphglue.definition/-node-definition/get-field-definition-of-property-"}},d={},h=[];function c(e){const a={h1:"h1",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.h1,{id:"generaterelationshipauthorizationnames",children:"generateRelationshipAuthorizationNames"}),"\n",(0,t.jsx)(s.A,{dokkaHTML:o})]})}function g(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);