"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[31474],{51714:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>i,contentTitle:()=>d,default:()=>g,frontMatter:()=>p,metadata:()=>l,toc:()=>c});var n=s(74848),r=s(28453),t=s(52358);const o='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">private </span><span class="token keyword">suspend </span><span class="token keyword">fun </span><a href="ensure-loaded-"><span class="token function">ensureLoaded</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">cache<span class="token operator">: </span><a href="../-node-cache/index-">NodeCache</a><span class="token operator">?</span><span class="token punctuation">, </span></span><span class="parameter ">loader<span class="token operator">: </span><a href="../-lazy-loading-subquery-generator/index-">LazyLoadingSubqueryGenerator</a><span class="token operator">&lt;</span><a href="index-">T</a><span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator"> -&gt; </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-unit/index.html">Unit</a><span class="token operator">?</span></span></span><span class="token punctuation">)</span></div><p class="paragraph">Ensures that this property is loaded</p><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>cache</span></span></u></div></span></div><div><div class="title"><p class="paragraph">used to load nodes from, if provided, not loading deleted nodes</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>loader</span></span></u></div></span></div><div><div class="title"><p class="paragraph">if provided used to define nested nodes to load</p></div></div></div></div></div></div></div>\n',p={},d="ensureLoaded",l={id:"api/graphglue-core/io.github.graphglue.model.property/-node-property-delegate/ensure-loaded-",title:"ensureLoaded",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.model.property/-node-property-delegate/ensure-loaded-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.model.property/-node-property-delegate",slug:"/api/graphglue-core/io.github.graphglue.model.property/-node-property-delegate/ensure-loaded-",permalink:"/api/graphglue-core/io.github.graphglue.model.property/-node-property-delegate/ensure-loaded-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"currentNode",permalink:"/api/graphglue-core/io.github.graphglue.model.property/-node-property-delegate/current-node-"},next:{title:"getLoadedProperty",permalink:"/api/graphglue-core/io.github.graphglue.model.property/-node-property-delegate/get-loaded-property-"}},i={},c=[];function u(e){const a={h1:"h1",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h1,{id:"ensureloaded",children:"ensureLoaded"}),"\n",(0,n.jsx)(t.A,{dokkaHTML:o})]})}function g(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}}}]);