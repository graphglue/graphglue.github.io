"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[36627],{5297:(a,e,i)=>{i.r(e),i.d(e,{assets:()=>g,contentTitle:()=>o,default:()=>d,frontMatter:()=>t,metadata:()=>l,toc:()=>u});var r=i(74848),n=i(28453),s=i(52358);const p='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue/main"><div class="symbol monospace"><span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">graphiql<span class="token operator">: </span><a href="-graphi-q-l-configuration-properties/index-">GraphglueConfigurationProperties.GraphiQLConfigurationProperties</a><span class="token operator"> = </span>GraphiQLConfigurationProperties()<span class="token punctuation">, </span></span><span class="parameter ">includeSkipField<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-boolean/index.html">Boolean</a><span class="token operator"> = </span><span class="token boolean">false</span></span></span><span class="token punctuation">)</span></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue/main" data-filterable-set=":graphglue/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>graphiql</span></span></u></div></span></div><div><div class="title"><p class="paragraph">GraphiQL related configuration properties</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue/main" data-filterable-set=":graphglue/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>include</span><wbr><span>Skip</span><wbr><span><span>Field</span></span></u></div></span></div><div><div class="title"><p class="paragraph">if <code class="lang-kotlin">true</code>, connections support the non-standard <code class="lang-kotlin">skip</code> field</p></div></div></div></div></div></div></div>\n',t={},o="GraphglueConfigurationProperties",l={id:"api/graphglue/io.github.graphglue/-graphglue-configuration-properties/-graphglue-configuration-properties-",title:"GraphglueConfigurationProperties",description:"",source:"@site/docs/api/graphglue/io.github.graphglue/-graphglue-configuration-properties/-graphglue-configuration-properties-.mdx",sourceDirName:"api/graphglue/io.github.graphglue/-graphglue-configuration-properties",slug:"/api/graphglue/io.github.graphglue/-graphglue-configuration-properties/-graphglue-configuration-properties-",permalink:"/api/graphglue/io.github.graphglue/-graphglue-configuration-properties/-graphglue-configuration-properties-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"endpoint",permalink:"/api/graphglue/io.github.graphglue/-graphglue-configuration-properties/-graphi-q-l-configuration-properties/endpoint-"},next:{title:"graphiql",permalink:"/api/graphglue/io.github.graphglue/-graphglue-configuration-properties/graphiql-"}},g={},u=[];function c(a){const e={h1:"h1",...(0,n.R)(),...a.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h1,{id:"graphglueconfigurationproperties",children:"GraphglueConfigurationProperties"}),"\n",(0,r.jsx)(s.A,{dokkaHTML:p})]})}function d(a={}){const{wrapper:e}={...(0,n.R)(),...a.components};return e?(0,r.jsx)(e,{...a,children:(0,r.jsx)(c,{...a})}):c(a)}}}]);