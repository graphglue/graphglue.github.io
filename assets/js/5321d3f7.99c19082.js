"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[82886],{38730:(a,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>p,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>h});var s=i(74848),t=i(28453),n=i(52358);const o='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">fun </span><a href="has-authorization-"><span class="token function">hasAuthorization</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">node<span class="token operator">: </span><a href="../../io.github.graphglue.model/-node/index-">Node</a><span class="token punctuation">, </span></span><span class="parameter ">permission<span class="token operator">: </span><a href="../-permission/index-">Permission</a></span></span><span class="token punctuation">)</span><span class="token operator">: </span><span data-unresolved-link="reactor.core.publisher/Mono///PointingToDeclaration/">Mono</span><span class="token operator">&lt;</span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-boolean/index.html">Boolean</a><span class="token operator">&gt;</span></div><p class="paragraph">Check if a node is authorized given a permission</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">if the permission is granted</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>node</span></span></u></div></span></div><div><div class="title"><p class="paragraph">Node to check for</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>permission</span></span></u></div></span></div><div><div class="title"><p class="paragraph">Permission to check on the node</p></div></div></div></div></div></div></div>\n',r={},p="hasAuthorization",l={id:"api/graphglue-core/io.github.graphglue.authorization/-authorization-checker/has-authorization-",title:"hasAuthorization",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.authorization/-authorization-checker/has-authorization-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.authorization/-authorization-checker",slug:"/api/graphglue-core/io.github.graphglue.authorization/-authorization-checker/has-authorization-",permalink:"/api/graphglue-core/io.github.graphglue.authorization/-authorization-checker/has-authorization-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"collection",permalink:"/api/graphglue-core/io.github.graphglue.authorization/-authorization-checker/collection-"},next:{title:"renderer",permalink:"/api/graphglue-core/io.github.graphglue.authorization/-authorization-checker/renderer-"}},c={},h=[];function u(a){const e={h1:"h1",...(0,t.R)(),...a.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"hasauthorization",children:"hasAuthorization"}),"\n",(0,s.jsx)(n.A,{dokkaHTML:o})]})}function d(a={}){const{wrapper:e}={...(0,t.R)(),...a.components};return e?(0,s.jsx)(e,{...a,children:(0,s.jsx)(u,{...a})}):u(a)}}}]);