"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[99207],{46921:(e,o,a)=>{a.r(o),a.d(o,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>g});var t=a(74848),r=a(28453),p=a(52358);const n='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">internal </span><span class="token keyword">val </span><a href="property-lookup-">propertyLookup</a><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-mutable-map/index.html">MutableMap</a><span class="token operator">&lt;</span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a><span class="token punctuation">, </span><a href="../../io.github.graphglue.model.property/-property-delegate/index-">PropertyDelegate</a><span class="token operator">&lt;</span><span class="token operator">*</span><span class="token operator">&gt;</span><span class="token operator">&gt;</span></div><p class="paragraph">Lookup for all node properties Trades memory (additional HashMap) for a cleaner and more extensible way to lookup the delegates (compared to reflection) Name of property as key</p></div></div>\n',l={},s="propertyLookup",i={id:"api/graphglue-core/io.github.graphglue.model/-node/property-lookup-",title:"propertyLookup",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.model/-node/property-lookup-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.model/-node",slug:"/api/graphglue-core/io.github.graphglue.model/-node/property-lookup-",permalink:"/api/graphglue-core/io.github.graphglue.model/-node/property-lookup-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"orderFields",permalink:"/api/graphglue-core/io.github.graphglue.model/-node/order-fields-"},next:{title:"rawId",permalink:"/api/graphglue-core/io.github.graphglue.model/-node/raw-id-"}},d={},g=[];function c(e){const o={h1:"h1",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.h1,{id:"propertylookup",children:"propertyLookup"}),"\n",(0,t.jsx)(p.A,{dokkaHTML:n})]})}function u(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);