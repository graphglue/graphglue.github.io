"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[22938],{81731:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>c,contentTitle:()=>s,default:()=>g,frontMatter:()=>o,metadata:()=>d,toc:()=>p});var a=t(74848),r=t(28453),n=t(52358);const l='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">val </span><a href="filter-">filter</a><span class="token operator">: </span><a href="../-filter/index-">Filter</a></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>filter</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the <a href="../-filter/index-">Filter</a> which defines the condition</p></div></div></div></div></div></div></div>\n',o={},s="filter",d={id:"api/graphglue-core/io.github.graphglue.connection.filter.model/-node-sub-filter/filter-",title:"filter",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.filter.model/-node-sub-filter/filter-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.filter.model/-node-sub-filter",slug:"/api/graphglue-core/io.github.graphglue.connection.filter.model/-node-sub-filter/filter-",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.model/-node-sub-filter/filter-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"NodeSubFilter",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.model/-node-sub-filter/-node-sub-filter-"},next:{title:"generateCondition",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.model/-node-sub-filter/generate-condition-"}},c={},p=[];function u(e){const i={h1:"h1",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.h1,{id:"filter",children:"filter"}),"\n",(0,a.jsx)(n.A,{dokkaHTML:l})]})}function g(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}}}]);