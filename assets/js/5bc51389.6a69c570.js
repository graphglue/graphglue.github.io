"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[79143],{82931:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>p,contentTitle:()=>l,default:()=>g,frontMatter:()=>d,metadata:()=>o,toc:()=>c});var a=n(74848),t=n(28453),r=n(52358);const s='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">val </span><a href="field-">field</a><span class="token operator">: </span><span data-unresolved-link="graphql.schema/GraphQLFieldDefinition///PointingToDeclaration/">GraphQLFieldDefinition</span></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>field</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the field definition in the GraphQL schema</p></div></div></div></div></div></div></div>\n',d={},l="field",o={id:"api/graphglue-core/io.github.graphglue.definition/-extension-field-definition/field-",title:"field",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.definition/-extension-field-definition/field-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.definition/-extension-field-definition",slug:"/api/graphglue-core/io.github.graphglue.definition/-extension-field-definition/field-",permalink:"/api/graphglue-core/io.github.graphglue.definition/-extension-field-definition/field-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"createQueryEntry",permalink:"/api/graphglue-core/io.github.graphglue.definition/-extension-field-definition/create-query-entry-"},next:{title:"generateFetcher",permalink:"/api/graphglue-core/io.github.graphglue.definition/-extension-field-definition/generate-fetcher-"}},p={},c=[];function f(e){const i={h1:"h1",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.h1,{id:"field",children:"field"}),"\n",(0,a.jsx)(r.A,{dokkaHTML:s})]})}function g(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(f,{...e})}):f(e)}}}]);