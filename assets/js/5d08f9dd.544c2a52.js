"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[89895],{13290:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>g,frontMatter:()=>l,metadata:()=>d,toc:()=>p});var a=i(74848),n=i(28453),r=i(52358);const o='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">val </span><a href="sub-node-filter-">subNodeFilter</a><span class="token operator">: </span><a href="../-node-filter/index-">NodeFilter</a></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>sub</span><wbr><span>Node</span><wbr><span><span>Filter</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the filter to negate</p></div></div></div></div></div></div></div>\n',l={},s="subNodeFilter",d={id:"api/graphglue-core/io.github.graphglue.connection.filter.model/-not-meta-filter/sub-node-filter-",title:"subNodeFilter",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.filter.model/-not-meta-filter/sub-node-filter-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.filter.model/-not-meta-filter",slug:"/api/graphglue-core/io.github.graphglue.connection.filter.model/-not-meta-filter/sub-node-filter-",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.model/-not-meta-filter/sub-node-filter-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"generateCondition",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.model/-not-meta-filter/generate-condition-"},next:{title:"OrMetaFilter",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.model/-or-meta-filter/index-"}},c={},p=[];function u(e){const t={h1:"h1",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"subnodefilter",children:"subNodeFilter"}),"\n",(0,a.jsx)(r.A,{dokkaHTML:o})]})}function g(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}}}]);