"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[89566],{8017:(a,e,s)=>{s.r(e),s.d(e,{assets:()=>d,contentTitle:()=>p,default:()=>h,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var n=s(74848),i=s(28453),t=s(52358);const r='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">definition<span class="token operator">: </span><a href="../../io.github.graphglue.definition/-field-definition/index-">FieldDefinition</a><span class="token punctuation">, </span></span><span class="parameter ">query<span class="token operator">: </span><a href="../-node-query/index-">NodeQuery</a><span class="token punctuation">, </span></span><span class="parameter ">onlyOnTypes<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-list/index.html">List</a><span class="token operator">&lt;</span><a href="../../io.github.graphglue.definition/-node-definition/index-">NodeDefinition</a><span class="token operator">&gt;</span><span class="token operator">?</span><span class="token punctuation">, </span></span><span class="parameter ">relationshipDefinitions<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-list/index.html">List</a><span class="token operator">&lt;</span><a href="../-authorized-relation-definition/index-">AuthorizedRelationDefinition</a><span class="token operator">&gt;</span><span class="token punctuation">, </span></span><span class="parameter ">resultKeyPath<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a></span></span><span class="token punctuation">)</span></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>definition</span></span></u></div></span></div><div><div class="title"><p class="paragraph">definition of the queried field</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>query</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the subquery</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>only</span><wbr><span>On</span><wbr><span><span>Types</span></span></u></div></span></div><div><div class="title"><p class="paragraph">a list of parent types on which this should be evaluated</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>relationship</span><wbr><span><span>Definitions</span></span></u></div></span></div><div><div class="title"><p class="paragraph">defines the chain of relationships to fetch</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>result</span><wbr><span>Key</span><wbr><span><span>Path</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the path to the key which fetches this field</p></div></div></div></div></div></div></div>\n',l={},p="NodeSubQuery",o={id:"api/graphglue-core/io.github.graphglue.data.execution/-node-sub-query/-node-sub-query-",title:"NodeSubQuery",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.execution/-node-sub-query/-node-sub-query-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.execution/-node-sub-query",slug:"/api/graphglue-core/io.github.graphglue.data.execution/-node-sub-query/-node-sub-query-",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-sub-query/-node-sub-query-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"NodeSubQuery",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-sub-query/index-"},next:{title:"cost",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-sub-query/cost-"}},d={},u=[];function c(a){const e={h1:"h1",...(0,i.R)(),...a.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{id:"nodesubquery",children:"NodeSubQuery"}),"\n",(0,n.jsx)(t.A,{dokkaHTML:r})]})}function h(a={}){const{wrapper:e}={...(0,i.R)(),...a.components};return e?(0,n.jsx)(e,{...a,children:(0,n.jsx)(c,{...a})}):c(a)}}}]);