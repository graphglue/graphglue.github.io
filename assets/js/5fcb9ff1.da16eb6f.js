"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[17043],{9972:(a,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>p,default:()=>g,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var t=n(74848),s=n(28453),r=n(52358);const i='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">private </span><span class="token keyword">fun </span><a href="apply-after-and-before-"><span class="token function">applyAfterAndBefore</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">options<span class="token operator">: </span><a href="../-node-query-options/index-">NodeQueryOptions</a><span class="token punctuation">, </span></span><span class="parameter ">nodeAlias<span class="token operator">: </span><span data-unresolved-link="org.neo4j.cypherdsl.core/SymbolicName///PointingToDeclaration/">SymbolicName</span><span class="token punctuation">, </span></span><span class="parameter ">builder<span class="token operator">: </span><span data-unresolved-link="org.neo4j.cypherdsl.core/StatementBuilder.OngoingReading///PointingToDeclaration/">StatementBuilder.OngoingReading</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-pair/index.html">Pair</a><span class="token operator">&lt;</span><span data-unresolved-link="org.neo4j.cypherdsl.core/StatementBuilder.OrderableOngoingReadingAndWithWithoutWhere///PointingToDeclaration/">StatementBuilder.OrderableOngoingReadingAndWithWithoutWhere</span><span class="token punctuation">, </span><a href="../-order-context/index-">OrderContext</a><span class="token operator">?</span><span class="token operator">&gt;</span></div><p class="paragraph">Adds before and after filters to the <code class="lang-kotlin">builder</code></p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">new builder with after and before applied</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>options</span></span></u></div></span></div><div><div class="title"><p class="paragraph">defines after and before</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>node</span><wbr><span><span>Alias</span></span></u></div></span></div><div><div class="title"><p class="paragraph">name of the variable containing the node</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>builder</span></span></u></div></span></div><div><div class="title"><p class="paragraph">ongoing statement builder</p></div></div></div></div></div></div></div>\n',o={},p="applyAfterAndBefore",l={id:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/apply-after-and-before-",title:"applyAfterAndBefore",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/apply-after-and-before-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor",slug:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/apply-after-and-before-",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/apply-after-and-before-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"NodeQueryExecutor",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/-node-query-executor-"},next:{title:"applyFilterConditions",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/apply-filter-conditions-"}},d={},c=[];function u(a){const e={h1:"h1",...(0,s.R)(),...a.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"applyafterandbefore",children:"applyAfterAndBefore"}),"\n",(0,t.jsx)(r.A,{dokkaHTML:i})]})}function g(a={}){const{wrapper:e}={...(0,s.R)(),...a.components};return e?(0,t.jsx)(e,{...a,children:(0,t.jsx)(u,{...a})}):u(a)}}}]);