"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[62394],{13961:(e,a,i)=>{i.r(a),i.d(a,{assets:()=>c,contentTitle:()=>p,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var t=i(74848),s=i(28453),r=i(52358);const n='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">val </span><a href="skip-">skip</a><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-int/index.html">Int</a><span class="token operator">?</span></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>skip</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the number of results to skip</p></div></div></div></div></div></div></div>\n',o={},p="skip",l={id:"api/graphglue-core/io.github.graphglue.data.execution/-search-query-options/skip-",title:"skip",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.execution/-search-query-options/skip-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.execution/-search-query-options",slug:"/api/graphglue-core/io.github.graphglue.data.execution/-search-query-options/skip-",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-search-query-options/skip-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"query",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-search-query-options/query-"},next:{title:"SearchQueryResult",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-search-query-result/index-"}},c={},u=[];function d(e){const a={h1:"h1",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.h1,{id:"skip",children:"skip"}),"\n",(0,t.jsx)(r.A,{dokkaHTML:n})]})}function h(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);