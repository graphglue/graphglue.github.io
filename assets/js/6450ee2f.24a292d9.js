"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[73968],{76420:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>o,default:()=>f,frontMatter:()=>l,metadata:()=>p,toc:()=>d});var t=n(74848),r=n(28453),i=n(52358);const s='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">open </span><span class="token keyword">override </span><span class="token keyword">fun </span><a href="generate-filter-entry-"><span class="token function">generateFilterEntry</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">scalarType<span class="token operator">: </span><span data-unresolved-link="graphql.schema/GraphQLInputType///PointingToDeclaration/">GraphQLInputType</span><span class="token punctuation">, </span></span><span class="parameter ">neo4jName<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="../../io.github.graphglue.connection.filter.definition/-filter-entry-definition/index-">FilterEntryDefinition</a></div><p class="paragraph">Generates the <a href="../../io.github.graphglue.connection.filter.definition/-filter-entry-definition/index-">FilterEntryDefinition</a> used in the filter</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the generated definition of the filter entry</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>scalar</span><wbr><span><span>Type</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the type of the GraphQL filter field</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>neo4j</span><wbr><span><span>Name</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the name of the property of the node in the database (might be different from <a href="../../../graphglue-core/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry/name-">name</a>)</p></div></div></div></div></div></div></div>\n',l={},o="generateFilterEntry",p={id:"api/graphglue-core/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry/generate-filter-entry-",title:"generateFilterEntry",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry/generate-filter-entry-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry",slug:"/api/graphglue-core/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry/generate-filter-entry-",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry/generate-filter-entry-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"ScalarFilterEntry",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry/-scalar-filter-entry-"},next:{title:"ScalarFilterEntryBase",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry-base/index-"}},c={},d=[];function g(e){const a={h1:"h1",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.h1,{id:"generatefilterentry",children:"generateFilterEntry"}),"\n",(0,t.jsx)(i.A,{dokkaHTML:s})]})}function f(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(g,{...e})}):g(e)}}}]);