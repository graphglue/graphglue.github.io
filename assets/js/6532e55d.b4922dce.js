"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[34618],{88833:(a,e,s)=>{s.r(e),s.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>c,metadata:()=>r,toc:()=>d});var i=s(74848),t=s(28453),n=s(52358);const p='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">backingMap<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-mutable-map/index.html">MutableMap</a><span class="token operator">&lt;</span><a href="index-">K</a><span class="token punctuation">, </span><a href="index-">V</a><span class="token operator">&gt;</span><span class="token operator"> = </span>HashMap()</span></span><span class="token punctuation">)</span></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>K</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the type of the keys under which cached entities are saved</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>V</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the type of the cached entities</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>backing</span><wbr><span><span>Map</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the map which is used to cache the entities, defaults to a Hashmap</p></div></div></div></div></div></div></div>\n',c={},l="CacheMap",r={id:"api/graphglue-core/io.github.graphglue.util/-cache-map/-cache-map-",title:"CacheMap",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.util/-cache-map/-cache-map-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.util/-cache-map",slug:"/api/graphglue-core/io.github.graphglue.util/-cache-map/-cache-map-",permalink:"/api/graphglue-core/io.github.graphglue.util/-cache-map/-cache-map-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"CacheMap",permalink:"/api/graphglue-core/io.github.graphglue.util/-cache-map/index-"},next:{title:"backingMap",permalink:"/api/graphglue-core/io.github.graphglue.util/-cache-map/backing-map-"}},o={},d=[];function h(a){const e={h1:"h1",...(0,t.R)(),...a.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"cachemap",children:"CacheMap"}),"\n",(0,i.jsx)(n.A,{dokkaHTML:p})]})}function u(a={}){const{wrapper:e}={...(0,t.R)(),...a.components};return e?(0,i.jsx)(e,{...a,children:(0,i.jsx)(h,{...a})}):h(a)}}}]);