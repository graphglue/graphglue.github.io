"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[23598],{64671:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>p,contentTitle:()=>l,default:()=>g,frontMatter:()=>n,metadata:()=>d,toc:()=>u});var i=r(74848),s=r(28453),o=r(52358);const t='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">val </span><a href="override-is-all-query-">overrideIsAllQuery</a><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-boolean/index.html">Boolean</a><span class="token operator"> = </span><span class="token boolean">false</span></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>override</span><wbr><span>Is</span><wbr><span>All</span><wbr><span><span>Query</span></span></u></div></span></div><div><div class="title"><p class="paragraph">if <code class="lang-kotlin">true</code>, this query is considered to fetch all nodes (use with caution)</p></div></div></div></div></div></div></div>\n',n={},l="overrideIsAllQuery",d={id:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-options/override-is-all-query-",title:"overrideIsAllQuery",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.execution/-node-query-options/override-is-all-query-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-options",slug:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-options/override-is-all-query-",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-options/override-is-all-query-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"orderBy",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-options/order-by-"},next:{title:"skip",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-options/skip-"}},p={},u=[];function c(e){const a={h1:"h1",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.h1,{id:"overrideisallquery",children:"overrideIsAllQuery"}),"\n",(0,i.jsx)(o.A,{dokkaHTML:t})]})}function g(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);