"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[42204],{30859:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>p,contentTitle:()=>c,default:()=>g,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var n=r(74848),t=r(28453),o=r(52358);const i='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">fun </span><a href="values-"><span class="token function">values</span></a><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-array/index.html">Array</a><span class="token operator">&lt;</span><a href="index-">OrderDirection</a><span class="token operator">&gt;</span></div><p class="paragraph">Returns an array containing the constants of this enum type, in the order they\'re declared.</p><p class="paragraph">This method may be used to iterate over the constants.</p></div></div>\n',s={},c="values",l={id:"api/graphglue-core/io.github.graphglue.connection.order/-order-direction/values-",title:"values",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.order/-order-direction/values-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.order/-order-direction",slug:"/api/graphglue-core/io.github.graphglue.connection.order/-order-direction/values-",permalink:"/api/graphglue-core/io.github.graphglue.connection.order/-order-direction/values-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"valueOf",permalink:"/api/graphglue-core/io.github.graphglue.connection.order/-order-direction/value-of-"},next:{title:"OrderField",permalink:"/api/graphglue-core/io.github.graphglue.connection.order/-order-field/index-"}},p={},d=[];function u(e){const a={h1:"h1",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h1,{id:"values",children:"values"}),"\n",(0,n.jsx)(o.A,{dokkaHTML:i})]})}function g(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}}}]);