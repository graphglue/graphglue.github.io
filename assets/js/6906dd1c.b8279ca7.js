"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[48362],{20343:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>u,contentTitle:()=>p,default:()=>g,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var t=a(74848),s=a(28453),r=a(52358);const i='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">private </span><span class="token keyword">fun </span><a href="split-node-query-entry-"><span class="token function">splitNodeQueryEntry</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">entry<span class="token operator">: </span><a href="../../-node-query-entry/index-">NodeQueryEntry</a><span class="token operator">&lt;</span><span class="token operator">*</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="../../-node-query-entry/index-">NodeQueryEntry</a><span class="token operator">&lt;</span><span class="token operator">*</span><span class="token operator">&gt;</span></div><p class="paragraph">Splits up a node query entry into multiple smaller entries if possible</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the split up subquery</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>entry</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the entry to split</p></div></div></div></div></div></div></div>\n',o={},p="splitNodeQueryEntry",l={id:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-engine/-node-query-engine-instance/split-node-query-entry-",title:"splitNodeQueryEntry",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.execution/-node-query-engine/-node-query-engine-instance/split-node-query-entry-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-engine/-node-query-engine-instance",slug:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-engine/-node-query-engine-instance/split-node-query-entry-",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-engine/-node-query-engine-instance/split-node-query-entry-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"executeAdditionalQueries",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-engine/-node-query-engine-instance/execute-additional-queries-"},next:{title:"splitNodeQuery",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-engine/-node-query-engine-instance/split-node-query-"}},u={},d=[];function c(e){const n={h1:"h1",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"splitnodequeryentry",children:"splitNodeQueryEntry"}),"\n",(0,t.jsx)(r.A,{dokkaHTML:i})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);