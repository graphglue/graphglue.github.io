"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[68376],{14254:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>p});var o=a(74848),t=a(28453),i=a(52358);const s='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">val </span><a href="nodes-">nodes</a><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-list/index.html">List</a><span class="token operator">&lt;</span><a href="index-">T</a><span class="token operator">&gt;</span></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>nodes</span></span></u></div></span></div><div><div class="title"><p class="paragraph">all related nodes</p></div></div></div></div></div></div></div>\n',r={},l="nodes",c={id:"api/graphglue-core/io.github.graphglue.connection.model/-connection/nodes-",title:"nodes",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.model/-connection/nodes-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.model/-connection",slug:"/api/graphglue-core/io.github.graphglue.connection.model/-connection/nodes-",permalink:"/api/graphglue-core/io.github.graphglue.connection.model/-connection/nodes-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"edges",permalink:"/api/graphglue-core/io.github.graphglue.connection.model/-connection/edges-"},next:{title:"order",permalink:"/api/graphglue-core/io.github.graphglue.connection.model/-connection/order-"}},d={},p=[];function g(e){const n={h1:"h1",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"nodes",children:"nodes"}),"\n",(0,o.jsx)(i.A,{dokkaHTML:s})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(g,{...e})}):g(e)}}}]);