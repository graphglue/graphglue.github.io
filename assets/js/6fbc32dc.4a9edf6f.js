"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[11550],{44887:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>l,default:()=>g,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var t=n(74848),i=n(28453),s=n(52358);const r='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">private </span><span class="token keyword">fun </span><a href="apply-filter-conditions-"><span class="token function">applyFilterConditions</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">filters<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-list/index.html">List</a><span class="token operator">&lt;</span><a href="../-cypher-condition-generator/index-">CypherConditionGenerator</a><span class="token operator">&gt;</span><span class="token punctuation">, </span></span><span class="parameter ">builder<span class="token operator">: </span><span data-unresolved-link="org.neo4j.cypherdsl.core/StatementBuilder.OrderableOngoingReadingAndWithWithoutWhere///PointingToDeclaration/">StatementBuilder.OrderableOngoingReadingAndWithWithoutWhere</span><span class="token punctuation">, </span></span><span class="parameter ">node<span class="token operator">: </span><span data-unresolved-link="org.neo4j.cypherdsl.core/Node///PointingToDeclaration/">Node</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><span data-unresolved-link="org.neo4j.cypherdsl.core/StatementBuilder.OrderableOngoingReadingAndWith///PointingToDeclaration/">StatementBuilder.OrderableOngoingReadingAndWith</span></div><p class="paragraph">Applies all filter conditions to a builder and returns the resulting builder</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the resulting builder</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>filters</span></span></u></div></span></div><div><div class="title"><p class="paragraph">list of filter conditions</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>builder</span></span></u></div></span></div><div><div class="title"><p class="paragraph">builder for  Cypher-DSL query</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>node</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the node to generate the filter conditions for</p></div></div></div></div></div></div></div>\n',o={},l="applyFilterConditions",p={id:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/apply-filter-conditions-",title:"applyFilterConditions",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/apply-filter-conditions-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor",slug:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/apply-filter-conditions-",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/apply-filter-conditions-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"applyAfterAndBefore",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/apply-after-and-before-"},next:{title:"applyResultLimiters",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/apply-result-limiters-"}},d={},c=[];function u(e){const a={h1:"h1",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.h1,{id:"applyfilterconditions",children:"applyFilterConditions"}),"\n",(0,t.jsx)(s.A,{dokkaHTML:r})]})}function g(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}}}]);