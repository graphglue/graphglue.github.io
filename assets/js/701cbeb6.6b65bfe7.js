"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[57645],{89816:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>f,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var a=i(74848),t=i(28453),s=i(52358);const r='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">internal </span><span class="token keyword">open </span><span class="token keyword">override </span><span class="token keyword">fun </span><a href="generate-field-definition-"><span class="token function">generateFieldDefinition</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">transformationContext<span class="token operator">: </span><a href="../../io.github.graphglue.graphql.schema/-schema-transformation-context/index-">SchemaTransformationContext</a></span></span><span class="token punctuation">)</span><span class="token operator">: </span><span data-unresolved-link="graphql.schema/GraphQLFieldDefinition///PointingToDeclaration/">GraphQLFieldDefinition</span><span class="token operator">?</span></div><p class="paragraph">Generates a field definition</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the generated field definition, or null if the field should not be exposed</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>transformation</span><wbr><span><span>Context</span></span></u></div></span></div><div><div class="title"><p class="paragraph">used to generate GraphQL types, register data fetchers, ...</p></div></div></div></div></div></div></div>\n',o={},l="generateFieldDefinition",p={id:"api/graphglue-core/io.github.graphglue.definition/-extension-field-definition/generate-field-definition-",title:"generateFieldDefinition",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.definition/-extension-field-definition/generate-field-definition-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.definition/-extension-field-definition",slug:"/api/graphglue-core/io.github.graphglue.definition/-extension-field-definition/generate-field-definition-",permalink:"/api/graphglue-core/io.github.graphglue.definition/-extension-field-definition/generate-field-definition-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"generateFetcher",permalink:"/api/graphglue-core/io.github.graphglue.definition/-extension-field-definition/generate-fetcher-"},next:{title:"graphQLName",permalink:"/api/graphglue-core/io.github.graphglue.definition/-extension-field-definition/graph-q-l-name-"}},d={},c=[];function g(e){const n={h1:"h1",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"generatefielddefinition",children:"generateFieldDefinition"}),"\n",(0,a.jsx)(s.A,{dokkaHTML:r})]})}function f(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(g,{...e})}):g(e)}}}]);