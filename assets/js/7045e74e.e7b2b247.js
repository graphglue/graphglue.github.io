"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[61910],{30693:(a,n,t)=>{t.r(n),t.d(n,{assets:()=>g,contentTitle:()=>p,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>c});var e=t(74848),s=t(28453),o=t(52358);const i='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">inline </span><span class="token keyword">fun </span><span class="token operator">&lt;</span><a href="spring-get-repeatable-annotations-">A</a><span class="token operator"> : </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-annotation/index.html">Annotation</a><span class="token operator">&gt; </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.reflect/-k-class/index.html">KClass</a><span class="token operator">&lt;</span><span class="token operator">*</span><span class="token operator">&gt;</span><span class="token punctuation">.</span><a href="spring-get-repeatable-annotations-"><span class="token function">springGetRepeatableAnnotations</span></a><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-collection/index.html">Collection</a><span class="token operator">&lt;</span><a href="spring-get-repeatable-annotations-">A</a><span class="token operator">&gt;</span></div><p class="paragraph">Uses <span data-unresolved-link="org.springframework.core.annotation/AnnotatedElementUtils/getMergedRepeatableAnnotations/#java.lang.reflect.AnnotatedElement#java.lang.Class[TypeParam(bounds=[kotlin.Annotation])]/PointingToDeclaration/">AnnotatedElementUtils.getMergedRepeatableAnnotations</span> to find all repeatable annotations of type <a href="spring-get-repeatable-annotations-">A</a> Excludes annotations on superclasses</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the found <a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-annotation/index.html">Annotation</a>s (can be empty)</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>A</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the type of the <a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-annotation/index.html">Annotation</a>s to find</p></div></div></div></div></div></div></div>\n',l={},p="springGetRepeatableAnnotations",r={id:"api/graphglue-core/io.github.graphglue.graphql.extensions/spring-get-repeatable-annotations-",title:"springGetRepeatableAnnotations",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.graphql.extensions/spring-get-repeatable-annotations-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.graphql.extensions",slug:"/api/graphglue-core/io.github.graphglue.graphql.extensions/spring-get-repeatable-annotations-",permalink:"/api/graphglue-core/io.github.graphglue.graphql.extensions/spring-get-repeatable-annotations-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"springFindRepeatableAnnotations",permalink:"/api/graphglue-core/io.github.graphglue.graphql.extensions/spring-find-repeatable-annotations-"},next:{title:"toTopLevelObjects",permalink:"/api/graphglue-core/io.github.graphglue.graphql.extensions/to-top-level-objects-"}},g={},c=[];function d(a){const n={h1:"h1",...(0,s.R)(),...a.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.h1,{id:"springgetrepeatableannotations",children:"springGetRepeatableAnnotations"}),"\n",(0,e.jsx)(o.A,{dokkaHTML:i})]})}function h(a={}){const{wrapper:n}={...(0,s.R)(),...a.components};return n?(0,e.jsx)(n,{...a,children:(0,e.jsx)(d,{...a})}):d(a)}}}]);