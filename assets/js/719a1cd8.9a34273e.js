"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[20109],{50785:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>p,contentTitle:()=>o,default:()=>g,frontMatter:()=>l,metadata:()=>d,toc:()=>c});var n=t(74848),i=t(28453),s=t(52358);const r='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">definition<span class="token operator">: </span><a href="../../io.github.graphglue.connection.filter.definition/-and-meta-filter-definition/index-">AndMetaFilterDefinition</a><span class="token punctuation">, </span></span><span class="parameter ">subNodeFilters<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-list/index.html">List</a><span class="token operator">&lt;</span><a href="../-node-filter/index-">NodeFilter</a><span class="token operator">&gt;</span></span></span><span class="token punctuation">)</span></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>definition</span></span></u></div></span></div><div><div class="title"><p class="paragraph">associated definition of the entry</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>sub</span><wbr><span>Node</span><wbr><span><span>Filters</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the list of filters to join</p></div></div></div></div></div></div></div>\n',l={},o="AndMetaFilter",d={id:"api/graphglue-core/io.github.graphglue.connection.filter.model/-and-meta-filter/-and-meta-filter-",title:"AndMetaFilter",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.filter.model/-and-meta-filter/-and-meta-filter-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.filter.model/-and-meta-filter",slug:"/api/graphglue-core/io.github.graphglue.connection.filter.model/-and-meta-filter/-and-meta-filter-",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.model/-and-meta-filter/-and-meta-filter-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"AndMetaFilter",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.model/-and-meta-filter/index-"},next:{title:"generateCondition",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.model/-and-meta-filter/generate-condition-"}},p={},c=[];function u(e){const a={h1:"h1",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h1,{id:"andmetafilter",children:"AndMetaFilter"}),"\n",(0,n.jsx)(s.A,{dokkaHTML:r})]})}function g(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}}}]);