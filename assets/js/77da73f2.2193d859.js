"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[44242],{64627:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var t=n(74848),r=n(28453),i=n(52358);const o='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">val </span><a href="condition-generator-">conditionGenerator</a><span class="token operator">: </span><span class="token punctuation">(</span>property<span class="token operator">: </span><span data-unresolved-link="org.neo4j.cypherdsl.core/Property///PointingToDeclaration/">Property</span><span class="token punctuation">, </span>value<span class="token operator">: </span><span data-unresolved-link="org.neo4j.cypherdsl.core/Parameter///PointingToDeclaration/">Parameter</span><span class="token operator">&lt;</span><span class="token operator">*</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator"> -&gt; </span><span data-unresolved-link="org.neo4j.cypherdsl.core/Condition///PointingToDeclaration/">Condition</span></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>condition</span><wbr><span><span>Generator</span></span></u></div></span></div><div><div class="title"><p class="paragraph">used to generate the condition which applies the filter in the database</p></div></div></div></div></div></div></div>\n',s={},l="conditionGenerator",c={id:"api/graphglue-core/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry-base/condition-generator-",title:"conditionGenerator",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry-base/condition-generator-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry-base",slug:"/api/graphglue-core/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry-base/condition-generator-",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry-base/condition-generator-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"ScalarFilterEntryBase",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry-base/-scalar-filter-entry-base-"},next:{title:"description",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry-base/description-"}},p={},d=[];function g(e){const a={h1:"h1",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.h1,{id:"conditiongenerator",children:"conditionGenerator"}),"\n",(0,t.jsx)(i.A,{dokkaHTML:o})]})}function u(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(g,{...e})}):g(e)}}}]);