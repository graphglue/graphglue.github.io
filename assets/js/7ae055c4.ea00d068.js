"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[24235],{65191:(a,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>p,default:()=>g,frontMatter:()=>c,metadata:()=>o,toc:()=>h});var s=t(74848),n=t(28453),r=t(52358);const i='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">fun </span><a href="register-function-data-fetcher-"><span class="token function">registerFunctionDataFetcher</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">type<span class="token operator">: </span><span data-unresolved-link="graphql.schema/GraphQLFieldsContainer///PointingToDeclaration/">GraphQLFieldsContainer</span><span class="token punctuation">, </span></span><span class="parameter ">fieldName<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a><span class="token punctuation">, </span></span><span class="parameter ">kClass<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.reflect/-k-class/index.html">KClass</a><span class="token operator">&lt;</span><span class="token operator">*</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">)</span></div><p class="paragraph">Registers a data fetcher for a specific function</p><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>type</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the container type on which to register the data fetcher</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>field</span><wbr><span><span>Name</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the name of the function</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>k</span><wbr><span><span>Class</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the class which contains the function to use for data fetching</p></div></div></div></div></div></div></div>\n',c={},p="registerFunctionDataFetcher",o={id:"api/graphglue-core/io.github.graphglue.graphql.schema/-schema-transformation-context/register-function-data-fetcher-",title:"registerFunctionDataFetcher",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.graphql.schema/-schema-transformation-context/register-function-data-fetcher-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.graphql.schema/-schema-transformation-context",slug:"/api/graphglue-core/io.github.graphglue.graphql.schema/-schema-transformation-context/register-function-data-fetcher-",permalink:"/api/graphglue-core/io.github.graphglue.graphql.schema/-schema-transformation-context/register-function-data-fetcher-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"registerDataFetcher",permalink:"/api/graphglue-core/io.github.graphglue.graphql.schema/-schema-transformation-context/register-data-fetcher-"},next:{title:"registerPropertyDataFetcher",permalink:"/api/graphglue-core/io.github.graphglue.graphql.schema/-schema-transformation-context/register-property-data-fetcher-"}},l={},h=[];function d(a){const e={h1:"h1",...(0,n.R)(),...a.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"registerfunctiondatafetcher",children:"registerFunctionDataFetcher"}),"\n",(0,s.jsx)(r.A,{dokkaHTML:i})]})}function g(a={}){const{wrapper:e}={...(0,n.R)(),...a.components};return e?(0,s.jsx)(e,{...a,children:(0,s.jsx)(d,{...a})}):d(a)}}}]);