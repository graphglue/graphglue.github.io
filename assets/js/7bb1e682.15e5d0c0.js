"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[21616],{88791:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>c,frontMatter:()=>o,metadata:()=>g,toc:()=>u});var n=i(74848),a=i(28453),r=i(52358);const s='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">val </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.reflect/-k-type/index.html">KType</a><span class="token punctuation">.</span><a href="first-type-argument-">firstTypeArgument</a><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.reflect/-k-type/index.html">KType</a></div><p class="paragraph">Helper to get the type of the first type argument</p></div></div>\n',o={},p="firstTypeArgument",g={id:"api/graphglue-core/io.github.graphglue.definition.extensions/first-type-argument-",title:"firstTypeArgument",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.definition.extensions/first-type-argument-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.definition.extensions",slug:"/api/graphglue-core/io.github.graphglue.definition.extensions/first-type-argument-",permalink:"/api/graphglue-core/io.github.graphglue.definition.extensions/first-type-argument-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"io.github.graphglue.definition.extensions",permalink:"/api/graphglue-core/io.github.graphglue.definition.extensions/index-"},next:{title:"io.github.graphglue.graphql.extensions",permalink:"/api/graphglue-core/io.github.graphglue.graphql.extensions/index-"}},l={},u=[];function h(e){const t={h1:"h1",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"firsttypeargument",children:"firstTypeArgument"}),"\n",(0,n.jsx)(r.A,{dokkaHTML:s})]})}function c(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}}}]);