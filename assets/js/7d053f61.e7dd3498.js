"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[10471],{46951:(a,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>p,toc:()=>d});var t=n(74848),i=n(28453),s=n(52358);const o='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">fun </span><a href="from-"><span class="token function">from</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">dataFetchingEnvironment<span class="token operator">: </span><span data-unresolved-link="graphql.schema/DataFetchingEnvironment///PointingToDeclaration/">DataFetchingEnvironment</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="../index-">FieldFetchingContext</a></div><p class="paragraph">Creates a new <a href="../index-">FieldFetchingContext</a> based on a <span data-unresolved-link="graphql.schema/DataFetchingEnvironment///PointingToDeclaration/">DataFetchingEnvironment</span></p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the generated <a href="../index-">FieldFetchingContext</a></p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>data</span><wbr><span>Fetching</span><wbr><span><span>Environment</span></span></u></div></span></div><div><div class="title"><p class="paragraph">provides arguments, sub-selection and a current result key path</p></div></div></div></div></div></div></div>\n',r={},c="from",p={id:"api/graphglue-core/io.github.graphglue.data.execution/-field-fetching-context/-companion/from-",title:"from",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.execution/-field-fetching-context/-companion/from-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.execution/-field-fetching-context/-companion",slug:"/api/graphglue-core/io.github.graphglue.data.execution/-field-fetching-context/-companion/from-",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-field-fetching-context/-companion/from-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Companion",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-field-fetching-context/-companion/index-"},next:{title:"FieldFetchingContext",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-field-fetching-context/-field-fetching-context-"}},l={},d=[];function g(a){const e={h1:"h1",...(0,i.R)(),...a.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"from",children:"from"}),"\n",(0,t.jsx)(s.A,{dokkaHTML:o})]})}function h(a={}){const{wrapper:e}={...(0,i.R)(),...a.components};return e?(0,t.jsx)(e,{...a,children:(0,t.jsx)(g,{...a})}):g(a)}}}]);