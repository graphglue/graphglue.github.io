"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[65500],{97667:(a,e,r)=>{r.r(e),r.d(e,{assets:()=>d,contentTitle:()=>o,default:()=>g,frontMatter:()=>l,metadata:()=>p,toc:()=>c});var s=r(74848),n=r(28453),i=r(52358);const t='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">name<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a><span class="token punctuation">, </span></span><span class="parameter ">isNullable<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-boolean/index.html">Boolean</a><span class="token punctuation">, </span></span><span class="parameter ">isComplex<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-boolean/index.html">Boolean</a></span></span><span class="token punctuation">)</span></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>T</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the type of <a href="../../io.github.graphglue.model/-node/index-">Node</a> for which the order is defined</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>name</span></span></u></div></span></div><div><div class="title"><p class="paragraph">name of the field in the cursor JSON</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>is</span><wbr><span><span>Nullable</span></span></u></div></span></div><div><div class="title"><p class="paragraph">if true, this part can be null</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>is</span><wbr><span><span>Complex</span></span></u></div></span></div><div><div class="title"><p class="paragraph">if true, this order part is ignored when generating relationship-based order parts</p></div></div></div></div></div></div></div>\n',l={},o="OrderPart",p={id:"api/graphglue-core/io.github.graphglue.connection.order/-order-part/-order-part-",title:"OrderPart",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.order/-order-part/-order-part-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.order/-order-part",slug:"/api/graphglue-core/io.github.graphglue.connection.order/-order-part/-order-part-",permalink:"/api/graphglue-core/io.github.graphglue.connection.order/-order-part/-order-part-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"OrderPart",permalink:"/api/graphglue-core/io.github.graphglue.connection.order/-order-part/index-"},next:{title:"getExpression",permalink:"/api/graphglue-core/io.github.graphglue.connection.order/-order-part/get-expression-"}},d={},c=[];function u(a){const e={h1:"h1",...(0,n.R)(),...a.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"orderpart",children:"OrderPart"}),"\n",(0,s.jsx)(i.A,{dokkaHTML:t})]})}function g(a={}){const{wrapper:e}={...(0,n.R)(),...a.components};return e?(0,s.jsx)(e,{...a,children:(0,s.jsx)(u,{...a})}):u(a)}}}]);