"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1354],{2178:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>l,default:()=>g,frontMatter:()=>r,metadata:()=>p,toc:()=>c});var t=n(74848),i=n(28453),s=n(52358);const o='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">val </span><a href="only-on-types-">onlyOnTypes</a><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-list/index.html">List</a><span class="token operator">&lt;</span><a href="../../io.github.graphglue.definition/-node-definition/index-">NodeDefinition</a><span class="token operator">&gt;</span><span class="token operator">?</span></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>only</span><wbr><span>On</span><wbr><span><span>Types</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the list of node types this entry should be fetched for</p></div></div></div></div></div></div></div>\n',r={},l="onlyOnTypes",p={id:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-entry/only-on-types-",title:"onlyOnTypes",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.execution/-node-query-entry/only-on-types-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-entry",slug:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-entry/only-on-types-",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-entry/only-on-types-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"fieldDefinition",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-entry/field-definition-"},next:{title:"resultKeyPath",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-entry/result-key-path-"}},d={},c=[];function u(e){const a={h1:"h1",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.h1,{id:"onlyontypes",children:"onlyOnTypes"}),"\n",(0,t.jsx)(s.A,{dokkaHTML:o})]})}function g(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}}}]);