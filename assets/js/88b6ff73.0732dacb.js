"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[19137],{78480:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>u,contentTitle:()=>l,default:()=>g,frontMatter:()=>o,metadata:()=>d,toc:()=>p});var s=t(74848),n=t(28453),i=t(52358);const r='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">val </span><a href="nodes-">nodes</a><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-list/index.html">List</a><span class="token operator">&lt;</span><a href="index-">T</a><span class="token operator">&gt;</span></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>nodes</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the fetched nodes</p></div></div></div></div></div></div></div>\n',o={},l="nodes",d={id:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-result/nodes-",title:"nodes",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.execution/-node-query-result/nodes-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-result",slug:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-result/nodes-",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-result/nodes-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"NodeQueryResult",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-result/-node-query-result-"},next:{title:"options",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-result/options-"}},u={},p=[];function c(e){const a={h1:"h1",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.h1,{id:"nodes",children:"nodes"}),"\n",(0,s.jsx)(i.A,{dokkaHTML:r})]})}function g(e={}){const{wrapper:a}={...(0,n.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);