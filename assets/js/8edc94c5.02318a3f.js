"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4502],{29614:(a,e,s)=>{s.r(e),s.d(e,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var n=s(74848),o=s(28453),t=s(52358);const p='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">internal </span><span class="token keyword">suspend </span><span class="token keyword">fun </span><span class="token operator">&lt;</span><a href="load-nodes-of-relationship-">T</a><span class="token operator"> : </span><a href="index-">Node</a><span class="token operator">?</span><span class="token operator">&gt; </span><a href="load-nodes-of-relationship-"><span class="token function">loadNodesOfRelationship</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">property<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.reflect/-k-property1/index.html">KProperty1</a><span class="token operator">&lt;</span><span class="token operator">*</span><span class="token punctuation">, </span><span class="token operator">*</span><span class="token operator">&gt;</span><span class="token punctuation">, </span></span><span class="parameter ">loader<span class="token operator">: </span><a href="../../io.github.graphglue.model.property/-lazy-loading-subquery-generator/index-">LazyLoadingSubqueryGenerator</a><span class="token operator">&lt;</span><a href="load-nodes-of-relationship-">T</a><span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator"> -&gt; </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-unit/index.html">Unit</a><span class="token operator">?</span></span></span><span class="token punctuation">)</span></div><p class="paragraph">Loads all nodes of a relationship If the <code class="lang-kotlin">loader</code> is provided, specified nested nodes are loaded too</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the result of the query and the query itself</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>property</span></span></u></div></span></div><div><div class="title"><p class="paragraph">defines the relation to load the nodes of</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>loader</span></span></u></div></span></div><div><div class="title"><p class="paragraph">if provided used to define nested nodes to load</p></div></div></div></div></div></div></div>\n',l={},r="loadNodesOfRelationship",i={id:"api/graphglue-core/io.github.graphglue.model/-node/load-nodes-of-relationship-",title:"loadNodesOfRelationship",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.model/-node/load-nodes-of-relationship-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.model/-node",slug:"/api/graphglue-core/io.github.graphglue.model/-node/load-nodes-of-relationship-",permalink:"/api/graphglue-core/io.github.graphglue.model/-node/load-nodes-of-relationship-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"lazyLoadingContext",permalink:"/api/graphglue-core/io.github.graphglue.model/-node/lazy-loading-context-"},next:{title:"orderFields",permalink:"/api/graphglue-core/io.github.graphglue.model/-node/order-fields-"}},d={},c=[];function u(a){const e={h1:"h1",...(0,o.R)(),...a.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{id:"loadnodesofrelationship",children:"loadNodesOfRelationship"}),"\n",(0,n.jsx)(t.A,{dokkaHTML:p})]})}function h(a={}){const{wrapper:e}={...(0,o.R)(),...a.components};return e?(0,n.jsx)(e,{...a,children:(0,n.jsx)(u,{...a})}):u(a)}}}]);