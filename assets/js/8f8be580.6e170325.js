"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[52425],{77707:(i,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>d,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>c});var a=n(74848),t=n(28453),s=n(52358);const o='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">field<span class="token operator">: </span><span data-unresolved-link="graphql.schema/GraphQLFieldDefinition///PointingToDeclaration/">GraphQLFieldDefinition</span><span class="token punctuation">, </span></span><span class="parameter ">cost<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-int/index.html">Int</a><span class="token operator"> = </span><span class="token constant">0</span></span></span><span class="token punctuation">)</span></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>field</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the field definition in the GraphQL schema</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>cost</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the cost of this field, defaults to 0</p></div></div></div></div></div></div></div>\n',l={},d="ExtensionFieldDefinition",r={id:"api/graphglue-core/io.github.graphglue.definition/-extension-field-definition/-extension-field-definition-",title:"ExtensionFieldDefinition",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.definition/-extension-field-definition/-extension-field-definition-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.definition/-extension-field-definition",slug:"/api/graphglue-core/io.github.graphglue.definition/-extension-field-definition/-extension-field-definition-",permalink:"/api/graphglue-core/io.github.graphglue.definition/-extension-field-definition/-extension-field-definition-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"ExtensionFieldDefinition",permalink:"/api/graphglue-core/io.github.graphglue.definition/-extension-field-definition/index-"},next:{title:"cost",permalink:"/api/graphglue-core/io.github.graphglue.definition/-extension-field-definition/cost-"}},p={},c=[];function f(i){const e={h1:"h1",...(0,t.R)(),...i.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h1,{id:"extensionfielddefinition",children:"ExtensionFieldDefinition"}),"\n",(0,a.jsx)(s.A,{dokkaHTML:o})]})}function u(i={}){const{wrapper:e}={...(0,t.R)(),...i.components};return e?(0,a.jsx)(e,{...i,children:(0,a.jsx)(f,{...i})}):f(i)}}}]);