"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8135],{58227:(a,e,i)=>{i.r(e),i.d(e,{assets:()=>d,contentTitle:()=>o,default:()=>g,frontMatter:()=>l,metadata:()=>p,toc:()=>c});var n=i(74848),t=i(28453),s=i(52358);const r='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">filters<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-list/index.html">List</a><span class="token operator">&lt;</span><a href="../../io.github.graphglue.connection.filter/-type-filter-definition-entry/index-">TypeFilterDefinitionEntry</a><span class="token operator">&gt;</span><span class="token punctuation">, </span></span><span class="parameter ">filterDefinitionCache<span class="token operator">: </span><a href="../-filter-definition-cache/index-">FilterDefinitionCache</a><span class="token punctuation">, </span></span><span class="parameter ">nodeDefinitionCollection<span class="token operator">: </span><a href="../../io.github.graphglue.definition/-node-definition-collection/index-">NodeDefinitionCollection</a><span class="token punctuation">, </span></span><span class="parameter ">additionalFilterBeans<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-map/index.html">Map</a><span class="token operator">&lt;</span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a><span class="token punctuation">, </span><a href="../-filter-entry-definition/index-">FilterEntryDefinition</a><span class="token operator">&gt;</span><span class="token punctuation">, </span></span><span class="parameter ">nodeFilterGenerators<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-list/index.html">List</a><span class="token operator">&lt;</span><a href="../../io.github.graphglue.connection.filter/-node-filter-generator/index-">NodeFilterGenerator</a><span class="token operator">&gt;</span></span></span><span class="token punctuation">)</span></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>filters</span></span></u></div></span></div><div><div class="title"><p class="paragraph">contains all definitions how filters for specific types are generated</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>filter</span><wbr><span>Definition</span><wbr><span><span>Cache</span></span></u></div></span></div><div><div class="title"><p class="paragraph">cache of already generated filters for <a href="../../io.github.graphglue.model/-node/index-">Node</a> types</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>node</span><wbr><span>Definition</span><wbr><span><span>Collection</span></span></u></div></span></div><div><div class="title"><p class="paragraph">cache of already generated <a href="../../io.github.graphglue.definition/-node-definition/index-">NodeDefinition</a>s</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>additional</span><wbr><span>Filter</span><wbr><span><span>Beans</span></span></u></div></span></div><div><div class="title"><p class="paragraph">lookup for filters defined using the <a href="../../io.github.graphglue.model/-additional-filter/index-">AdditionalFilter</a> annotation</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>node</span><wbr><span>Filter</span><wbr><span><span>Generators</span></span></u></div></span></div><div><div class="title"><p class="paragraph">generators for additional filter entries</p></div></div></div></div></div></div></div>\n',l={},o="SubFilterGenerator",p={id:"api/graphglue-core/io.github.graphglue.connection.filter.definition/-sub-filter-generator/-sub-filter-generator-",title:"SubFilterGenerator",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.filter.definition/-sub-filter-generator/-sub-filter-generator-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.filter.definition/-sub-filter-generator",slug:"/api/graphglue-core/io.github.graphglue.connection.filter.definition/-sub-filter-generator/-sub-filter-generator-",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.definition/-sub-filter-generator/-sub-filter-generator-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"SubFilterGenerator",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.definition/-sub-filter-generator/index-"},next:{title:"additionalFilterBeans",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.definition/-sub-filter-generator/additional-filter-beans-"}},d={},c=[];function u(a){const e={h1:"h1",...(0,t.R)(),...a.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{id:"subfiltergenerator",children:"SubFilterGenerator"}),"\n",(0,n.jsx)(s.A,{dokkaHTML:r})]})}function g(a={}){const{wrapper:e}={...(0,t.R)(),...a.components};return e?(0,n.jsx)(e,{...a,children:(0,n.jsx)(u,{...a})}):u(a)}}}]);