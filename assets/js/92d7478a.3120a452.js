"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[88055],{21100:(a,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var s=t(74848),n=t(28453),r=t(52358);const p='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">fun </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.reflect/-k-class/index.html">KClass</a><span class="token operator">&lt;</span><span class="token operator">*</span><span class="token operator">&gt;</span><span class="token punctuation">.</span><a href="find-property-"><span class="token function">findProperty</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">property<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.reflect/-k-property1/index.html">KProperty1</a><span class="token operator">&lt;</span><span class="token operator">*</span><span class="token punctuation">, </span><span class="token operator">*</span><span class="token operator">&gt;</span></div><p class="paragraph">Finds a property by name</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the found property</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>property</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the name of the property</p></div></div></div></div></div></div></div>\n',o={},i="findProperty",l={id:"api/graphglue-core/io.github.graphglue.graphql.extensions/find-property-",title:"findProperty",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.graphql.extensions/find-property-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.graphql.extensions",slug:"/api/graphglue-core/io.github.graphglue.graphql.extensions/find-property-",permalink:"/api/graphglue-core/io.github.graphglue.graphql.extensions/find-property-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"findConstructorParameter",permalink:"/api/graphglue-core/io.github.graphglue.graphql.extensions/find-constructor-parameter-"},next:{title:"getConstructorParameter",permalink:"/api/graphglue-core/io.github.graphglue.graphql.extensions/get-constructor-parameter-"}},c={},d=[];function g(a){const e={h1:"h1",...(0,n.R)(),...a.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"findproperty",children:"findProperty"}),"\n",(0,s.jsx)(r.A,{dokkaHTML:p})]})}function h(a={}){const{wrapper:e}={...(0,n.R)(),...a.components};return e?(0,s.jsx)(e,{...a,children:(0,s.jsx)(g,{...a})}):g(a)}}}]);