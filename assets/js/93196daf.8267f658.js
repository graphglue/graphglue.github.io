"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[55730],{33092:(e,a,i)=>{i.r(a),i.d(a,{assets:()=>d,contentTitle:()=>o,default:()=>c,frontMatter:()=>s,metadata:()=>p,toc:()=>u});var r=i(74848),t=i(28453),n=i(52358);const l='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">val </span><a href="bean-ref-">beanRef</a><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>bean</span><wbr><span><span>Ref</span></span></u></div></span></div><div><div class="title"><p class="paragraph">name of the bean which implements the condition, the bean must be a <a href="../../io.github.graphglue.authorization/-disallow-rule-generator/index-">DisallowRuleGenerator</a></p></div></div></div></div></div></div></div>\n',s={},o="beanRef",p={id:"api/graphglue-core/io.github.graphglue.model/-rule/bean-ref-",title:"beanRef",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.model/-rule/bean-ref-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.model/-rule",slug:"/api/graphglue-core/io.github.graphglue.model/-rule/bean-ref-",permalink:"/api/graphglue-core/io.github.graphglue.model/-rule/bean-ref-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Rule",permalink:"/api/graphglue-core/io.github.graphglue.model/-rule/index-"},next:{title:"options",permalink:"/api/graphglue-core/io.github.graphglue.model/-rule/options-"}},d={},u=[];function g(e){const a={h1:"h1",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.h1,{id:"beanref",children:"beanRef"}),"\n",(0,r.jsx)(n.A,{dokkaHTML:l})]})}function c(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(g,{...e})}):g(e)}}}]);