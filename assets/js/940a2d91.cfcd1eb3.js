"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[29789],{98090:(a,e,i)=>{i.r(e),i.d(e,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>p,metadata:()=>o,toc:()=>c});var t=i(74848),n=i(28453),s=i(52358);const r='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">abstract </span><span class="token keyword">fun </span><a href="validate-"><span class="token function">validate</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">savingNodes<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-set/index.html">Set</a><span class="token operator">&lt;</span><a href="../../io.github.graphglue.model/-node/index-">Node</a><span class="token operator">&gt;</span><span class="token punctuation">, </span></span><span class="parameter ">relationshipDefinition<span class="token operator">: </span><a href="../../io.github.graphglue.definition/-relationship-definition/index-">RelationshipDefinition</a><span class="token punctuation">, </span></span><span class="parameter ">nodeDefinitionCollection<span class="token operator">: </span><a href="../../io.github.graphglue.definition/-node-definition-collection/index-">NodeDefinitionCollection</a></span></span><span class="token punctuation">)</span></div><p class="paragraph">Called to validate the property Should throw an exception if the property is invalid, with an appropriate reason</p><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>saving</span><wbr><span><span>Nodes</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the nodes which are currently saved</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>relationship</span><wbr><span><span>Definition</span></span></u></div></span></div><div><div class="title"><p class="paragraph">definition of the relationship</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>node</span><wbr><span>Definition</span><wbr><span><span>Collection</span></span></u></div></span></div><div><div class="title"><p class="paragraph">used to obtain the inverse of <a href="validate-">relationshipDefinition</a></p></div></div></div></div></div></div></div>\n',p={},l="validate",o={id:"api/graphglue-core/io.github.graphglue.model.property/-base-node-property-delegate/validate-",title:"validate",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.model.property/-base-node-property-delegate/validate-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.model.property/-base-node-property-delegate",slug:"/api/graphglue-core/io.github.graphglue.model.property/-base-node-property-delegate/validate-",permalink:"/api/graphglue-core/io.github.graphglue.model.property/-base-node-property-delegate/validate-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"registerQueryResult",permalink:"/api/graphglue-core/io.github.graphglue.model.property/-base-node-property-delegate/register-query-result-"},next:{title:"LazyLoadingDelegate",permalink:"/api/graphglue-core/io.github.graphglue.model.property/-lazy-loading-delegate/index-"}},d={},c=[];function g(a){const e={h1:"h1",...(0,n.R)(),...a.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"validate",children:"validate"}),"\n",(0,t.jsx)(s.A,{dokkaHTML:r})]})}function u(a={}){const{wrapper:e}={...(0,n.R)(),...a.components};return e?(0,t.jsx)(e,{...a,children:(0,t.jsx)(g,{...a})}):g(a)}}}]);