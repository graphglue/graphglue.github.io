"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[18627],{53831:(i,e,n)=>{n.r(e),n.d(e,{assets:()=>f,contentTitle:()=>s,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var t=n(74848),o=n(28453),a=n(52358);const d='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">val </span><a href="field-definitions-">fieldDefinitions</a><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-list/index.html">List</a><span class="token operator">&lt;</span><a href="../-field-definition/index-">FieldDefinition</a><span class="token operator">&gt;</span></div><p class="paragraph">All <a href="../-field-definition/index-">FieldDefinition</a>s of this <a href="index-">NodeDefinition</a></p></div></div>\n',r={},s="fieldDefinitions",l={id:"api/graphglue-core/io.github.graphglue.definition/-node-definition/field-definitions-",title:"fieldDefinitions",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.definition/-node-definition/field-definitions-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.definition/-node-definition",slug:"/api/graphglue-core/io.github.graphglue.definition/-node-definition/field-definitions-",permalink:"/api/graphglue-core/io.github.graphglue.definition/-node-definition/field-definitions-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"fieldDefinitionByProperty",permalink:"/api/graphglue-core/io.github.graphglue.definition/-node-definition/field-definition-by-property-"},next:{title:"generateAggregatedRelationshipFieldDefinitions",permalink:"/api/graphglue-core/io.github.graphglue.definition/-node-definition/generate-aggregated-relationship-field-definitions-"}},f={},p=[];function g(i){const e={h1:"h1",...(0,o.R)(),...i.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"fielddefinitions",children:"fieldDefinitions"}),"\n",(0,t.jsx)(a.A,{dokkaHTML:d})]})}function c(i={}){const{wrapper:e}={...(0,o.R)(),...i.components};return e?(0,t.jsx)(e,{...i,children:(0,t.jsx)(g,{...i})}):g(i)}}}]);