"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[80424],{9416:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>d,toc:()=>p});var i=n(74848),t=n(28453),r=n(52358);const s='\n  \n  <div class="cover ">\n    \n    <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">fun </span><span class="token keyword">interface </span><a href="index-">NodeFilterGenerator</a></div><p class="paragraph">Interface which can be used to provide beans which provide additional filter entries for specific node filters. Can be used to generate additional filter entries</p><h4 class="">Inheritors</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><a href="../../io.github.graphglue.connection.filter.generator/-additional-filter-node-filter-generator/index-">AdditionalFilterNodeFilterGenerator</a></div></span></div><div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><a href="../../io.github.graphglue.connection.filter.generator/-meta-node-filter-generator/index-">MetaNodeFilterGenerator</a></div></span></div><div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><a href="../../io.github.graphglue.connection.filter.generator/-properties-node-filter-generator/index-">PropertiesNodeFilterGenerator</a></div></span></div><div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><a href="../../io.github.graphglue.connection.filter.generator/-subtype-node-filter-generator/index-">SubtypeNodeFilterGenerator</a></div></span></div><div></div></div></div></div></div></div>\n  </div>\n  <div class="tabbedcontent">\n    <div class="tabs-section" tabs-section="tabs-section"><button class="section-tab" data-active="" data-togglable="CONSTRUCTOR,TYPE,PROPERTY,FUNCTION">Members</button></div>\n    <div class="tabs-section-body">\n      <div data-togglable="FUNCTION">\n        <h2 class="">Functions</h2>\n        <div class="table"><a data-name="1440281468%2FFunctions%2F545362281" anchor-label="generateFilterEntries" id="1440281468%2FFunctions%2F545362281" data-filterable-set=":graphglue-core/main"></a>\n          <div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main">\n            <div class="main-subrow keyValue ">\n              <div class=""><span class="inline-flex">\n                  <div><a href="generate-filter-entries-"><span>generate</span><wbr><span>Filter</span><wbr><span><span>Entries</span></span></a></div>\n<span class="anchor-wrapper"><span class="anchor-icon" pointing-to="1440281468%2FFunctions%2F545362281"></span>\n                    <div class="copy-popup-wrapper "><span class="copy-popup-icon"></span><span>Link copied to clipboard</span></div>\n                  </span></span></div>\n              <div>\n                <div class="title">\n                  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">abstract </span><span class="token keyword">fun </span><a href="generate-filter-entries-"><span class="token function">generateFilterEntries</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">definition<span class="token operator">: </span><a href="../../io.github.graphglue.definition/-node-definition/index-">NodeDefinition</a><span class="token punctuation">, </span></span><span class="parameter ">subFilterGenerator<span class="token operator">: </span><a href="../../io.github.graphglue.connection.filter.definition/-sub-filter-generator/index-">SubFilterGenerator</a></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-collection/index.html">Collection</a><span class="token operator">&lt;</span><a href="../../io.github.graphglue.connection.filter.definition/-filter-entry-definition/index-">FilterEntryDefinition</a><span class="token operator">&gt;</span></div><div class="brief "><p class="paragraph">Generate the additional filter entries</p></div></div></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n',o={},l="NodeFilterGenerator",d={id:"api/graphglue-core/io.github.graphglue.connection.filter/-node-filter-generator/index-",title:"NodeFilterGenerator",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.filter/-node-filter-generator/index-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.filter/-node-filter-generator",slug:"/api/graphglue-core/io.github.graphglue.connection.filter/-node-filter-generator/index-",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter/-node-filter-generator/index-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"subtypeNodeFilterGenerator",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter/-graphglue-filter-configuration/subtype-node-filter-generator-"},next:{title:"generateFilterEntries",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter/-node-filter-generator/generate-filter-entries-"}},c={},p=[];function g(e){const a={h1:"h1",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.h1,{id:"nodefiltergenerator",children:"NodeFilterGenerator"}),"\n",(0,i.jsx)(r.A,{dokkaHTML:s})]})}function u(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(g,{...e})}):g(e)}}}]);