"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[80590],{73153:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>p,contentTitle:()=>d,default:()=>g,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var n=s(74848),r=s(28453),t=s(52358);const o='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">private </span><span class="token keyword">fun </span><a href="create-sub-node-query-"><span class="token function">createSubNodeQuery</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">nodeQuery<span class="token operator">: </span><a href="../-node-query/index-">NodeQuery</a><span class="token punctuation">, </span></span><span class="parameter ">builder<span class="token operator">: </span><span data-unresolved-link="org.neo4j.cypherdsl.core/StatementBuilder.OrderableOngoingReadingAndWithWithoutWhere///PointingToDeclaration/">StatementBuilder.OrderableOngoingReadingAndWithWithoutWhere</span><span class="token punctuation">, </span></span><span class="parameter ">node<span class="token operator">: </span><span data-unresolved-link="org.neo4j.cypherdsl.core/Node///PointingToDeclaration/">Node</span><span class="token punctuation">, </span></span><span class="parameter ">parentNode<span class="token operator">: </span><span data-unresolved-link="org.neo4j.cypherdsl.core/Node///PointingToDeclaration/">Node</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="../-statement-with-result-nodes-and-nodes/index-">StatementWithResultNodesAndNodes</a></div><p class="paragraph">Generates a query based on <code class="lang-kotlin">nodeQuery</code> Must only be used for SubQueries and not for the root query</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the generated query, the result name and the name of a collection with all raw nodes</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>node</span><wbr><span><span>Query</span></span></u></div></span></div><div><div class="title"><p class="paragraph">defines the query to convert</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>builder</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the start of the query, used to generate the full query</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>node</span></span></u></div></span></div><div><div class="title"><p class="paragraph">associated node for conditions and relations</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>parent</span><wbr><span><span>Node</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the <a href="create-sub-node-query-">Node</a> is related to</p></div></div></div></div></div></div></div>\n',i={},d="createSubNodeQuery",l={id:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/create-sub-node-query-",title:"createSubNodeQuery",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/create-sub-node-query-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor",slug:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/create-sub-node-query-",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/create-sub-node-query-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"createSearchRootQuery",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/create-search-root-query-"},next:{title:"createSubQuery",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/create-sub-query-"}},p={},u=[];function c(e){const a={h1:"h1",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h1,{id:"createsubnodequery",children:"createSubNodeQuery"}),"\n",(0,n.jsx)(t.A,{dokkaHTML:o})]})}function g(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}}}]);