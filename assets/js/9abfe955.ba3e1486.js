"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[64465],{42251:(e,a,o)=>{o.r(a),o.d(a,{assets:()=>l,contentTitle:()=>p,default:()=>u,frontMatter:()=>r,metadata:()=>g,toc:()=>c});var n=o(74848),i=o(28453),t=o(52358);const s='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">val </span><a href="has-previous-page-">hasPreviousPage</a><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-boolean/index.html">Boolean</a></div><p class="paragraph">When paginating backwards, are there more items? Calculating using <a href="all-nodes-">allNodes</a> and <a href="nodes-">nodes</a></p></div></div>\n',r={},p="hasPreviousPage",g={id:"api/graphglue-core/io.github.graphglue.connection.model/-page-info/has-previous-page-",title:"hasPreviousPage",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.model/-page-info/has-previous-page-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.model/-page-info",slug:"/api/graphglue-core/io.github.graphglue.connection.model/-page-info/has-previous-page-",permalink:"/api/graphglue-core/io.github.graphglue.connection.model/-page-info/has-previous-page-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"hasNextPage",permalink:"/api/graphglue-core/io.github.graphglue.connection.model/-page-info/has-next-page-"},next:{title:"nodeQueryOptions",permalink:"/api/graphglue-core/io.github.graphglue.connection.model/-page-info/node-query-options-"}},l={},c=[];function h(e){const a={h1:"h1",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h1,{id:"haspreviouspage",children:"hasPreviousPage"}),"\n",(0,n.jsx)(t.A,{dokkaHTML:s})]})}function u(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}}}]);