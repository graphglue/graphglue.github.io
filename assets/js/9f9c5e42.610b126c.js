"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[34662],{82904:(a,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>d,toc:()=>c});var s=n(74848),t=n(28453),o=n(52358);const i='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><div class="block"><div class="block"><span class="token annotation builtin">@</span><span data-unresolved-link="org.springframework.data.neo4j.core.schema/Id///PointingToDeclaration/"><span class="token annotation builtin">Id</span></span></div><div class="block"><span class="token annotation builtin">@</span><span data-unresolved-link="org.springframework.data.neo4j.core.schema/GeneratedValue///PointingToDeclaration/"><span class="token annotation builtin">GeneratedValue</span></span><span class="token punctuation">(</span><span>generatorRef<span class="token operator"> = </span><span class="breakable-word"><span class="token string">"nodeIdGenerator"</span></span></span><wbr><span class="token punctuation">)</span></div></div><span class="token keyword">internal </span><span class="token keyword">var </span><a href="id-">id</a><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a><span class="token operator">?</span></div><p class="paragraph">Id of this node, <code class="lang-kotlin">null</code> if not persisted in the database yet</p></div></div>\n',r={},l="id",d={id:"api/graphglue-core/io.github.graphglue.model/-node/id-",title:"id",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.model/-node/id-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.model/-node",slug:"/api/graphglue-core/io.github.graphglue.model/-node/id-",permalink:"/api/graphglue-core/io.github.graphglue.model/-node/id-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"hashCode",permalink:"/api/graphglue-core/io.github.graphglue.model/-node/hash-code-"},next:{title:"isPersisted",permalink:"/api/graphglue-core/io.github.graphglue.model/-node/is-persisted-"}},p={},c=[];function g(a){const e={h1:"h1",...(0,t.R)(),...a.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"id",children:"id"}),"\n",(0,s.jsx)(o.A,{dokkaHTML:i})]})}function u(a={}){const{wrapper:e}={...(0,t.R)(),...a.components};return e?(0,s.jsx)(e,{...a,children:(0,s.jsx)(g,{...a})}):g(a)}}}]);