"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[57090],{1e3:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>i,contentTitle:()=>n,default:()=>u,frontMatter:()=>d,metadata:()=>l,toc:()=>g});var t=a(74848),o=a(28453),s=a(52358);const p='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">private </span><span class="token keyword">val </span><a href="removed-nodes-">removedNodes</a><span class="token operator">: </span><a href="https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/HashSet.html">HashSet</a><span class="token operator">&lt;</span><a href="index-">T</a><span class="token operator">&gt;</span></div><p class="paragraph">Newly removed nodes, relations must be removed from the database</p></div></div>\n',d={},n="removedNodes",l={id:"api/graphglue-core/io.github.graphglue.model.property/-node-set-property-delegate/removed-nodes-",title:"removedNodes",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.model.property/-node-set-property-delegate/removed-nodes-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.model.property/-node-set-property-delegate",slug:"/api/graphglue-core/io.github.graphglue.model.property/-node-set-property-delegate/removed-nodes-",permalink:"/api/graphglue-core/io.github.graphglue.model.property/-node-set-property-delegate/removed-nodes-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"registerQueryResult",permalink:"/api/graphglue-core/io.github.graphglue.model.property/-node-set-property-delegate/register-query-result-"},next:{title:"validate",permalink:"/api/graphglue-core/io.github.graphglue.model.property/-node-set-property-delegate/validate-"}},i={},g=[];function c(e){const r={h1:"h1",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"removednodes",children:"removedNodes"}),"\n",(0,t.jsx)(s.A,{dokkaHTML:p})]})}function u(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);