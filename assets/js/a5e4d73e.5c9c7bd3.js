"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[80625],{29742:(e,a,i)=>{i.r(a),i.d(a,{assets:()=>p,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>d,toc:()=>c});var n=i(74848),t=i(28453),o=i(52358);const s='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">private </span><span class="token keyword">fun </span><a href="get-merged-authorization-"><span class="token function">getMergedAuthorization</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">name<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a><span class="token punctuation">, </span></span><span class="parameter ">nodeDefinition<span class="token operator">: </span><a href="../-node-definition/index-">NodeDefinition</a></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="../../io.github.graphglue.authorization/-merged-authorization/index-">MergedAuthorization</a></div><p class="paragraph">If present, returns <code class="lang-kotlin">nodeDefinition.mergedAuthorizations[name]</code> If not, checks if the name is known, it returns an empty <a href="../../io.github.graphglue.model/-authorization/index-">Authorization</a> Otherwise throws an exception, has this hints at a misspelled name</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the found  <a href="../../io.github.graphglue.model/-authorization/index-">Authorization</a> or a default empty one</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>name</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the name of the authorization</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>node</span><wbr><span><span>Definition</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the <a href="../-node-definition/index-">NodeDefinition</a> to get the authorization from</p></div></div></div></div></div><h4 class="">Throws</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-illegal-argument-exception/index.html"><span>Illegal</span><wbr><span>Argument</span><wbr><span><span>Exception</span></span></a></div></span></div><div><div class="title"><p class="paragraph">if the name is completely unknown</p></div></div></div></div></div></div></div>\n',r={},l="getMergedAuthorization",d={id:"api/graphglue-core/io.github.graphglue.definition/-node-definition-collection/get-merged-authorization-",title:"getMergedAuthorization",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.definition/-node-definition-collection/get-merged-authorization-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.definition/-node-definition-collection",slug:"/api/graphglue-core/io.github.graphglue.definition/-node-definition-collection/get-merged-authorization-",permalink:"/api/graphglue-core/io.github.graphglue.definition/-node-definition-collection/get-merged-authorization-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"getAllowFromRelatedNodeDefinitions",permalink:"/api/graphglue-core/io.github.graphglue.definition/-node-definition-collection/get-allow-from-related-node-definitions-"},next:{title:"getNodeDefinition",permalink:"/api/graphglue-core/io.github.graphglue.definition/-node-definition-collection/get-node-definition-"}},p={},c=[];function g(e){const a={h1:"h1",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h1,{id:"getmergedauthorization",children:"getMergedAuthorization"}),"\n",(0,n.jsx)(o.A,{dokkaHTML:s})]})}function h(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(g,{...e})}):g(e)}}}]);