"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[97972],{38928:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>l,contentTitle:()=>p,default:()=>g,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var s=r(74848),n=r(28453),t=r(52358);const o='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">fun </span><a href="generate-cursor-"><span class="token function">generateCursor</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">node<span class="token operator">: </span><a href="index-">T</a><span class="token punctuation">, </span></span><span class="parameter ">objectMapper<span class="token operator">: </span><span data-unresolved-link="com.fasterxml.jackson.databind/ObjectMapper///PointingToDeclaration/">ObjectMapper</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a></div><p class="paragraph">Generates a cursor for a <a href="generate-cursor-">node</a>, e.g. a unique identifier for the provided node based on the properties specified by <a href="fields-">fields</a></p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the cursor as base64 encoded JSON</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>node</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the <a href="../../io.github.graphglue.model/-node/index-">Node</a> to generate the cursor for</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>object</span><wbr><span><span>Mapper</span></span></u></div></span></div><div><div class="title"><p class="paragraph">necessary for JSON encoding</p></div></div></div></div></div></div></div>\n',i={},p="generateCursor",c={id:"api/graphglue-core/io.github.graphglue.connection.order/-order/generate-cursor-",title:"generateCursor",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.order/-order/generate-cursor-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.order/-order",slug:"/api/graphglue-core/io.github.graphglue.connection.order/-order/generate-cursor-",permalink:"/api/graphglue-core/io.github.graphglue.connection.order/-order/generate-cursor-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"fields",permalink:"/api/graphglue-core/io.github.graphglue.connection.order/-order/fields-"},next:{title:"parseCursor",permalink:"/api/graphglue-core/io.github.graphglue.connection.order/-order/parse-cursor-"}},l={},d=[];function u(e){const a={h1:"h1",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.h1,{id:"generatecursor",children:"generateCursor"}),"\n",(0,s.jsx)(t.A,{dokkaHTML:o})]})}function g(e={}){const{wrapper:a}={...(0,n.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}}}]);