"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[94721],{30024:(i,e,a)=>{a.r(e),a.d(e,{assets:()=>h,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>p,toc:()=>d});var n=a(74848),t=a(28453),r=a(52358);const s='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">val </span><a href="is-graph-q-l-visible-">isGraphQLVisible</a><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-boolean/index.html">Boolean</a></div><p class="paragraph">If true, this exposes a field in the GraphQL API</p></div></div>\n',l={},o="isGraphQLVisible",p={id:"api/graphglue-core/io.github.graphglue.definition/-relationship-field-definition/is-graph-q-l-visible-",title:"isGraphQLVisible",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.definition/-relationship-field-definition/is-graph-q-l-visible-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.definition/-relationship-field-definition",slug:"/api/graphglue-core/io.github.graphglue.definition/-relationship-field-definition/is-graph-q-l-visible-",permalink:"/api/graphglue-core/io.github.graphglue.definition/-relationship-field-definition/is-graph-q-l-visible-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"graphQLName",permalink:"/api/graphglue-core/io.github.graphglue.definition/-relationship-field-definition/graph-q-l-name-"},next:{title:"relationshipDefinition",permalink:"/api/graphglue-core/io.github.graphglue.definition/-relationship-field-definition/relationship-definition-"}},h={},d=[];function g(i){const e={h1:"h1",...(0,t.R)(),...i.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{id:"isgraphqlvisible",children:"isGraphQLVisible"}),"\n",(0,n.jsx)(r.A,{dokkaHTML:s})]})}function c(i={}){const{wrapper:e}={...(0,t.R)(),...i.components};return e?(0,n.jsx)(e,{...i,children:(0,n.jsx)(g,{...i})}):g(i)}}}]);