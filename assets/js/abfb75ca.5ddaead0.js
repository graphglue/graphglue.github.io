"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[58886],{86649:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var n=s(74848),t=s(28453),r=s(52358);const p='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">suspend </span><span class="token keyword">fun </span><a href="execute-"><span class="token function">execute</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">query<span class="token operator">: </span><a href="../-node-query/index-">NodeQuery</a></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="../-node-query-result/index-">NodeQueryResult</a><span class="token operator">&lt;</span><span class="token operator">*</span><span class="token operator">&gt;</span></div><div class="symbol monospace"><span class="token keyword">suspend </span><span class="token keyword">fun </span><a href="execute-"><span class="token function">execute</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">query<span class="token operator">: </span><a href="../-search-query/index-">SearchQuery</a></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="../-search-query-result/index-">SearchQueryResult</a><span class="token operator">&lt;</span><span class="token operator">*</span><span class="token operator">&gt;</span></div><p class="paragraph">Executes the given query May perform multiple requests to the database if the query is too complex.</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the result of the query</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>query</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the query to execute</p></div></div></div></div></div><hr><div class="symbol monospace"><span class="token keyword">suspend </span><span class="token keyword">fun </span><a href="execute-"><span class="token function">execute</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">query<span class="token operator">: </span><a href="../-partial-node-query/index-">PartialNodeQuery</a><span class="token punctuation">, </span></span><span class="parameter ">nodes<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-collection/index.html">Collection</a><span class="token operator">&lt;</span><a href="../../io.github.graphglue.model/-node/index-">Node</a><span class="token operator">&gt;</span></span></span><span class="token punctuation">)</span></div><p class="paragraph">Executes the given query May perform multiple requests to the database if the query is too complex. Does not provide any results, instead results are directly registered in the affected <a href="execute-">nodes</a></p><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>query</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the query to execute</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>nodes</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the nodes for which the subqueries should be executed</p></div></div></div></div></div></div></div>\n',o={},i="execute",l={id:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-engine/execute-",title:"execute",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.execution/-node-query-engine/execute-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-engine",slug:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-engine/execute-",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-engine/execute-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"configurationProperties",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-engine/configuration-properties-"},next:{title:"mappingContext",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-engine/mapping-context-"}},c={},u=[];function d(e){const a={h1:"h1",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h1,{id:"execute",children:"execute"}),"\n",(0,n.jsx)(r.A,{dokkaHTML:p})]})}function h(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);