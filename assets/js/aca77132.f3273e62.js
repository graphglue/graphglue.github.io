"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[12276],{55828:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>g,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var n=a(74848),o=a(28453),i=a(52358);const r='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">const </span><span class="token keyword">val </span><a href="-o-n-e_-n-o-d-e_-q-u-e-r-y_-l-i-m-i-t-">ONE_NODE_QUERY_LIMIT</a><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-int/index.html">Int</a><span class="token operator"> = </span><span class="token constant">2</span></div><p class="paragraph">Amount of nodes which are fetched when fetching a one-side of a query Fetches two nodes to detect an inconsistent state in the database</p></div></div>\n',s={},c="ONE_NODE_QUERY_LIMIT",l={id:"api/graphglue-core/io.github.graphglue.data.execution/-o-n-e_-n-o-d-e_-q-u-e-r-y_-l-i-m-i-t-",title:"ONE_NODE_QUERY_LIMIT",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.execution/-o-n-e_-n-o-d-e_-q-u-e-r-y_-l-i-m-i-t-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.execution",slug:"/api/graphglue-core/io.github.graphglue.data.execution/-o-n-e_-n-o-d-e_-q-u-e-r-y_-l-i-m-i-t-",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-o-n-e_-n-o-d-e_-q-u-e-r-y_-l-i-m-i-t-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"NODE_KEY",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-n-o-d-e_-k-e-y-"},next:{title:"ORDER_KEY",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-o-r-d-e-r_-k-e-y-"}},d={},p=[];function u(e){const t={h1:"h1",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"one_node_query_limit",children:"ONE_NODE_QUERY_LIMIT"}),"\n",(0,n.jsx)(i.A,{dokkaHTML:r})]})}function g(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}}}]);