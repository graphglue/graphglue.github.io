"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[32462],{19722:(a,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>g,frontMatter:()=>l,metadata:()=>r,toc:()=>d});var e=n(74848),o=n(28453),i=n(52358);const s='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">fun </span><a href="total-count-"><span class="token function">totalCount</span></a><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-int/index.html">Int</a></div><p class="paragraph">The total count of nodes in the connection (before filtering and pagination)</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the total count</p></span><h4 class="">Throws</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-illegal-state-exception/index.html"><span>Illegal</span><wbr><span>State</span><wbr><span><span>Exception</span></span></a></div></span></div><div><div class="title"><p class="paragraph">if totalCount is not available because it was not fetched</p></div></div></div></div></div><hr><div class="symbol monospace"><span class="token keyword">private </span><span class="token keyword">val </span><a href="total-count-">totalCount</a><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-int/index.html">Int</a><span class="token operator">?</span></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>total</span><wbr><span><span>Count</span></span></u></div></span></div><div><div class="title"><p class="paragraph">if fetched, the total amount of items in the relation</p></div></div></div></div></div></div></div>\n',l={},c="totalCount",r={id:"api/graphglue-core/io.github.graphglue.connection.model/-connection/total-count-",title:"totalCount",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.model/-connection/total-count-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.model/-connection",slug:"/api/graphglue-core/io.github.graphglue.connection.model/-connection/total-count-",permalink:"/api/graphglue-core/io.github.graphglue.connection.model/-connection/total-count-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"pageInfo",permalink:"/api/graphglue-core/io.github.graphglue.connection.model/-connection/page-info-"},next:{title:"Edge",permalink:"/api/graphglue-core/io.github.graphglue.connection.model/-edge/index-"}},p={},d=[];function u(a){const t={h1:"h1",...(0,o.R)(),...a.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(t.h1,{id:"totalcount",children:"totalCount"}),"\n",(0,e.jsx)(i.A,{dokkaHTML:s})]})}function g(a={}){const{wrapper:t}={...(0,o.R)(),...a.components};return t?(0,e.jsx)(t,{...a,children:(0,e.jsx)(u,{...a})}):u(a)}}}]);