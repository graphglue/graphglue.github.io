"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[10063],{13776:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>p,toc:()=>g});var r=t(74848),a=t(28453),i=t(52358);const o='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><div class="block"><div class="block"><span class="token annotation builtin">@</span><span data-unresolved-link="org.springframework.context.annotation/Bean///PointingToDeclaration/"><span class="token annotation builtin">Bean</span></span></div><div class="block"><span class="token annotation builtin">@</span><span data-unresolved-link="org.springframework.boot.autoconfigure.condition/ConditionalOnMissingBean///PointingToDeclaration/"><span class="token annotation builtin">ConditionalOnMissingBean</span></span></div></div><span class="token keyword">fun </span><a href="subtype-node-filter-generator-"><span class="token function">subtypeNodeFilterGenerator</span></a><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">: </span><a href="../../io.github.graphglue.connection.filter.generator/-subtype-node-filter-generator/index-">SubtypeNodeFilterGenerator</a></div><p class="paragraph">Provides the <a href="../-node-filter-generator/index-">NodeFilterGenerator</a> which generates filter entries for subtypes</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the <a href="../-node-filter-generator/index-">NodeFilterGenerator</a> which generates filter entries for subtypes</p></span></div></div>\n',s={},l="subtypeNodeFilterGenerator",p={id:"api/graphglue-core/io.github.graphglue.connection.filter/-graphglue-filter-configuration/subtype-node-filter-generator-",title:"subtypeNodeFilterGenerator",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.filter/-graphglue-filter-configuration/subtype-node-filter-generator-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.filter/-graphglue-filter-configuration",slug:"/api/graphglue-core/io.github.graphglue.connection.filter/-graphglue-filter-configuration/subtype-node-filter-generator-",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter/-graphglue-filter-configuration/subtype-node-filter-generator-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"propertiesNodeFilterGenerator",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter/-graphglue-filter-configuration/properties-node-filter-generator-"},next:{title:"NodeFilterGenerator",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter/-node-filter-generator/index-"}},c={},g=[];function u(e){const n={h1:"h1",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"subtypenodefiltergenerator",children:"subtypeNodeFilterGenerator"}),"\n",(0,r.jsx)(i.A,{dokkaHTML:o})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}}}]);