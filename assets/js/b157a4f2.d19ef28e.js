"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[88959],{85210:(a,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>p,default:()=>g,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var i=n(74848),s=n(28453),r=n(52358);const t='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><div class="block"><div class="block"><span class="token annotation builtin">@</span><span data-unresolved-link="org.springframework.context.annotation/Bean///PointingToDeclaration/"><span class="token annotation builtin">Bean</span></span></div><div class="block"><span class="token annotation builtin">@</span><span data-unresolved-link="org.springframework.boot.autoconfigure.condition/ConditionalOnMissingBean///PointingToDeclaration/"><span class="token annotation builtin">ConditionalOnMissingBean</span></span></div></div><span class="token keyword">fun </span><a href="query-parser-"><span class="token function">queryParser</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">nodeDefinitionCollection<span class="token operator">: </span><a href="../../io.github.graphglue.definition/-node-definition-collection/index-">NodeDefinitionCollection</a><span class="token punctuation">, </span></span><span class="parameter ">filterDefinitionCollection<span class="token operator">: </span><a href="https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/Optional.html">Optional</a><span class="token operator">&lt;</span><a href="../../io.github.graphglue.connection.filter.definition/-filter-definition-collection/index-">FilterDefinitionCollection</a><span class="token operator">&gt;</span><span class="token punctuation">, </span></span><span class="parameter ">objectMapper<span class="token operator">: </span><span data-unresolved-link="com.fasterxml.jackson.databind/ObjectMapper///PointingToDeclaration/">ObjectMapper</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="../../io.github.graphglue.data.execution/-node-query-parser/index-">NodeQueryParser</a></div><p class="paragraph">Parser for incoming GraphQL queries Allows transforming (a part of) a GraphQL query into a single Cypher query</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the generated <a href="../../io.github.graphglue.data.execution/-node-query-parser/index-">NodeQueryParser</a></p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>node</span><wbr><span>Definition</span><wbr><span><span>Collection</span></span></u></div></span></div><div><div class="title"><p class="paragraph">collection of all <a href="../../io.github.graphglue.definition/-node-definition/index-">NodeDefinition</a>s</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>filter</span><wbr><span>Definition</span><wbr><span><span>Collection</span></span></u></div></span></div><div><div class="title"><p class="paragraph">collection of all <a href="../../io.github.graphglue.connection.filter.definition/-filter-definition/index-">FilterDefinition</a>s, if existing</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>object</span><wbr><span><span>Mapper</span></span></u></div></span></div><div><div class="title"><p class="paragraph">necessary for cursor serialization and deserialization</p></div></div></div></div></div></div></div>\n',o={},p="queryParser",l={id:"api/graphglue-core/io.github.graphglue.data/-graphglue-data-configuration/query-parser-",title:"queryParser",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data/-graphglue-data-configuration/query-parser-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data/-graphglue-data-configuration",slug:"/api/graphglue-core/io.github.graphglue.data/-graphglue-data-configuration/query-parser-",permalink:"/api/graphglue-core/io.github.graphglue.data/-graphglue-data-configuration/query-parser-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"persistentPropertyCharacteristicsProvider",permalink:"/api/graphglue-core/io.github.graphglue.data/-graphglue-data-configuration/persistent-property-characteristics-provider-"},next:{title:"renderer",permalink:"/api/graphglue-core/io.github.graphglue.data/-graphglue-data-configuration/renderer-"}},c={},d=[];function u(a){const e={h1:"h1",...(0,s.R)(),...a.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"queryparser",children:"queryParser"}),"\n",(0,i.jsx)(r.A,{dokkaHTML:t})]})}function g(a={}){const{wrapper:e}={...(0,s.R)(),...a.components};return e?(0,i.jsx)(e,{...a,children:(0,i.jsx)(u,{...a})}):u(a)}}}]);