"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[24105],{53812:(e,a,i)=>{i.r(a),i.d(a,{assets:()=>d,contentTitle:()=>l,default:()=>f,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var n=i(74848),t=i(28453),r=i(52358);const s='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">fun </span><a href="generate-filter-definition-"><span class="token function">generateFilterDefinition</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">type<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.reflect/-k-class/index.html">KClass</a><span class="token operator">&lt;</span><span class="token keyword">out </span><a href="../io.github.graphglue.model/-node/index-">Node</a><span class="token operator">&gt;</span><span class="token punctuation">, </span></span><span class="parameter ">subFilterGenerator<span class="token operator">: </span><a href="-sub-filter-generator/index-">SubFilterGenerator</a></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="-filter-definition/index-">FilterDefinition</a><span class="token operator">&lt;</span><span class="token keyword">out </span><a href="../io.github.graphglue.model/-node/index-">Node</a><span class="token operator">&gt;</span></div><p class="paragraph">Generates a <a href="-filter-definition/index-">FilterDefinition</a> for a specific <a href="../io.github.graphglue.model/-node/index-">Node</a> type Handles retrieving the definition from the cache</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the generated <a href="-filter-definition/index-">FilterDefinition</a></p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>type</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the <a href="../io.github.graphglue.model/-node/index-">Node</a> type to generate the filter for</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>sub</span><wbr><span>Filter</span><wbr><span><span>Generator</span></span></u></div></span></div><div><div class="title"><p class="paragraph">used to generate filter entries</p></div></div></div></div></div></div></div>\n',o={},l="generateFilterDefinition",p={id:"api/graphglue-core/io.github.graphglue.connection.filter.definition/generate-filter-definition-",title:"generateFilterDefinition",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.filter.definition/generate-filter-definition-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.filter.definition",slug:"/api/graphglue-core/io.github.graphglue.connection.filter.definition/generate-filter-definition-",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.definition/generate-filter-definition-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"toGraphQLType",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.definition/-subtype-node-filter-definition/to-graph-q-l-type-"},next:{title:"io.github.graphglue.connection.filter.definition.scalars",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.definition.scalars/index-"}},d={},c=[];function g(e){const a={h1:"h1",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h1,{id:"generatefilterdefinition",children:"generateFilterDefinition"}),"\n",(0,n.jsx)(r.A,{dokkaHTML:s})]})}function f(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(g,{...e})}):g(e)}}}]);