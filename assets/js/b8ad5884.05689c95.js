"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[78401],{30009:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>g,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>h});var n=t(74848),r=t(28453),o=t(52358);const p='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">abstract </span><span class="token keyword">val </span><a href="mapping-context-">mappingContext</a><span class="token operator">: </span><span data-unresolved-link="org.springframework.data.neo4j.core.mapping/Neo4jMappingContext///PointingToDeclaration/">Neo4jMappingContext</span></div><p class="paragraph">mapping context used to get type information from Neo4j</p></div></div>\n',i={},s="mappingContext",c={id:"api/graphglue-core/io.github.graphglue.graphql.schema/-schema-transformer/mapping-context-",title:"mappingContext",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.graphql.schema/-schema-transformer/mapping-context-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.graphql.schema/-schema-transformer",slug:"/api/graphglue-core/io.github.graphglue.graphql.schema/-schema-transformer/mapping-context-",permalink:"/api/graphglue-core/io.github.graphglue.graphql.schema/-schema-transformer/mapping-context-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"inputTypeCache",permalink:"/api/graphglue-core/io.github.graphglue.graphql.schema/-schema-transformer/input-type-cache-"},next:{title:"nodeDefinitionCollection",permalink:"/api/graphglue-core/io.github.graphglue.graphql.schema/-schema-transformer/node-definition-collection-"}},g={},h=[];function l(e){const a={h1:"h1",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h1,{id:"mappingcontext",children:"mappingContext"}),"\n",(0,n.jsx)(o.A,{dokkaHTML:p})]})}function m(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}}}]);