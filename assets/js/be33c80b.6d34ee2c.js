"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4557],{77006:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>h,contentTitle:()=>c,default:()=>d,frontMatter:()=>n,metadata:()=>g,toc:()=>p});var r=t(74848),s=t(28453),o=t(52358);const i='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">val </span><a href="code-registry-">codeRegistry</a><span class="token operator">: </span><span data-unresolved-link="graphql.schema/GraphQLCodeRegistry.Builder///PointingToDeclaration/">GraphQLCodeRegistry.Builder</span></div><p class="paragraph">Code Registry to register new DataFetchers</p></div></div>\n',n={},c="codeRegistry",g={id:"api/graphglue-core/io.github.graphglue.graphql.schema/-schema-transformation-context/code-registry-",title:"codeRegistry",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.graphql.schema/-schema-transformation-context/code-registry-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.graphql.schema/-schema-transformation-context",slug:"/api/graphglue-core/io.github.graphglue.graphql.schema/-schema-transformation-context/code-registry-",permalink:"/api/graphglue-core/io.github.graphglue.graphql.schema/-schema-transformation-context/code-registry-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"SchemaTransformationContext",permalink:"/api/graphglue-core/io.github.graphglue.graphql.schema/-schema-transformation-context/-schema-transformation-context-"},next:{title:"registerDataFetcher",permalink:"/api/graphglue-core/io.github.graphglue.graphql.schema/-schema-transformation-context/register-data-fetcher-"}},h={},p=[];function l(e){const a={h1:"h1",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.h1,{id:"coderegistry",children:"codeRegistry"}),"\n",(0,r.jsx)(o.A,{dokkaHTML:i})]})}function d(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);