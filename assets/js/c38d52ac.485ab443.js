"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[75292],{13267:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>p,contentTitle:()=>r,default:()=>g,frontMatter:()=>s,metadata:()=>d,toc:()=>c});var o=i(74848),t=i(28453),a=i(52358);const l='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">private </span><span class="token keyword">fun </span><a href="generate-authorization-all-allowed-node-definitions-"><span class="token function">generateAuthorizationAllAllowedNodeDefinitions</span></a><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-map/index.html">Map</a><span class="token operator">&lt;</span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a><span class="token punctuation">, </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-set/index.html">Set</a><span class="token operator">&lt;</span><a href="../-node-definition/index-">NodeDefinition</a><span class="token operator">&gt;</span><span class="token operator">&gt;</span></div><p class="paragraph">Generates a set of always allowed <a href="../-node-definition/index-">NodeDefinition</a>s for each authorization name</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the lookup from authorization name to always allowed <a href="../-node-definition/index-">NodeDefinition</a>s</p></span></div></div>\n',s={},r="generateAuthorizationAllAllowedNodeDefinitions",d={id:"api/graphglue-core/io.github.graphglue.definition/-node-definition-collection/generate-authorization-all-allowed-node-definitions-",title:"generateAuthorizationAllAllowedNodeDefinitions",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.definition/-node-definition-collection/generate-authorization-all-allowed-node-definitions-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.definition/-node-definition-collection",slug:"/api/graphglue-core/io.github.graphglue.definition/-node-definition-collection/generate-authorization-all-allowed-node-definitions-",permalink:"/api/graphglue-core/io.github.graphglue.definition/-node-definition-collection/generate-authorization-all-allowed-node-definitions-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"definitionsByGraphQLName",permalink:"/api/graphglue-core/io.github.graphglue.definition/-node-definition-collection/definitions-by-graph-q-l-name-"},next:{title:"generateAuthorizationAllowRules",permalink:"/api/graphglue-core/io.github.graphglue.definition/-node-definition-collection/generate-authorization-allow-rules-"}},p={},c=[];function h(e){const n={h1:"h1",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"generateauthorizationallallowednodedefinitions",children:"generateAuthorizationAllAllowedNodeDefinitions"}),"\n",(0,o.jsx)(a.A,{dokkaHTML:l})]})}function g(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}}}]);