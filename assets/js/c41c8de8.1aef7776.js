"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[85861],{73674:(a,e,s)=>{s.r(e),s.d(e,{assets:()=>g,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>h});var r=s(74848),p=s(28453),t=s(52358);const n='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue/main"><div class="symbol monospace"><span class="token keyword">open </span><span class="token keyword">override </span><span class="token keyword">fun </span><a href="is-valid-property-"><span class="token function">isValidProperty</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">kClass<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.reflect/-k-class/index.html">KClass</a><span class="token operator">&lt;</span><span class="token operator">*</span><span class="token operator">&gt;</span><span class="token punctuation">, </span></span><span class="parameter ">property<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.reflect/-k-property/index.html">KProperty</a><span class="token operator">&lt;</span><span class="token operator">*</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-boolean/index.html">Boolean</a></div><p class="paragraph">Called to check if a property should be included in the schema Ignores all properties annotated with <a href="../../../../graphglue-core/io.github.graphglue.model/-node-relationship/index-">NodeRelationship</a>, as those are handled manually</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph"><code class="lang-kotlin">true</code> if the property should be included in the schema</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue/main" data-filterable-set=":graphglue/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>k</span><wbr><span><span>Class</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the class which contains the property</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue/main" data-filterable-set=":graphglue/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>property</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the property to validate</p></div></div></div></div></div></div></div>\n',l={},i="isValidProperty",o={id:"api/graphglue/io.github.graphglue.graphql/-graphglue-graph-q-l-configuration/-graphglue-schema-generator-hooks/is-valid-property-",title:"isValidProperty",description:"",source:"@site/docs/api/graphglue/io.github.graphglue.graphql/-graphglue-graph-q-l-configuration/-graphglue-schema-generator-hooks/is-valid-property-.mdx",sourceDirName:"api/graphglue/io.github.graphglue.graphql/-graphglue-graph-q-l-configuration/-graphglue-schema-generator-hooks",slug:"/api/graphglue/io.github.graphglue.graphql/-graphglue-graph-q-l-configuration/-graphglue-schema-generator-hooks/is-valid-property-",permalink:"/api/graphglue/io.github.graphglue.graphql/-graphglue-graph-q-l-configuration/-graphglue-schema-generator-hooks/is-valid-property-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"isValidAdditionalType",permalink:"/api/graphglue/io.github.graphglue.graphql/-graphglue-graph-q-l-configuration/-graphglue-schema-generator-hooks/is-valid-additional-type-"},next:{title:"isValidSuperclass",permalink:"/api/graphglue/io.github.graphglue.graphql/-graphglue-graph-q-l-configuration/-graphglue-schema-generator-hooks/is-valid-superclass-"}},g={},h=[];function c(a){const e={h1:"h1",...(0,p.R)(),...a.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h1,{id:"isvalidproperty",children:"isValidProperty"}),"\n",(0,r.jsx)(t.A,{dokkaHTML:n})]})}function d(a={}){const{wrapper:e}={...(0,p.R)(),...a.components};return e?(0,r.jsx)(e,{...a,children:(0,r.jsx)(c,{...a})}):c(a)}}}]);