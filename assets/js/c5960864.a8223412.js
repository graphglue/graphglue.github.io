"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[54220],{13161:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>p,toc:()=>d});var n=t(74848),r=t(28453),i=t(52358);const s='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">open </span><span class="token keyword">override </span><span class="token keyword">fun </span><a href="generate-filter-entries-"><span class="token function">generateFilterEntries</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">definition<span class="token operator">: </span><a href="../../io.github.graphglue.definition/-node-definition/index-">NodeDefinition</a><span class="token punctuation">, </span></span><span class="parameter ">subFilterGenerator<span class="token operator">: </span><a href="../../io.github.graphglue.connection.filter.definition/-sub-filter-generator/index-">SubFilterGenerator</a></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-collection/index.html">Collection</a><span class="token operator">&lt;</span><a href="../../io.github.graphglue.connection.filter.definition/-filter-entry-definition/index-">FilterEntryDefinition</a><span class="token operator">&gt;</span></div><p class="paragraph">Generate the additional filter entries</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the generated filter entries, may be empty</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>definition</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the definition of the Node to generate the filter entry for</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>sub</span><wbr><span>Filter</span><wbr><span><span>Generator</span></span></u></div></span></div><div><div class="title"><p class="paragraph">can be used to generate subfilters if necessary</p></div></div></div></div></div></div></div>\n',o={},l="generateFilterEntries",p={id:"api/graphglue-core/io.github.graphglue.connection.filter.generator/-subtype-node-filter-generator/generate-filter-entries-",title:"generateFilterEntries",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.filter.generator/-subtype-node-filter-generator/generate-filter-entries-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.filter.generator/-subtype-node-filter-generator",slug:"/api/graphglue-core/io.github.graphglue.connection.filter.generator/-subtype-node-filter-generator/generate-filter-entries-",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.generator/-subtype-node-filter-generator/generate-filter-entries-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"SubtypeNodeFilterGenerator",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.generator/-subtype-node-filter-generator/-subtype-node-filter-generator-"},next:{title:"io.github.graphglue.connection.filter.model",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.model/index-"}},c={},d=[];function g(e){const a={h1:"h1",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h1,{id:"generatefilterentries",children:"generateFilterEntries"}),"\n",(0,n.jsx)(i.A,{dokkaHTML:s})]})}function u(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(g,{...e})}):g(e)}}}]);