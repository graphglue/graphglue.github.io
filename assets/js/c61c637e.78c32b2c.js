"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[71405],{9865:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>p,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var r=n(74848),s=n(28453),o=n(52358);const t='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">open </span><span class="token keyword">override </span><span class="token keyword">fun </span><a href="get-expression-"><span class="token function">getExpression</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">node<span class="token operator">: </span><span data-unresolved-link="org.neo4j.cypherdsl.core/SymbolicName///PointingToDeclaration/">SymbolicName</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><span data-unresolved-link="org.neo4j.cypherdsl.core/Expression///PointingToDeclaration/">Expression</span></div><p class="paragraph">Gets the expression for the property on the database node</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the expression for the property on the database node</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>node</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the <span data-unresolved-link="org.neo4j.cypherdsl.core/SymbolicName///PointingToDeclaration/">SymbolicName</span> of the node in the query</p></div></div></div></div></div></div></div>\n',i={},p="getExpression",l={id:"api/graphglue-core/io.github.graphglue.connection.order/-relationship-order-part/get-expression-",title:"getExpression",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.order/-relationship-order-part/get-expression-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.order/-relationship-order-part",slug:"/api/graphglue-core/io.github.graphglue.connection.order/-relationship-order-part/get-expression-",permalink:"/api/graphglue-core/io.github.graphglue.connection.order/-relationship-order-part/get-expression-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"RelationshipOrderPart",permalink:"/api/graphglue-core/io.github.graphglue.connection.order/-relationship-order-part/-relationship-order-part-"},next:{title:"relatedNodeDefinition",permalink:"/api/graphglue-core/io.github.graphglue.connection.order/-relationship-order-part/related-node-definition-"}},c={},d=[];function g(e){const a={h1:"h1",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.h1,{id:"getexpression",children:"getExpression"}),"\n",(0,r.jsx)(o.A,{dokkaHTML:t})]})}function h(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(g,{...e})}):g(e)}}}]);