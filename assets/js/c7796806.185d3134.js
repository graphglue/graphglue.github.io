"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[61489],{52024:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>p,default:()=>g,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var i=n(74848),s=n(28453),r=n(52358);const t='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">configurationProperties<span class="token operator">: </span><a href="../../io.github.graphglue/-graphglue-core-configuration-properties/index-">GraphglueCoreConfigurationProperties</a><span class="token punctuation">, </span></span><span class="parameter ">client<span class="token operator">: </span><span data-unresolved-link="org.springframework.data.neo4j.core/ReactiveNeo4jClient///PointingToDeclaration/">ReactiveNeo4jClient</span><span class="token punctuation">, </span></span><span class="parameter ">mappingContext<span class="token operator">: </span><span data-unresolved-link="org.springframework.data.neo4j.core.mapping/Neo4jMappingContext///PointingToDeclaration/">Neo4jMappingContext</span><span class="token punctuation">, </span></span><span class="parameter ">renderer<span class="token operator">: </span><span data-unresolved-link="org.neo4j.cypherdsl.core.renderer/Renderer///PointingToDeclaration/">Renderer</span></span></span><span class="token punctuation">)</span></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>configuration</span><wbr><span><span>Properties</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the configuration properties, used for getting the maximum cost of a query</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>client</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the neo4j client used to execute the queries</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>mapping</span><wbr><span><span>Context</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the neo4j mapping context used to map the results</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>renderer</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the renderer used to render the queries</p></div></div></div></div></div></div></div>\n',o={},p="NodeQueryEngine",l={id:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-engine/-node-query-engine-",title:"NodeQueryEngine",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.execution/-node-query-engine/-node-query-engine-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-engine",slug:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-engine/-node-query-engine-",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-engine/-node-query-engine-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"splitNodeQuery",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-engine/-node-query-engine-instance/split-node-query-"},next:{title:"client",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-engine/client-"}},d={},c=[];function u(e){const a={h1:"h1",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.h1,{id:"nodequeryengine",children:"NodeQueryEngine"}),"\n",(0,i.jsx)(r.A,{dokkaHTML:t})]})}function g(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}}}]);