"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[40629],{57949:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>n,metadata:()=>i,toc:()=>g});var r=t(74848),p=t(28453),s=t(52358);const o='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">internal </span><span class="token keyword">fun </span><span class="token operator">&lt;</span><a href="get-property-">T</a><span class="token operator"> : </span><a href="../../io.github.graphglue.model.property/-property-delegate/index-">PropertyDelegate</a><span class="token operator">&lt;</span><span class="token operator">*</span><span class="token operator">&gt;</span><span class="token operator">&gt; </span><a href="get-property-"><span class="token function">getProperty</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">property<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.reflect/-k-property1/index.html">KProperty1</a><span class="token operator">&lt;</span><span class="token operator">*</span><span class="token punctuation">, </span><span class="token operator">*</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="get-property-">T</a></div><p class="paragraph">Gets a node property from the lookup May be changed in future to support extensibility</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the found property</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>property</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the property to lookup</p></div></div></div></div></div></div></div>\n',n={},l="getProperty",i={id:"api/graphglue-core/io.github.graphglue.model/-node/get-property-",title:"getProperty",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.model/-node/get-property-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.model/-node",slug:"/api/graphglue-core/io.github.graphglue.model/-node/get-property-",permalink:"/api/graphglue-core/io.github.graphglue.model/-node/get-property-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"getFromGraphQL",permalink:"/api/graphglue-core/io.github.graphglue.model/-node/get-from-graph-q-l-"},next:{title:"graphQLId",permalink:"/api/graphglue-core/io.github.graphglue.model/-node/graph-q-l-id-"}},c={},g=[];function d(e){const a={h1:"h1",...(0,p.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.h1,{id:"getproperty",children:"getProperty"}),"\n",(0,r.jsx)(s.A,{dokkaHTML:o})]})}function u(e={}){const{wrapper:a}={...(0,p.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);