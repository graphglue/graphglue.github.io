"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[52427],{87582:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>n,contentTitle:()=>s,default:()=>h,frontMatter:()=>d,metadata:()=>l,toc:()=>g});var o=a(74848),r=a(28453),i=a(52358);const p='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">private </span><span class="token keyword">val </span><a href="is-loaded-">isLoaded</a><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-boolean/index.html">Boolean</a></div><p class="paragraph"><code class="lang-kotlin">true</code> iff the current values are loaded from the database or set via constructor</p></div></div>\n',d={},s="isLoaded",l={id:"api/graphglue-core/io.github.graphglue.model.property/-node-set-property-delegate/is-loaded-",title:"isLoaded",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.model.property/-node-set-property-delegate/is-loaded-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.model.property/-node-set-property-delegate",slug:"/api/graphglue-core/io.github.graphglue.model.property/-node-set-property-delegate/is-loaded-",permalink:"/api/graphglue-core/io.github.graphglue.model.property/-node-set-property-delegate/is-loaded-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"getRelationshipDiff",permalink:"/api/graphglue-core/io.github.graphglue.model.property/-node-set-property-delegate/get-relationship-diff-"},next:{title:"nodeSetProperty",permalink:"/api/graphglue-core/io.github.graphglue.model.property/-node-set-property-delegate/node-set-property-"}},n={},g=[];function c(e){const t={h1:"h1",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"isloaded",children:"isLoaded"}),"\n",(0,o.jsx)(i.A,{dokkaHTML:p})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}}}]);