"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3189],{68546:(i,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>l,default:()=>g,frontMatter:()=>o,metadata:()=>p,toc:()=>d});var t=n(74848),a=n(28453),r=n(52358);const s='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">name<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a><span class="token punctuation">, </span></span><span class="parameter ">description<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a></span></span><span class="token punctuation">)</span></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>name</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the name of the field on the <span data-unresolved-link="graphql.schema/GraphQLInputObjectType///PointingToDeclaration/">GraphQLInputObjectType</span></p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>description</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the description of the field</p></div></div></div></div></div></div></div>\n',o={},l="FilterEntryDefinition",p={id:"api/graphglue-core/io.github.graphglue.connection.filter.definition/-filter-entry-definition/-filter-entry-definition-",title:"FilterEntryDefinition",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.filter.definition/-filter-entry-definition/-filter-entry-definition-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.filter.definition/-filter-entry-definition",slug:"/api/graphglue-core/io.github.graphglue.connection.filter.definition/-filter-entry-definition/-filter-entry-definition-",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.definition/-filter-entry-definition/-filter-entry-definition-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"FilterEntryDefinition",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.definition/-filter-entry-definition/index-"},next:{title:"description",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.definition/-filter-entry-definition/description-"}},c={},d=[];function f(i){const e={h1:"h1",...(0,a.R)(),...i.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"filterentrydefinition",children:"FilterEntryDefinition"}),"\n",(0,t.jsx)(r.A,{dokkaHTML:s})]})}function g(i={}){const{wrapper:e}={...(0,a.R)(),...i.components};return e?(0,t.jsx)(e,{...i,children:(0,t.jsx)(f,{...i})}):f(i)}}}]);