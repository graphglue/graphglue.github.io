"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[16991],{31258:(e,a,o)=>{o.r(a),o.d(a,{assets:()=>d,contentTitle:()=>p,default:()=>g,frontMatter:()=>s,metadata:()=>u,toc:()=>l});var t=o(74848),n=o(28453),r=o(52358);const i='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">private </span><span class="token keyword">val </span><a href="node-lookup-">nodeLookup</a><span class="token operator">: </span><a href="https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/HashMap.html">HashMap</a><span class="token operator">&lt;</span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a><span class="token punctuation">, </span><a href="../../io.github.graphglue.model/-node/index-">Node</a><span class="token operator">&gt;</span></div><p class="paragraph">Lookup table for already created nodes</p></div></div>\n',s={},p="nodeLookup",u={id:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/node-lookup-",title:"nodeLookup",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/node-lookup-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor",slug:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/node-lookup-",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/node-lookup-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"nameCounter",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/name-counter-"},next:{title:"parseNodeEntries",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/parse-node-entries-"}},d={},l=[];function c(e){const a={h1:"h1",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.h1,{id:"nodelookup",children:"nodeLookup"}),"\n",(0,t.jsx)(r.A,{dokkaHTML:i})]})}function g(e={}){const{wrapper:a}={...(0,n.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);