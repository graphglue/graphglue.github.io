"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7227],{64615:(n,a,e)=>{e.r(a),e.d(a,{assets:()=>d,contentTitle:()=>p,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>g});var o=e(74848),t=e(28453),s=e(52358);const r='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><div class="block"><div class="block"><span class="token annotation builtin">@</span><span data-unresolved-link="org.springframework.context.annotation/Bean///PointingToDeclaration/"><span class="token annotation builtin">Bean</span></span><span class="token punctuation">(</span><span>value<span class="token operator"> = </span><span class="token punctuation">[</span><span><span class="breakable-word"><span class="token string">"nodeIdGenerator"</span></span></span><wbr><span class="token punctuation">]</span></span><wbr><span class="token punctuation">)</span></div><div class="block"><span class="token annotation builtin">@</span><span data-unresolved-link="org.springframework.boot.autoconfigure.condition/ConditionalOnMissingBean///PointingToDeclaration/"><span class="token annotation builtin">ConditionalOnMissingBean</span></span></div></div><span class="token keyword">fun </span><a href="node-id-generator-"><span class="token function">nodeIdGenerator</span></a><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">: </span><span data-unresolved-link="org.springframework.data.neo4j.core.support/UUIDStringGenerator///PointingToDeclaration/">UUIDStringGenerator</span></div><p class="paragraph">Default node id generator</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the generator for node ids</p></span></div></div>\n',i={},p="nodeIdGenerator",l={id:"api/graphglue-core/io.github.graphglue.model/-graphglue-model-configuration/node-id-generator-",title:"nodeIdGenerator",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.model/-graphglue-model-configuration/node-id-generator-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.model/-graphglue-model-configuration",slug:"/api/graphglue-core/io.github.graphglue.model/-graphglue-model-configuration/node-id-generator-",permalink:"/api/graphglue-core/io.github.graphglue.model/-graphglue-model-configuration/node-id-generator-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"GraphglueModelConfiguration",permalink:"/api/graphglue-core/io.github.graphglue.model/-graphglue-model-configuration/-graphglue-model-configuration-"},next:{title:"Node",permalink:"/api/graphglue-core/io.github.graphglue.model/-node/index-"}},d={},g=[];function c(n){const a={h1:"h1",...(0,t.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(a.h1,{id:"nodeidgenerator",children:"nodeIdGenerator"}),"\n",(0,o.jsx)(s.A,{dokkaHTML:r})]})}function u(n={}){const{wrapper:a}={...(0,t.R)(),...n.components};return a?(0,o.jsx)(a,{...n,children:(0,o.jsx)(c,{...n})}):c(n)}}}]);