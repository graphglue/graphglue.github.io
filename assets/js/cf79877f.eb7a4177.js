"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[22832],{90492:(a,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>g,frontMatter:()=>l,metadata:()=>p,toc:()=>d});var s=n(74848),t=n(28453),r=n(52358);const i='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">name<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a><span class="token punctuation">, </span></span><span class="parameter ">description<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a><span class="token punctuation">, </span></span><span class="parameter ">conditionGenerator<span class="token operator">: </span><span class="token punctuation">(</span>property<span class="token operator">: </span><span data-unresolved-link="org.neo4j.cypherdsl.core/Property///PointingToDeclaration/">Property</span><span class="token punctuation">, </span>value<span class="token operator">: </span><span data-unresolved-link="org.neo4j.cypherdsl.core/Parameter///PointingToDeclaration/">Parameter</span><span class="token operator">&lt;</span><span class="token operator">*</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator"> -&gt; </span><span data-unresolved-link="org.neo4j.cypherdsl.core/Condition///PointingToDeclaration/">Condition</span></span></span><span class="token punctuation">)</span></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>name</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the name of the field on the <span data-unresolved-link="graphql.schema/GraphQLInputObjectType///PointingToDeclaration/">GraphQLInputObjectType</span></p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>description</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the description of the field</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>condition</span><wbr><span><span>Generator</span></span></u></div></span></div><div><div class="title"><p class="paragraph">used to generate the condition which applies the filter in the database</p></div></div></div></div></div></div></div>\n',l={},o="ScalarFilterEntryBase",p={id:"api/graphglue-core/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry-base/-scalar-filter-entry-base-",title:"ScalarFilterEntryBase",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry-base/-scalar-filter-entry-base-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry-base",slug:"/api/graphglue-core/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry-base/-scalar-filter-entry-base-",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry-base/-scalar-filter-entry-base-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"ScalarFilterEntryBase",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry-base/index-"},next:{title:"conditionGenerator",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry-base/condition-generator-"}},c={},d=[];function u(a){const e={h1:"h1",...(0,t.R)(),...a.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"scalarfilterentrybase",children:"ScalarFilterEntryBase"}),"\n",(0,s.jsx)(r.A,{dokkaHTML:i})]})}function g(a={}){const{wrapper:e}={...(0,t.R)(),...a.components};return e?(0,s.jsx)(e,{...a,children:(0,s.jsx)(u,{...a})}):u(a)}}}]);