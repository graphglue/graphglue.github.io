"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[66433],{63002:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>g,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var a=i(74848),r=i(28453),n=i(52358);const s='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">definition<span class="token operator">: </span><a href="../../io.github.graphglue.connection.filter.definition/-node-set-property-filter-definition/index-">NodeSetPropertyFilterDefinition</a><span class="token punctuation">, </span></span><span class="parameter ">entries<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-list/index.html">List</a><span class="token operator">&lt;</span><a href="../-node-relationship-filter-entry/index-">NodeRelationshipFilterEntry</a><span class="token operator">&gt;</span></span></span><span class="token punctuation">)</span></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>definition</span></span></u></div></span></div><div><div class="title"><p class="paragraph">associated definition of the filter</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>entries</span></span></u></div></span></div><div><div class="title"><p class="paragraph">filter entries joined by AND</p></div></div></div></div></div></div></div>\n',o={},l="NodeSetPropertyFilter",p={id:"api/graphglue-core/io.github.graphglue.connection.filter.model/-node-set-property-filter/-node-set-property-filter-",title:"NodeSetPropertyFilter",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.filter.model/-node-set-property-filter/-node-set-property-filter-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.filter.model/-node-set-property-filter",slug:"/api/graphglue-core/io.github.graphglue.connection.filter.model/-node-set-property-filter/-node-set-property-filter-",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.model/-node-set-property-filter/-node-set-property-filter-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"NodeSetPropertyFilter",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.model/-node-set-property-filter/index-"},next:{title:"NodeSubFilter",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.model/-node-sub-filter/index-"}},d={},c=[];function u(e){const t={h1:"h1",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"nodesetpropertyfilter",children:"NodeSetPropertyFilter"}),"\n",(0,a.jsx)(n.A,{dokkaHTML:s})]})}function g(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}}}]);