"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[56735],{64508:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>c,contentTitle:()=>o,default:()=>g,frontMatter:()=>s,metadata:()=>p,toc:()=>d});var n=t(74848),a=t(28453),r=t(52358);const l='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">simpleDefinition<span class="token operator">: </span><a href="../../io.github.graphglue.connection.filter.definition/-simple-filter-entry-definition/index-">SimpleFilterEntryDefinition</a><span class="token punctuation">, </span></span><span class="parameter ">value<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-any/index.html">Any</a></span></span><span class="token punctuation">)</span></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>T</span></span></u></div></span></div><div><div class="title"><p class="paragraph">type of the value used for the condition</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>simple</span><wbr><span><span>Definition</span></span></u></div></span></div><div><div class="title"><p class="paragraph">definition used to generate the condition</p></div></div></div></div></div></div></div>\n',s={},o="SimpleFilterEntry",p={id:"api/graphglue-core/io.github.graphglue.connection.filter.model/-simple-filter-entry/-simple-filter-entry-",title:"SimpleFilterEntry",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.filter.model/-simple-filter-entry/-simple-filter-entry-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.filter.model/-simple-filter-entry",slug:"/api/graphglue-core/io.github.graphglue.connection.filter.model/-simple-filter-entry/-simple-filter-entry-",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.model/-simple-filter-entry/-simple-filter-entry-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"SimpleFilterEntry",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.model/-simple-filter-entry/index-"},next:{title:"generateCondition",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.model/-simple-filter-entry/generate-condition-"}},c={},d=[];function u(e){const i={h1:"h1",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.h1,{id:"simplefilterentry",children:"SimpleFilterEntry"}),"\n",(0,n.jsx)(r.A,{dokkaHTML:l})]})}function g(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}}}]);