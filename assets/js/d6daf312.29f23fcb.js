"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[41572],{98775:(a,e,s)=>{s.r(e),s.d(e,{assets:()=>i,contentTitle:()=>p,default:()=>h,frontMatter:()=>d,metadata:()=>l,toc:()=>c});var t=s(74848),r=s(28453),n=s(52358);const o='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">fun </span><span class="token operator">&lt;</span><a href="get-or-add-">T</a><span class="token operator"> : </span><a href="../../io.github.graphglue.model/-node/index-">Node</a><span class="token operator">?</span><span class="token operator">&gt; </span><a href="get-or-add-"><span class="token function">getOrAdd</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">node<span class="token operator">: </span><a href="get-or-add-">T</a></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="get-or-add-">T</a><span class="token operator">?</span></div><p class="paragraph">Gets the cached node equivalent to <a href="get-or-add-">node</a>, otherwise puts it into the cache If already marked as deleted, or provided <code class="lang-kotlin">null</code>, return <code class="lang-kotlin">null</code></p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the node from the cache or <a href="get-or-add-">node</a></p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>T</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the type of node</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>node</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the node to get</p></div></div></div></div></div></div></div>\n',d={},p="getOrAdd",l={id:"api/graphglue-core/io.github.graphglue.model.property/-node-cache/get-or-add-",title:"getOrAdd",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.model.property/-node-cache/get-or-add-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.model.property/-node-cache",slug:"/api/graphglue-core/io.github.graphglue.model.property/-node-cache/get-or-add-",permalink:"/api/graphglue-core/io.github.graphglue.model.property/-node-cache/get-or-add-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"add",permalink:"/api/graphglue-core/io.github.graphglue.model.property/-node-cache/add-"},next:{title:"internalNodes",permalink:"/api/graphglue-core/io.github.graphglue.model.property/-node-cache/internal-nodes-"}},i={},c=[];function g(a){const e={h1:"h1",...(0,r.R)(),...a.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"getoradd",children:"getOrAdd"}),"\n",(0,t.jsx)(n.A,{dokkaHTML:o})]})}function h(a={}){const{wrapper:e}={...(0,r.R)(),...a.components};return e?(0,t.jsx)(e,{...a,children:(0,t.jsx)(g,{...a})}):g(a)}}}]);