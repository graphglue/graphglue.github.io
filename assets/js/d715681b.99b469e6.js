"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[64913],{12830:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>p,default:()=>g,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var t=a(74848),i=a(28453),r=a(52358);const s='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">open </span><span class="token keyword">override </span><span class="token keyword">fun </span><a href="parse-entry-"><span class="token function">parseEntry</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">value<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-any/index.html">Any</a><span class="token operator">?</span><span class="token punctuation">, </span></span><span class="parameter ">permission<span class="token operator">: </span><a href="../../io.github.graphglue.authorization/-permission/index-">Permission</a><span class="token operator">?</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="../../io.github.graphglue.connection.filter.model/-filter-entry/index-">FilterEntry</a></div><p class="paragraph">Parses the entry of the provided filter</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the parsed filter entry</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>value</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the value to parse</p></div></div></div></div></div></div></div>\n',o={},p="parseEntry",l={id:"api/graphglue-core/io.github.graphglue.connection.filter.definition/-node-set-property-filter-definition/parse-entry-",title:"parseEntry",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.filter.definition/-node-set-property-filter-definition/parse-entry-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.filter.definition/-node-set-property-filter-definition",slug:"/api/graphglue-core/io.github.graphglue.connection.filter.definition/-node-set-property-filter-definition/parse-entry-",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.definition/-node-set-property-filter-definition/parse-entry-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"NodeSetPropertyFilterDefinition",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.definition/-node-set-property-filter-definition/-node-set-property-filter-definition-"},next:{title:"NodeSubFilterDefinition",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.definition/-node-sub-filter-definition/index-"}},c={},d=[];function u(e){const n={h1:"h1",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"parseentry",children:"parseEntry"}),"\n",(0,t.jsx)(r.A,{dokkaHTML:s})]})}function g(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}}}]);