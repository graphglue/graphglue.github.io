"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[47577],{15810:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>d,default:()=>f,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var i=t(74848),n=t(28453),s=t(52358);const l='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">fun </span><a href="of-field-"><span class="token function">ofField</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">field<span class="token operator">: </span><span data-unresolved-link="graphql.schema/SelectedField///PointingToDeclaration/">SelectedField</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="index-">FieldFetchingContext</a></div><p class="paragraph">Creates a new <a href="index-">FieldFetchingContext</a> based on a <a href="of-field-">field</a> Assumes that <a href="of-field-">field</a> is a direct sub-field of the currently represented field</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">a new <a href="index-">FieldFetchingContext</a> representing <a href="of-field-">field</a></p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>field</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the subfield the created <a href="index-">FieldFetchingContext</a> should represent</p></div></div></div></div></div></div></div>\n',r={},d="ofField",o={id:"api/graphglue-core/io.github.graphglue.data.execution/-field-fetching-context/of-field-",title:"ofField",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.execution/-field-fetching-context/of-field-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.execution/-field-fetching-context",slug:"/api/graphglue-core/io.github.graphglue.data.execution/-field-fetching-context/of-field-",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-field-fetching-context/of-field-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"arguments",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-field-fetching-context/arguments-"},next:{title:"resultKeyPath",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-field-fetching-context/result-key-path-"}},c={},p=[];function h(e){const a={h1:"h1",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.h1,{id:"offield",children:"ofField"}),"\n",(0,i.jsx)(s.A,{dokkaHTML:l})]})}function f(e={}){const{wrapper:a}={...(0,n.R)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);