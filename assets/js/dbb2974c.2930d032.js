"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[74126],{85818:(a,e,s)=>{s.r(e),s.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>p,toc:()=>d});var t=s(74848),n=s(28453),l=s(52358);const r='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">open </span><span class="token keyword">override </span><span class="token keyword">fun </span><span class="token operator">&lt;</span><a href="save-all-">T</a><span class="token operator">&gt; </span><a href="save-all-"><span class="token function">saveAll</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">instances<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-mutable-iterable/index.html">MutableIterable</a><span class="token operator">&lt;</span><a href="save-all-">T</a><span class="token operator">&gt;</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><span data-unresolved-link="reactor.core.publisher/Flux///PointingToDeclaration/">Flux</span><span class="token operator">&lt;</span><a href="save-all-">T</a><span class="token operator">&gt;</span></div><p class="paragraph">Saves several instances of an entity Implemented by calling <a href="save-">save</a> for each instance</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the saved instances.</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>instances</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the instances to be saved. Must not be <code class="lang-kotlin">null</code>.</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>T</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the type of the entity.</p></div></div></div></div></div></div></div>\n',i={},o="saveAll",p={id:"api/graphglue-core/io.github.graphglue.data.repositories/-graphglue-neo4j-operations/save-all-",title:"saveAll",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.repositories/-graphglue-neo4j-operations/save-all-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.repositories/-graphglue-neo4j-operations",slug:"/api/graphglue-core/io.github.graphglue.data.repositories/-graphglue-neo4j-operations/save-all-",permalink:"/api/graphglue-core/io.github.graphglue.data.repositories/-graphglue-neo4j-operations/save-all-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"saveAllRelationships",permalink:"/api/graphglue-core/io.github.graphglue.data.repositories/-graphglue-neo4j-operations/save-all-relationships-"},next:{title:"saveAs",permalink:"/api/graphglue-core/io.github.graphglue.data.repositories/-graphglue-neo4j-operations/save-as-"}},c={},d=[];function g(a){const e={h1:"h1",...(0,n.R)(),...a.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"saveall",children:"saveAll"}),"\n",(0,t.jsx)(l.A,{dokkaHTML:r})]})}function u(a={}){const{wrapper:e}={...(0,n.R)(),...a.components};return e?(0,t.jsx)(e,{...a,children:(0,t.jsx)(g,{...a})}):g(a)}}}]);