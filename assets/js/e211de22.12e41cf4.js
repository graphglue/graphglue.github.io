"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[31205],{64429:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>d,contentTitle:()=>p,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var n=t(74848),o=t(28453),i=t(52358);const r='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">fun </span><a href="get-neo4j-name-of-property-"><span class="token function">getNeo4jNameOfProperty</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">property<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.reflect/-k-property1/index.html">KProperty1</a><span class="token operator">&lt;</span><span class="token operator">*</span><span class="token punctuation">, </span><span class="token operator">*</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a></div><p class="paragraph">Gets the Neo4j name of a property</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the name used by Neo4j</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>property</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the property to get the name of</p></div></div></div></div></div></div></div>\n',s={},p="getNeo4jNameOfProperty",l={id:"api/graphglue-core/io.github.graphglue.definition/-node-definition/get-neo4j-name-of-property-",title:"getNeo4jNameOfProperty",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.definition/-node-definition/get-neo4j-name-of-property-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.definition/-node-definition",slug:"/api/graphglue-core/io.github.graphglue.definition/-node-definition/get-neo4j-name-of-property-",permalink:"/api/graphglue-core/io.github.graphglue.definition/-node-definition/get-neo4j-name-of-property-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"getFieldDefinitionOrNull",permalink:"/api/graphglue-core/io.github.graphglue.definition/-node-definition/get-field-definition-or-null-"},next:{title:"getRelationPropertyType",permalink:"/api/graphglue-core/io.github.graphglue.definition/-node-definition/get-relation-property-type-"}},d={},c=[];function g(e){const a={h1:"h1",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h1,{id:"getneo4jnameofproperty",children:"getNeo4jNameOfProperty"}),"\n",(0,n.jsx)(i.A,{dokkaHTML:r})]})}function u(e={}){const{wrapper:a}={...(0,o.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(g,{...e})}):g(e)}}}]);