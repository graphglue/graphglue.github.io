"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[17522],{91447:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>d,toc:()=>p});var a=t(74848),r=t(28453),n=t(52358);const l='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">val </span><a href="node-filter-">nodeFilter</a><span class="token operator">: </span><a href="../-node-filter/index-">NodeFilter</a></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>node</span><wbr><span><span>Filter</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the top level parsed filter</p></div></div></div></div></div></div></div>\n',o={},s="nodeFilter",d={id:"api/graphglue-core/io.github.graphglue.connection.filter.model/-filter/node-filter-",title:"nodeFilter",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.filter.model/-filter/node-filter-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.filter.model/-filter",slug:"/api/graphglue-core/io.github.graphglue.connection.filter.model/-filter/node-filter-",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.model/-filter/node-filter-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"generateCondition",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.model/-filter/generate-condition-"},next:{title:"FilterEntry",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.model/-filter-entry/index-"}},c={},p=[];function g(e){const i={h1:"h1",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.h1,{id:"nodefilter",children:"nodeFilter"}),"\n",(0,a.jsx)(n.A,{dokkaHTML:l})]})}function u(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(g,{...e})}):g(e)}}}]);