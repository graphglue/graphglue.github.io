"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[25629],{36745:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>p,toc:()=>d});var a=n(74848),i=n(28453),r=n(52358);const o='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">entries<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-list/index.html">List</a><span class="token operator">&lt;</span><a href="../../io.github.graphglue.data.execution/-cypher-condition-generator/index-">CypherConditionGenerator</a><span class="token operator">&gt;</span><span class="token operator"> = </span>emptyList()</span></span><span class="token punctuation">)</span></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>entries</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the entries to join</p></div></div></div></div></div></div></div>\n',s={},l="NodeFilter",p={id:"api/graphglue-core/io.github.graphglue.connection.filter.model/-node-filter/-node-filter-",title:"NodeFilter",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.filter.model/-node-filter/-node-filter-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.filter.model/-node-filter",slug:"/api/graphglue-core/io.github.graphglue.connection.filter.model/-node-filter/-node-filter-",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.model/-node-filter/-node-filter-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"NodeFilter",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.model/-node-filter/index-"},next:{title:"entries",permalink:"/api/graphglue-core/io.github.graphglue.connection.filter.model/-node-filter/entries-"}},c={},d=[];function g(e){const t={h1:"h1",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"nodefilter",children:"NodeFilter"}),"\n",(0,a.jsx)(r.A,{dokkaHTML:o})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(g,{...e})}):g(e)}}}]);