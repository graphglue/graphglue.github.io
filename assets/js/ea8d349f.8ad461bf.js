"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[29045],{54892:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>p,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>d,toc:()=>c});var i=r(74848),n=r(28453),s=r(52358);const t='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">val </span><a href="search-query-name-">searchQueryName</a><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>search</span><wbr><span>Query</span><wbr><span><span>Name</span></span></u></div></span></div><div><div class="title"><p class="paragraph">If not empty, a search query of this node type is available with the given name</p></div></div></div></div></div></div></div>\n',o={},l="searchQueryName",d={id:"api/graphglue-core/io.github.graphglue.model/-domain-node/search-query-name-",title:"searchQueryName",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.model/-domain-node/search-query-name-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.model/-domain-node",slug:"/api/graphglue-core/io.github.graphglue.model/-domain-node/search-query-name-",permalink:"/api/graphglue-core/io.github.graphglue.model/-domain-node/search-query-name-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"DomainNode",permalink:"/api/graphglue-core/io.github.graphglue.model/-domain-node/index-"},next:{title:"topLevelQueryName",permalink:"/api/graphglue-core/io.github.graphglue.model/-domain-node/top-level-query-name-"}},p={},c=[];function u(e){const a={h1:"h1",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.h1,{id:"searchqueryname",children:"searchQueryName"}),"\n",(0,i.jsx)(s.A,{dokkaHTML:t})]})}function h(e={}){const{wrapper:a}={...(0,n.R)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}}}]);