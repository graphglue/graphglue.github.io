"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[44205],{50722:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>d,default:()=>g,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var o=t(74848),a=t(28453),n=t(52358);const p='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">private </span><span class="token keyword">var </span><a href="current-">current</a><span class="token operator">: </span><a href="../../index-">T</a><span class="token operator">?</span></div><p class="paragraph">The current value, which should be removed on <a href="remove-">remove</a></p></div></div>\n',s={},d="current",i={id:"api/graphglue-core/io.github.graphglue.model.property/-node-set-property-delegate/-node-set-property/-node-set-iterator/current-",title:"current",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.model.property/-node-set-property-delegate/-node-set-property/-node-set-iterator/current-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.model.property/-node-set-property-delegate/-node-set-property/-node-set-iterator",slug:"/api/graphglue-core/io.github.graphglue.model.property/-node-set-property-delegate/-node-set-property/-node-set-iterator/current-",permalink:"/api/graphglue-core/io.github.graphglue.model.property/-node-set-property-delegate/-node-set-property/-node-set-iterator/current-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"NodeSetIterator",permalink:"/api/graphglue-core/io.github.graphglue.model.property/-node-set-property-delegate/-node-set-property/-node-set-iterator/-node-set-iterator-"},next:{title:"hasNext",permalink:"/api/graphglue-core/io.github.graphglue.model.property/-node-set-property-delegate/-node-set-property/-node-set-iterator/has-next-"}},l={},c=[];function u(e){const r={h1:"h1",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.h1,{id:"current",children:"current"}),"\n",(0,o.jsx)(n.A,{dokkaHTML:p})]})}function g(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}}}]);