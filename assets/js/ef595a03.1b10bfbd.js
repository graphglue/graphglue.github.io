"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[45913],{41207:(a,e,s)=>{s.r(e),s.d(e,{assets:()=>d,contentTitle:()=>i,default:()=>g,frontMatter:()=>p,metadata:()=>l,toc:()=>u});var n=s(74848),t=s(28453),r=s(52358);const o='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">private </span><span class="token keyword">fun </span><a href="parse-node-"><span class="token function">parseNode</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">value<span class="token operator">: </span><span data-unresolved-link="org.neo4j.driver/Value///PointingToDeclaration/">Value</span><span class="token punctuation">, </span></span><span class="parameter ">nodeQuery<span class="token operator">: </span><a href="../-query-base/index-">QueryBase</a><span class="token operator">&lt;</span><span class="token operator">*</span><span class="token operator">&gt;</span><span class="token punctuation">, </span></span><span class="parameter ">entriesResults<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-map/index.html">Map</a><span class="token operator">&lt;</span><a href="../-node-sub-query/index-">NodeSubQuery</a><span class="token punctuation">, </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-map/index.html">Map</a><span class="token operator">&lt;</span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a><span class="token punctuation">, </span><span data-unresolved-link="org.neo4j.driver/Value///PointingToDeclaration/">Value</span><span class="token operator">&gt;</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="../../io.github.graphglue.model/-node/index-">Node</a></div><p class="paragraph">Parses a single node Parses SubQueries recursively</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the parsed node</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>value</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the returned value for the node</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>node</span><wbr><span><span>Query</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the query used to get the results</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>entries</span><wbr><span><span>Results</span></span></u></div></span></div><div><div class="title"><p class="paragraph">lookup from sub query and parent node id to related nodes (not parsed yet)</p></div></div></div></div></div></div></div>\n',p={},i="parseNode",l={id:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/parse-node-",title:"parseNode",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/parse-node-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor",slug:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/parse-node-",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/parse-node-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"parseNodeEntries",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/parse-node-entries-"},next:{title:"parseQueryResultInternal",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-executor/parse-query-result-internal-"}},d={},u=[];function c(a){const e={h1:"h1",...(0,t.R)(),...a.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{id:"parsenode",children:"parseNode"}),"\n",(0,n.jsx)(r.A,{dokkaHTML:o})]})}function g(a={}){const{wrapper:e}={...(0,t.R)(),...a.components};return e?(0,n.jsx)(e,{...a,children:(0,n.jsx)(c,{...a})}):c(a)}}}]);