"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[93907],{39652:(a,e,r)=>{r.r(e),r.d(e,{assets:()=>c,contentTitle:()=>p,default:()=>d,frontMatter:()=>t,metadata:()=>l,toc:()=>u});var i=r(74848),s=r(28453),n=r(52358);const o='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">maxQueryCost<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-int/index.html">Int</a><span class="token operator"> = </span><span class="token constant">10</span><span class="token punctuation">, </span></span><span class="parameter ">useNeo4jPlugin<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-boolean/index.html">Boolean</a><span class="token operator"> = </span><span class="token boolean">false</span></span></span><span class="token punctuation">)</span></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>max</span><wbr><span>Query</span><wbr><span><span>Cost</span></span></u></div></span></div><div><div class="title"><p class="paragraph">The maximum allowed query complexity</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>use</span><wbr><span>Neo4j</span><wbr><span><span>Plugin</span></span></u></div></span></div><div><div class="title"><p class="paragraph">If true, authorization checks use the io.github.graphglue.authorizationPath custom procedure to improve efficiency. This procedure must be provided via a database plugin</p></div></div></div></div></div></div></div>\n',t={},p="GraphglueCoreConfigurationProperties",l={id:"api/graphglue-core/io.github.graphglue/-graphglue-core-configuration-properties/-graphglue-core-configuration-properties-",title:"GraphglueCoreConfigurationProperties",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue/-graphglue-core-configuration-properties/-graphglue-core-configuration-properties-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue/-graphglue-core-configuration-properties",slug:"/api/graphglue-core/io.github.graphglue/-graphglue-core-configuration-properties/-graphglue-core-configuration-properties-",permalink:"/api/graphglue-core/io.github.graphglue/-graphglue-core-configuration-properties/-graphglue-core-configuration-properties-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"GraphglueCoreConfigurationProperties",permalink:"/api/graphglue-core/io.github.graphglue/-graphglue-core-configuration-properties/index-"},next:{title:"maxQueryCost",permalink:"/api/graphglue-core/io.github.graphglue/-graphglue-core-configuration-properties/max-query-cost-"}},c={},u=[];function g(a){const e={h1:"h1",...(0,s.R)(),...a.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"graphgluecoreconfigurationproperties",children:"GraphglueCoreConfigurationProperties"}),"\n",(0,i.jsx)(n.A,{dokkaHTML:o})]})}function d(a={}){const{wrapper:e}={...(0,s.R)(),...a.components};return e?(0,i.jsx)(e,{...a,children:(0,i.jsx)(g,{...a})}):g(a)}}}]);