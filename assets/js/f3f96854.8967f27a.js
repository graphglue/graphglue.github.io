"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[71300],{8826:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>g,frontMatter:()=>s,metadata:()=>p,toc:()=>c});var r=i(74848),a=i(28453),n=i(52358);const o='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">val </span><a href="entries-">entries</a><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.enums/-enum-entries/index.html">EnumEntries</a><span class="token operator">&lt;</span><a href="index-">Direction</a><span class="token operator">&gt;</span></div><p class="paragraph">Returns a representation of an immutable list of all enum entries, in the order they\'re declared.</p><p class="paragraph">This method may be used to iterate over the enum entries.</p></div></div>\n',s={},l="entries",p={id:"api/graphglue-core/io.github.graphglue.model/-direction/entries-",title:"entries",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.model/-direction/entries-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.model/-direction",slug:"/api/graphglue-core/io.github.graphglue.model/-direction/entries-",permalink:"/api/graphglue-core/io.github.graphglue.model/-direction/entries-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Direction",permalink:"/api/graphglue-core/io.github.graphglue.model/-direction/-direction-"},next:{title:"valueOf",permalink:"/api/graphglue-core/io.github.graphglue.model/-direction/value-of-"}},d={},c=[];function u(e){const t={h1:"h1",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"entries",children:"entries"}),"\n",(0,r.jsx)(n.A,{dokkaHTML:o})]})}function g(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}}}]);