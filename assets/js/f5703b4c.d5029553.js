"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[31685],{90706:(a,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>r,default:()=>g,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var s=n(74848),i=n(28453),t=n(52358);const l='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">definition<span class="token operator">: </span><a href="../../io.github.graphglue.definition/-extension-field-definition/index-">ExtensionFieldDefinition</a><span class="token punctuation">, </span></span><span class="parameter ">dfe<span class="token operator">: </span><span data-unresolved-link="graphql.schema/DataFetchingEnvironment///PointingToDeclaration/">DataFetchingEnvironment</span><span class="token punctuation">, </span></span><span class="parameter ">arguments<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-map/index.html">Map</a><span class="token operator">&lt;</span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a><span class="token punctuation">, </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-any/index.html">Any</a><span class="token operator">&gt;</span><span class="token punctuation">, </span></span><span class="parameter ">onlyOnTypes<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.collections/-list/index.html">List</a><span class="token operator">&lt;</span><a href="../../io.github.graphglue.definition/-node-definition/index-">NodeDefinition</a><span class="token operator">&gt;</span><span class="token operator">?</span><span class="token punctuation">, </span></span><span class="parameter ">resultKeyPath<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a></span></span><span class="token punctuation">)</span></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>definition</span></span></u></div></span></div><div><div class="title"><p class="paragraph">defines the extension field and provides the generator for the expression</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>dfe</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the data fetching environment required to generate the expression</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>arguments</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the arguments provided for this field</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>only</span><wbr><span>On</span><wbr><span><span>Types</span></span></u></div></span></div><div><div class="title"><p class="paragraph">a list of parent types on which this should be evaluated</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>result</span><wbr><span>Key</span><wbr><span><span>Path</span></span></u></div></span></div><div><div class="title"><p class="paragraph">path to the key which fetches this field</p></div></div></div></div></div></div></div>\n',o={},r="NodeExtensionField",p={id:"api/graphglue-core/io.github.graphglue.data.execution/-node-extension-field/-node-extension-field-",title:"NodeExtensionField",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.execution/-node-extension-field/-node-extension-field-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.execution/-node-extension-field",slug:"/api/graphglue-core/io.github.graphglue.data.execution/-node-extension-field/-node-extension-field-",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-extension-field/-node-extension-field-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"NodeExtensionField",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-extension-field/index-"},next:{title:"arguments",permalink:"/api/graphglue-core/io.github.graphglue.data.execution/-node-extension-field/arguments-"}},d={},c=[];function u(a){const e={h1:"h1",...(0,i.R)(),...a.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"nodeextensionfield",children:"NodeExtensionField"}),"\n",(0,s.jsx)(t.A,{dokkaHTML:l})]})}function g(a={}){const{wrapper:e}={...(0,i.R)(),...a.components};return e?(0,s.jsx)(e,{...a,children:(0,s.jsx)(u,{...a})}):u(a)}}}]);