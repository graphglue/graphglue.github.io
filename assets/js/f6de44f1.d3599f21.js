"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[10621],{48229:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>p,metadata:()=>l,toc:()=>d});var s=r(74848),n=r(28453),t=r(52358);const o='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">fun </span><a href="parse-order-"><span class="token function">parseOrder</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">value<span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-any/index.html">Any</a></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="-order/index-">Order</a><span class="token operator">&lt;</span><span class="token operator">*</span><span class="token operator">&gt;</span></div><p class="paragraph">Parses the GraphQL input for an <a href="-order/index-">Order</a></p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the parsed <a href="-order/index-">Order</a></p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>value</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the input value from the GraphQL API</p></div></div></div></div></div></div></div>\n',p={},i="parseOrder",l={id:"api/graphglue-core/io.github.graphglue.connection.order/parse-order-",title:"parseOrder",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.order/parse-order-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.order",slug:"/api/graphglue-core/io.github.graphglue.connection.order/parse-order-",permalink:"/api/graphglue-core/io.github.graphglue.connection.order/parse-order-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"generateOrders",permalink:"/api/graphglue-core/io.github.graphglue.connection.order/generate-orders-"},next:{title:"toEnumNameCase",permalink:"/api/graphglue-core/io.github.graphglue.connection.order/to-enum-name-case-"}},c={},d=[];function u(e){const a={h1:"h1",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.h1,{id:"parseorder",children:"parseOrder"}),"\n",(0,s.jsx)(t.A,{dokkaHTML:o})]})}function h(e={}){const{wrapper:a}={...(0,n.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}}}]);