"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[47583],{23828:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>d,contentTitle:()=>l,default:()=>g,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var i=t(74848),r=t(28453),n=t(52358);const s='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">val </span><a href="type-">type</a><span class="token operator">: </span><a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-string/index.html">String</a></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>type</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the associated relationship type in the database</p></div></div></div></div></div></div></div>\n',o={},l="type",p={id:"api/graphglue-core/io.github.graphglue.model/-node-relationship/type-",title:"type",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.model/-node-relationship/type-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.model/-node-relationship",slug:"/api/graphglue-core/io.github.graphglue.model/-node-relationship/type-",permalink:"/api/graphglue-core/io.github.graphglue.model/-node-relationship/type-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"direction",permalink:"/api/graphglue-core/io.github.graphglue.model/-node-relationship/direction-"},next:{title:"NodeSetPropertyProvider",permalink:"/api/graphglue-core/io.github.graphglue.model/-node-set-property-provider/index-"}},d={},c=[];function h(e){const a={h1:"h1",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.h1,{id:"type",children:"type"}),"\n",(0,i.jsx)(n.A,{dokkaHTML:s})]})}function g(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);