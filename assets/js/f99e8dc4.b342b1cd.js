"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[94227],{56577:(a,e,s)=>{s.r(e),s.d(e,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var t=s(74848),n=s(28453),r=s(52358);const p='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">private </span><span class="token keyword">fun </span><a href="update-query-type-"><span class="token function">updateQueryType</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">queryType<span class="token operator">: </span><span data-unresolved-link="graphql.schema/GraphQLObjectType///PointingToDeclaration/">GraphQLObjectType</span><span class="token punctuation">, </span></span><span class="parameter ">context<span class="token operator">: </span><a href="../-schema-transformation-context/index-">SchemaTransformationContext</a></span></span><span class="token punctuation">)</span><span class="token operator">: </span><span data-unresolved-link="graphql.schema/GraphQLObjectType///PointingToDeclaration/">GraphQLObjectType</span></div><p class="paragraph">Adds the missing connection like queries for <a href="../../io.github.graphglue.model/-node/index-">Node</a> types declared using the <a href="../../io.github.graphglue.model/-domain-node/index-">DomainNode</a> annotation</p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the new query type</p></span><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>query</span><wbr><span><span>Type</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the existing query type</p></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core/main" data-filterable-set=":graphglue-core/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>context</span></span></u></div></span></div><div><div class="title"><p class="paragraph">used to access the <span data-unresolved-link="graphql.schema/GraphQLCodeRegistry.Builder///PointingToDeclaration/">GraphQLCodeRegistry.Builder</span></p></div></div></div></div></div></div></div>\n',i={},l="updateQueryType",o={id:"api/graphglue-core/io.github.graphglue.graphql.schema/-default-schema-transformer/update-query-type-",title:"updateQueryType",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.graphql.schema/-default-schema-transformer/update-query-type-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.graphql.schema/-default-schema-transformer",slug:"/api/graphglue-core/io.github.graphglue.graphql.schema/-default-schema-transformer/update-query-type-",permalink:"/api/graphglue-core/io.github.graphglue.graphql.schema/-default-schema-transformer/update-query-type-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"updateObjectNodeType",permalink:"/api/graphglue-core/io.github.graphglue.graphql.schema/-default-schema-transformer/update-object-node-type-"},next:{title:"FieldDataFetchingEnvironment",permalink:"/api/graphglue-core/io.github.graphglue.graphql.schema/-field-data-fetching-environment/index-"}},c={},d=[];function u(a){const e={h1:"h1",...(0,n.R)(),...a.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"updatequerytype",children:"updateQueryType"}),"\n",(0,t.jsx)(r.A,{dokkaHTML:p})]})}function h(a={}){const{wrapper:e}={...(0,n.R)(),...a.components};return e?(0,t.jsx)(e,{...a,children:(0,t.jsx)(u,{...a})}):u(a)}}}]);