"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[88388],{21817:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>n,metadata:()=>p,toc:()=>g});var t=r(74848),o=r(28453),u=r(52358);const s='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":graphglue-core/main"><div class="symbol monospace"><span class="token keyword">fun </span><a href="to-sub-query-"><span class="token function">toSubQuery</span></a><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">: </span><a href="../../io.github.graphglue.data.execution/-node-sub-query/index-">NodeSubQuery</a></div><p class="paragraph">Creates a <a href="../../io.github.graphglue.data.execution/-node-sub-query/index-">NodeSubQuery</a> based of the registered <a href="sub-queries-">subQueries</a></p><span class="kdoc-tag"><h4 class="">Return</h4><p class="paragraph">the created subquery</p></span></div></div>\n',n={},i="toSubQuery",p={id:"api/graphglue-core/io.github.graphglue.model.property/-lazy-loading-subquery-generator/to-sub-query-",title:"toSubQuery",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.model.property/-lazy-loading-subquery-generator/to-sub-query-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.model.property/-lazy-loading-subquery-generator",slug:"/api/graphglue-core/io.github.graphglue.model.property/-lazy-loading-subquery-generator/to-sub-query-",permalink:"/api/graphglue-core/io.github.graphglue.model.property/-lazy-loading-subquery-generator/to-sub-query-",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"subQueries",permalink:"/api/graphglue-core/io.github.graphglue.model.property/-lazy-loading-subquery-generator/sub-queries-"},next:{title:"NodeCache",permalink:"/api/graphglue-core/io.github.graphglue.model.property/-node-cache/index-"}},l={},g=[];function d(e){const a={h1:"h1",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.h1,{id:"tosubquery",children:"toSubQuery"}),"\n",(0,t.jsx)(u.A,{dokkaHTML:s})]})}function c(e={}){const{wrapper:a}={...(0,o.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);